

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Feb 08 17:44:23 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1526
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	idataBANK4,global,class=CODE,delta=2
     8                           	psect	idataBANK5,global,class=CODE,delta=2
     9                           	psect	stringtext1,global,class=STRCODE,delta=2
    10                           	psect	stringtext2,global,class=STRCODE,delta=2
    11                           	psect	stringtext3,global,class=STRCODE,delta=2
    12                           	psect	stringtext4,global,class=STRCODE,delta=2
    13                           	psect	stringtext5,global,class=STRCODE,delta=2
    14                           	psect	stringtext6,global,class=STRCODE,delta=2
    15                           	psect	stringtext7,global,class=STRCODE,delta=2
    16                           	psect	stringtext8,global,class=STRCODE,delta=2
    17                           	psect	stringtext9,global,class=STRCODE,delta=2
    18                           	psect	stringtext10,global,class=STRCODE,delta=2
    19                           	psect	cinit,global,class=CODE,merge=1,delta=2
    20                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    25                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    26                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    27                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    28                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    29                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    30                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    31                           	psect	inittext,global,class=CODE,delta=2
    32                           	psect	clrtext,global,class=CODE,delta=2
    33                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    34                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    35                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    36                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    37                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    38                           	psect	swtext1,local,class=CONST,delta=2
    39                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text6,local,class=CODE,merge=1,delta=2
    45                           	psect	text7,local,class=CODE,merge=1,delta=2
    46                           	psect	text8,local,class=CODE,merge=1,delta=2
    47                           	psect	swtext2,local,class=CONST,delta=2
    48                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text11,local,class=CODE,merge=1,delta=2
    51                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text13,local,class=CODE,merge=1,delta=2
    53                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text16,local,class=CODE,merge=1,delta=2
    56                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text26,local,class=CODE,merge=1,delta=2
    66                           	psect	text27,local,class=CODE,merge=1,delta=2
    67                           	psect	text28,local,class=CODE,merge=1,delta=2
    68                           	psect	text29,local,class=CODE,merge=1,delta=2
    69                           	psect	text30,local,class=CODE,merge=1,delta=2
    70                           	psect	text31,local,class=CODE,merge=1,delta=2
    71                           	psect	text32,local,class=CODE,merge=1,delta=2
    72                           	psect	text33,local,class=CODE,merge=1,delta=2
    73                           	psect	text34,local,class=CODE,merge=1,delta=2
    74                           	psect	text35,local,class=CODE,merge=1,delta=2
    75                           	psect	text36,local,class=CODE,merge=1,delta=2
    76                           	psect	text37,local,class=CODE,merge=1,delta=2
    77                           	psect	text38,local,class=CODE,merge=1,delta=2
    78                           	psect	text39,local,class=CODE,merge=1,delta=2
    79                           	psect	text40,local,class=CODE,merge=1,delta=2
    80                           	psect	text41,local,class=CODE,merge=1,delta=2
    81                           	psect	text42,local,class=CODE,merge=1,delta=2
    82                           	psect	text43,local,class=CODE,merge=1,delta=2
    83                           	psect	text44,local,class=CODE,merge=1,delta=2
    84                           	psect	text45,local,class=CODE,merge=1,delta=2
    85                           	psect	text46,local,class=CODE,merge=1,delta=2
    86                           	psect	intentry,global,class=CODE,delta=2
    87                           	psect	text48,local,class=CODE,merge=1,delta=2
    88                           	dabs	1,0x7E,2
    89  0000                     
    90                           ; Version 1.45
    91                           ; Generated 16/11/2017 GMT
    92                           ; 
    93                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    94                           ; All rights reserved.
    95                           ; 
    96                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    97                           ; 
    98                           ; Redistribution and use in source and binary forms, with or without modification, are
    99                           ; permitted provided that the following conditions are met:
   100                           ; 
   101                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   102                           ;        conditions and the following disclaimer.
   103                           ; 
   104                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   105                           ;        of conditions and the following disclaimer in the documentation and/or other
   106                           ;        materials provided with the distribution.
   107                           ; 
   108                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   109                           ;        software without specific prior written permission.
   110                           ; 
   111                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   112                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   113                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   114                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   115                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   116                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   117                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   118                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   119                           ; 
   120                           ; 
   121                           ; Code-generator required, PIC16F1526 Definitions
   122                           ; 
   123                           ; SFR Addresses
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0016                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001C                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  008F                     	;# 
   158  0090                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0095                     	;# 
   164  0096                     	;# 
   165  0097                     	;# 
   166  0099                     	;# 
   167  009A                     	;# 
   168  009B                     	;# 
   169  009B                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  0110                     	;# 
   178  0116                     	;# 
   179  0117                     	;# 
   180  011D                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  018F                     	;# 
   184  0190                     	;# 
   185  0191                     	;# 
   186  0191                     	;# 
   187  0192                     	;# 
   188  0193                     	;# 
   189  0193                     	;# 
   190  0194                     	;# 
   191  0195                     	;# 
   192  0196                     	;# 
   193  0197                     	;# 
   194  0199                     	;# 
   195  0199                     	;# 
   196  0199                     	;# 
   197  019A                     	;# 
   198  019A                     	;# 
   199  019A                     	;# 
   200  019B                     	;# 
   201  019B                     	;# 
   202  019B                     	;# 
   203  019B                     	;# 
   204  019B                     	;# 
   205  019C                     	;# 
   206  019C                     	;# 
   207  019C                     	;# 
   208  019D                     	;# 
   209  019D                     	;# 
   210  019D                     	;# 
   211  019E                     	;# 
   212  019E                     	;# 
   213  019E                     	;# 
   214  019F                     	;# 
   215  019F                     	;# 
   216  019F                     	;# 
   217  020D                     	;# 
   218  020F                     	;# 
   219  0210                     	;# 
   220  0211                     	;# 
   221  0211                     	;# 
   222  0212                     	;# 
   223  0212                     	;# 
   224  0213                     	;# 
   225  0213                     	;# 
   226  0214                     	;# 
   227  0214                     	;# 
   228  0215                     	;# 
   229  0215                     	;# 
   230  0215                     	;# 
   231  0216                     	;# 
   232  0216                     	;# 
   233  0217                     	;# 
   234  0217                     	;# 
   235  0219                     	;# 
   236  021A                     	;# 
   237  021B                     	;# 
   238  021C                     	;# 
   239  021D                     	;# 
   240  021E                     	;# 
   241  021F                     	;# 
   242  028C                     	;# 
   243  028D                     	;# 
   244  0291                     	;# 
   245  0291                     	;# 
   246  0292                     	;# 
   247  0293                     	;# 
   248  0298                     	;# 
   249  0298                     	;# 
   250  0299                     	;# 
   251  029A                     	;# 
   252  029D                     	;# 
   253  029E                     	;# 
   254  029F                     	;# 
   255  030C                     	;# 
   256  030D                     	;# 
   257  0311                     	;# 
   258  0311                     	;# 
   259  0312                     	;# 
   260  0313                     	;# 
   261  0318                     	;# 
   262  0318                     	;# 
   263  0319                     	;# 
   264  031A                     	;# 
   265  031C                     	;# 
   266  031C                     	;# 
   267  031D                     	;# 
   268  031E                     	;# 
   269  038C                     	;# 
   270  038D                     	;# 
   271  0394                     	;# 
   272  0395                     	;# 
   273  0396                     	;# 
   274  040C                     	;# 
   275  040D                     	;# 
   276  0411                     	;# 
   277  0411                     	;# 
   278  0412                     	;# 
   279  0413                     	;# 
   280  0414                     	;# 
   281  0415                     	;# 
   282  0416                     	;# 
   283  0417                     	;# 
   284  0418                     	;# 
   285  0418                     	;# 
   286  0419                     	;# 
   287  041A                     	;# 
   288  041B                     	;# 
   289  041C                     	;# 
   290  041D                     	;# 
   291  041E                     	;# 
   292  048D                     	;# 
   293  0491                     	;# 
   294  0491                     	;# 
   295  0492                     	;# 
   296  0492                     	;# 
   297  0493                     	;# 
   298  0493                     	;# 
   299  0493                     	;# 
   300  0494                     	;# 
   301  0494                     	;# 
   302  0495                     	;# 
   303  0495                     	;# 
   304  0496                     	;# 
   305  0496                     	;# 
   306  0497                     	;# 
   307  0497                     	;# 
   308  0595                     	;# 
   309  0596                     	;# 
   310  0597                     	;# 
   311  059C                     	;# 
   312  059D                     	;# 
   313  059E                     	;# 
   314  0611                     	;# 
   315  0611                     	;# 
   316  0612                     	;# 
   317  0613                     	;# 
   318  0614                     	;# 
   319  0614                     	;# 
   320  0615                     	;# 
   321  0616                     	;# 
   322  0617                     	;# 
   323  0617                     	;# 
   324  0618                     	;# 
   325  0619                     	;# 
   326  061A                     	;# 
   327  061A                     	;# 
   328  061B                     	;# 
   329  061C                     	;# 
   330  061D                     	;# 
   331  061D                     	;# 
   332  061E                     	;# 
   333  061F                     	;# 
   334  0FE4                     	;# 
   335  0FE5                     	;# 
   336  0FE6                     	;# 
   337  0FE7                     	;# 
   338  0FE8                     	;# 
   339  0FE9                     	;# 
   340  0FEA                     	;# 
   341  0FEB                     	;# 
   342  0FED                     	;# 
   343  0FEE                     	;# 
   344  0FEF                     	;# 
   345                           
   346                           	psect	idataBANK1
   347  16B7                     __pidataBANK1:	
   348                           
   349                           ;initializer for _charchildLock
   350  16B7  3430               	retlw	48
   351                           
   352                           ;initializer for _levelofGreenLed_LSB
   353  16B8  3430               	retlw	48
   354                           
   355                           ;initializer for _levelofGreenLed_MSB
   356  16B9  3430               	retlw	48
   357                           
   358                           ;initializer for _levelofRedLed_LSB
   359  16BA  3430               	retlw	48
   360                           
   361                           ;initializer for _levelofRedLed_MSB
   362  16BB  3430               	retlw	48
   363                           
   364                           ;initializer for _levelofBlueLed_LSB
   365  16BC  3430               	retlw	48
   366                           
   367                           ;initializer for _levelofBlueLed_MSB
   368  16BD  3430               	retlw	48
   369                           
   370                           ;initializer for _levelofDimmer_LSB
   371  16BE  3430               	retlw	48
   372                           
   373                           ;initializer for _levelofDimmer_MSB
   374  16BF  3430               	retlw	48
   375                           
   376                           	psect	idataBANK2
   377  168B                     __pidataBANK2:	
   378                           
   379                           ;initializer for applianceControl@F3976
   380  168B  3423               	retlw	35
   381  168C  3400               	retlw	0
   382                           
   383                           ;initializer for applianceControl@F3974
   384  168D  3423               	retlw	35
   385  168E  3400               	retlw	0
   386                           
   387                           ;initializer for _charSwitchState
   388  168F  3430               	retlw	48
   389                           
   390                           	psect	idataBANK3
   391  0940                     __pidataBANK3:	
   392                           
   393                           ;initializer for _copy_parentalLockBuffer
   394  0940  3430               	retlw	48
   395  0941  3430               	retlw	48
   396  0942  3430               	retlw	48
   397  0943  3430               	retlw	48
   398  0944  3430               	retlw	48
   399  0945  3430               	retlw	48
   400  0946  3430               	retlw	48
   401  0947  3430               	retlw	48
   402  0948  3430               	retlw	48
   403  0949  3430               	retlw	48
   404  094A  3430               	retlw	48
   405  094B  3430               	retlw	48
   406  094C  3400               	retlw	0
   407  094D  3400               	retlw	0
   408                           
   409                           ;initializer for _tempReceivedDataBuffer
   410  094E  3423               	retlw	35
   411  094F  3400               	retlw	0
   412  0950  3400               	retlw	0
   413  0951  3400               	retlw	0
   414  0952  3400               	retlw	0
   415  0953  3400               	retlw	0
   416  0954  3400               	retlw	0
   417  0955  3400               	retlw	0
   418  0956  3400               	retlw	0
   419  0957  3400               	retlw	0
   420                           
   421                           ;initializer for _ErrorNames
   422  0958  3423               	retlw	35
   423  0959  3423               	retlw	35
   424  095A  3423               	retlw	35
   425  095B  3423               	retlw	35
   426  095C  3400               	retlw	0
   427                           
   428                           ;initializer for _mainReceivedDataBuffer
   429  095D  3423               	retlw	35
   430  095E  3400               	retlw	0
   431  095F  3400               	retlw	0
   432  0960  3400               	retlw	0
   433  0961  3400               	retlw	0
   434  0962  3400               	retlw	0
   435  0963  3400               	retlw	0
   436  0964  3400               	retlw	0
   437  0965  3400               	retlw	0
   438  0966  3400               	retlw	0
   439  0967  3400               	retlw	0
   440  0968  3400               	retlw	0
   441  0969  3400               	retlw	0
   442  096A  3400               	retlw	0
   443  096B  3400               	retlw	0
   444  096C  3400               	retlw	0
   445  096D  3400               	retlw	0
   446  096E  3400               	retlw	0
   447                           
   448                           	psect	idataBANK4
   449  171E                     __pidataBANK4:	
   450                           
   451                           ;initializer for _parentalLockBuffer
   452  171E  3430               	retlw	48
   453  171F  3430               	retlw	48
   454  1720  3430               	retlw	48
   455  1721  3430               	retlw	48
   456  1722  3430               	retlw	48
   457  1723  3430               	retlw	48
   458  1724  3430               	retlw	48
   459  1725  3430               	retlw	48
   460  1726  3430               	retlw	48
   461  1727  3430               	retlw	48
   462  1728  3430               	retlw	48
   463  1729  3430               	retlw	48
   464  172A  3400               	retlw	0
   465  172B  3400               	retlw	0
   466                           
   467                           	psect	idataBANK5
   468  0A9C                     __pidataBANK5:	
   469                           
   470                           ;initializer for _currentStateBuffer
   471  0A9C  3423               	retlw	35
   472  0A9D  3400               	retlw	0
   473  0A9E  3400               	retlw	0
   474  0A9F  3400               	retlw	0
   475  0AA0  3400               	retlw	0
   476  0AA1  3400               	retlw	0
   477  0AA2  3400               	retlw	0
   478  0AA3  3400               	retlw	0
   479  0AA4  3400               	retlw	0
   480  0AA5  3400               	retlw	0
   481  0AA6  3400               	retlw	0
   482  0AA7  3400               	retlw	0
   483  0AA8  3400               	retlw	0
   484  0AA9  3400               	retlw	0
   485  0AAA  3400               	retlw	0
   486  0AAB  3400               	retlw	0
   487  0AAC  3400               	retlw	0
   488  0AAD  3400               	retlw	0
   489  0AAE  3400               	retlw	0
   490  0AAF  3400               	retlw	0
   491  0AB0  3400               	retlw	0
   492  0AB1  3400               	retlw	0
   493  0AB2  3400               	retlw	0
   494  0AB3  3400               	retlw	0
   495  0AB4  3400               	retlw	0
   496  0AB5  3400               	retlw	0
   497  0AB6  3400               	retlw	0
   498  0AB7  3400               	retlw	0
   499  0AB8  3400               	retlw	0
   500  0AB9  3400               	retlw	0
   501  0ABA  3400               	retlw	0
   502  0ABB  3400               	retlw	0
   503  0ABC  3400               	retlw	0
   504  0ABD  3400               	retlw	0
   505  0ABE  3400               	retlw	0
   506  0ABF  3400               	retlw	0
   507  0AC0  3400               	retlw	0
   508  0AC1  3400               	retlw	0
   509  0AC2  3400               	retlw	0
   510  0AC3  3400               	retlw	0
   511  0AC4  3400               	retlw	0
   512  0AC5  3400               	retlw	0
   513  0AC6  3400               	retlw	0
   514  0AC7  3400               	retlw	0
   515  0AC8  3400               	retlw	0
   516  0AC9  3400               	retlw	0
   517  0ACA  3400               	retlw	0
   518  0ACB  3400               	retlw	0
   519  0ACC  3400               	retlw	0
   520  0ACD  3400               	retlw	0
   521  0ACE  3400               	retlw	0
   522  0ACF  3400               	retlw	0
   523  0AD0  3400               	retlw	0
   524  0AD1  3400               	retlw	0
   525  0AD2  3400               	retlw	0
   526  0AD3  3400               	retlw	0
   527  0AD4  3400               	retlw	0
   528  0AD5  3400               	retlw	0
   529                           
   530                           	psect	stringtext1
   531  1800                     __pstringtext1:	
   532  1800                     _hexpowers:	
   533  1800  3401               	retlw	1
   534  1801  3400               	retlw	0
   535  1802  3410               	retlw	16
   536  1803  3400               	retlw	0
   537  1804  3400               	retlw	0
   538  1805  3401               	retlw	1
   539  1806  3400               	retlw	0
   540  1807  3410               	retlw	16
   541  1808                     __end_of_hexpowers:	
   542  0012                     _PIR2bits	set	18
   543  001A                     _TMR2	set	26
   544  001C                     _T2CON	set	28
   545  0013                     _PIR3bits	set	19
   546  0019                     _T1GCON	set	25
   547  0018                     _T1CON	set	24
   548  000D                     _PORTBbits	set	13
   549  0016                     _TMR1L	set	22
   550  0017                     _TMR1H	set	23
   551  0014                     _PIR4bits	set	20
   552  001B                     _PR2	set	27
   553  0018                     _T1CONbits	set	24
   554  001C                     _T2CONbits	set	28
   555  0011                     _PIR1bits	set	17
   556  000F                     _PORTDbits	set	15
   557  0010                     _PORTEbits	set	16
   558  005E                     _PEIE	set	94
   559  005F                     _GIE	set	95
   560  00A7                     _CCP10IF	set	167
   561  008D                     _RC1IF	set	141
   562  0094                     _PIE4bits	set	148
   563  0092                     _PIE2bits	set	146
   564  0093                     _PIE3bits	set	147
   565  008E                     _TRISCbits	set	142
   566  0090                     _TRISEbits	set	144
   567  008D                     _TRISBbits	set	141
   568  008F                     _TRISDbits	set	143
   569  0091                     _PIE1bits	set	145
   570  018C                     _ANSELA	set	396
   571  018D                     _ANSELB	set	397
   572  018F                     _ANSELD	set	399
   573  0190                     _ANSELE	set	400
   574  019A                     _TX1REG	set	410
   575  019E                     _TX1STAbits	set	414
   576  019C                     _SP1BRGH	set	412
   577  019B                     _SP1BRGL	set	411
   578  019E                     _TX1STA	set	414
   579  019D                     _RC1STA	set	413
   580  019F                     _BAUD1CON	set	415
   581  0199                     _RC1REG	set	409
   582  019D                     _RC1STAbits	set	413
   583  020D                     _WPUB	set	525
   584  020F                     _WPUD	set	527
   585  0210                     _WPUE	set	528
   586  028C                     _PORTFbits	set	652
   587  028D                     _PORTGbits	set	653
   588  030C                     _TRISFbits	set	780
   589  030D                     _TRISGbits	set	781
   590  040C                     _ANSELF	set	1036
   591  040D                     _ANSELG	set	1037
   592  041C                     _TMR6	set	1052
   593  041E                     _T6CON	set	1054
   594  0415                     _TMR4	set	1045
   595  0417                     _T4CON	set	1047
   596  0418                     _TMR5L	set	1048
   597  0419                     _TMR5H	set	1049
   598  041B                     _T5GCON	set	1051
   599  041A                     _T5CON	set	1050
   600  0411                     _TMR3L	set	1041
   601  0412                     _TMR3H	set	1042
   602  0414                     _T3GCON	set	1044
   603  0413                     _T3CON	set	1043
   604  048D                     _WPUG	set	1165
   605  059C                     _TMR10	set	1436
   606  059E                     _T10CON	set	1438
   607  0595                     _TMR8	set	1429
   608  0597                     _T8CON	set	1431
   609  0617                     _CCPR8L	set	1559
   610  0618                     _CCPR8H	set	1560
   611  0614                     _CCPR7L	set	1556
   612  0615                     _CCPR7H	set	1557
   613  0616                     _CCP7CON	set	1558
   614  061D                     _CCPR10L	set	1565
   615  061E                     _CCPR10H	set	1566
   616  061F                     _CCP10CON	set	1567
   617  061A                     _CCPR9L	set	1562
   618  061B                     _CCPR9H	set	1563
   619  061C                     _CCP9CON	set	1564
   620  1808                     STR_18:	
   621  1808  3430               	retlw	48	;'0'
   622  1809  3431               	retlw	49	;'1'
   623  180A  3432               	retlw	50	;'2'
   624  180B  3433               	retlw	51	;'3'
   625  180C  3434               	retlw	52	;'4'
   626  180D  3435               	retlw	53	;'5'
   627  180E  3436               	retlw	54	;'6'
   628  180F  3437               	retlw	55	;'7'
   629  1810  3438               	retlw	56	;'8'
   630  1811  3439               	retlw	57	;'9'
   631  1812  3441               	retlw	65	;'A'
   632  1813  3442               	retlw	66	;'B'
   633  1814  3443               	retlw	67	;'C'
   634  1815  3444               	retlw	68	;'D'
   635  1816  3445               	retlw	69	;'E'
   636  1817  3446               	retlw	70	;'F'
   637  1818  3400               	retlw	0
   638                           
   639                           	psect	stringtext2
   640  1819                     __pstringtext2:	
   641  1819                     STR_5:	
   642  1819  3441               	retlw	65	;'A'
   643  181A  3443               	retlw	67	;'C'
   644  181B  3454               	retlw	84	;'T'
   645  181C  3441               	retlw	65	;'A'
   646  181D  3443               	retlw	67	;'C'
   647  181E  344B               	retlw	75	;'K'
   648  181F  3400               	retlw	0
   649                           
   650                           	psect	stringtext3
   651  1820                     __pstringtext3:	
   652  1820                     STR_17:	
   653  1820  3445               	retlw	69	;'E'
   654  1821  3452               	retlw	82	;'R'
   655  1822  344C               	retlw	76	;'L'
   656  1823  3453               	retlw	83	;'S'
   657  1824  3400               	retlw	0
   658                           
   659                           	psect	stringtext4
   660  1825                     __pstringtext4:	
   661  1825                     STR_12:	
   662  1825  3445               	retlw	69	;'E'
   663  1826  3452               	retlw	82	;'R'
   664  1827  344F               	retlw	79	;'O'
   665  1828  3456               	retlw	86	;'V'
   666  1829  3400               	retlw	0
   667                           
   668                           	psect	stringtext5
   669  182A                     __pstringtext5:	
   670  182A                     STR_13:	
   671  182A  3445               	retlw	69	;'E'
   672  182B  3452               	retlw	82	;'R'
   673  182C  3452               	retlw	82	;'R'
   674  182D  3458               	retlw	88	;'X'
   675  182E  3400               	retlw	0
   676                           
   677                           	psect	stringtext6
   678  182F                     __pstringtext6:	
   679  182F                     STR_15:	
   680  182F  3452               	retlw	82	;'R'
   681  1830  3447               	retlw	71	;'G'
   682  1831  3442               	retlw	66	;'B'
   683  1832  3400               	retlw	0
   684                           
   685                           	psect	stringtext7
   686  1833                     __pstringtext7:	
   687  1833                     STR_1:	
   688  1833  3425               	retlw	37	;'%'
   689  1834  3458               	retlw	88	;'X'
   690  1835  3400               	retlw	0
   691                           
   692                           	psect	stringtext8
   693  1836                     __pstringtext8:	
   694  1836                     STR_2:	
   695  1836  340A               	retlw	10
   696  1837  3400               	retlw	0
   697                           
   698                           	psect	stringtext9
   699  1838                     __pstringtext9:	
   700  1838                     STR_3:	
   701  1838  342E               	retlw	46	;'.'
   702  1839  3400               	retlw	0
   703                           
   704                           	psect	stringtext10
   705  0000                     __pstringtext10:	
   706  1838                     
   707                           ; #config settings
   708  0000                     
   709                           	psect	cinit
   710  009D                     start_initialization:	
   711  009D                     __initialization:	
   712                           
   713                           ; Initialize objects allocated to BANK1
   714  009D  30B7               	movlw	low __pidataBANK1
   715  009E  0084               	movwf	4
   716  009F  3096               	movlw	(high __pidataBANK1)| (0+128)
   717  00A0  0085               	movwf	5
   718  00A1  30E7               	movlw	low __pdataBANK1
   719  00A2  0086               	movwf	6
   720  00A3  3000               	movlw	high __pdataBANK1
   721  00A4  0087               	movwf	7
   722  00A5  3009               	movlw	9
   723  00A6  3196  2696  3180   	fcall	init_ram
   724                           
   725                           ; Initialize objects allocated to BANK2
   726  00A9  308B               	movlw	low __pidataBANK2
   727  00AA  0084               	movwf	4
   728  00AB  3096               	movlw	(high __pidataBANK2)| (0+128)
   729  00AC  0085               	movwf	5
   730  00AD  306B               	movlw	low __pdataBANK2
   731  00AE  0086               	movwf	6
   732  00AF  3001               	movlw	high __pdataBANK2
   733  00B0  0087               	movwf	7
   734  00B1  3005               	movlw	5
   735  00B2  3196  2696  3180   	fcall	init_ram
   736                           
   737                           ; Initialize objects allocated to BANK3
   738  00B5  3040               	movlw	low __pidataBANK3
   739  00B6  0084               	movwf	4
   740  00B7  3089               	movlw	(high __pidataBANK3)| (0+128)
   741  00B8  0085               	movwf	5
   742  00B9  30A0               	movlw	low __pdataBANK3
   743  00BA  0086               	movwf	6
   744  00BB  3001               	movlw	high __pdataBANK3
   745  00BC  0087               	movwf	7
   746  00BD  302F               	movlw	47
   747  00BE  3196  2696  3180   	fcall	init_ram
   748                           
   749                           ; Initialize objects allocated to BANK4
   750  00C1  301E               	movlw	low __pidataBANK4
   751  00C2  0084               	movwf	4
   752  00C3  3097               	movlw	(high __pidataBANK4)| (0+128)
   753  00C4  0085               	movwf	5
   754  00C5  304E               	movlw	low __pdataBANK4
   755  00C6  0086               	movwf	6
   756  00C7  3002               	movlw	high __pdataBANK4
   757  00C8  0087               	movwf	7
   758  00C9  300E               	movlw	14
   759  00CA  3196  2696  3180   	fcall	init_ram
   760                           
   761                           ; Initialize objects allocated to BANK5
   762  00CD  309C               	movlw	low __pidataBANK5
   763  00CE  0084               	movwf	4
   764  00CF  308A               	movlw	(high __pidataBANK5)| (0+128)
   765  00D0  0085               	movwf	5
   766  00D1  30A0               	movlw	low __pdataBANK5
   767  00D2  0086               	movwf	6
   768  00D3  3002               	movlw	high __pdataBANK5
   769  00D4  0087               	movwf	7
   770  00D5  303A               	movlw	58
   771  00D6  3196  2696  3180   	fcall	init_ram
   772                           
   773                           ; Clear objects allocated to COMMON
   774  00D9  01F0               	clrf	__pbssCOMMON& (0+127)
   775  00DA  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   776  00DB  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   777  00DC  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   778  00DD  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   779                           
   780                           ; Clear objects allocated to BANK0
   781  00DE  3060               	movlw	low __pbssBANK0
   782  00DF  0084               	movwf	4
   783  00E0  3000               	movlw	high __pbssBANK0
   784  00E1  0085               	movwf	5
   785  00E2  300A               	movlw	10
   786  00E3  3196  2690  3180   	fcall	clear_ram0
   787                           
   788                           ; Clear objects allocated to BANK1
   789  00E6  30D5               	movlw	low __pbssBANK1
   790  00E7  0084               	movwf	4
   791  00E8  3000               	movlw	high __pbssBANK1
   792  00E9  0085               	movwf	5
   793  00EA  3012               	movlw	18
   794  00EB  3196  2690  3180   	fcall	clear_ram0
   795                           
   796                           ; Clear objects allocated to BANK2
   797  00EE  3020               	movlw	low __pbssBANK2
   798  00EF  0084               	movwf	4
   799  00F0  3001               	movlw	high __pbssBANK2
   800  00F1  0085               	movwf	5
   801  00F2  304B               	movlw	75
   802  00F3  3196  2690  3180   	fcall	clear_ram0
   803                           
   804                           ; Clear objects allocated to BANK3
   805  00F6  30CF               	movlw	low __pbssBANK3
   806  00F7  0084               	movwf	4
   807  00F8  3001               	movlw	high __pbssBANK3
   808  00F9  0085               	movwf	5
   809  00FA  3016               	movlw	22
   810  00FB  3196  2690  3180   	fcall	clear_ram0
   811                           
   812                           ; Clear objects allocated to BANK4
   813  00FE  3020               	movlw	low __pbssBANK4
   814  00FF  0084               	movwf	4
   815  0100  3002               	movlw	high __pbssBANK4
   816  0101  0085               	movwf	5
   817  0102  302E               	movlw	46
   818  0103  3196  2690         	fcall	clear_ram0
   819  0105                     end_of_initialization:	
   820                           ;End of C runtime variable initialization code
   821                           
   822  0105                     __end_of__initialization:	
   823  0105  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   824  0106  0020               	movlb	0
   825  0107  3181  2909         	ljmp	_main	;jump to C main() function
   826                           
   827                           	psect	bssCOMMON
   828  0070                     __pbssCOMMON:	
   829  0070                     _IntegerGreenColorIntensity:	
   830  0070                     	ds	2
   831  0072                     _IntergerRedColorIntensity:	
   832  0072                     	ds	2
   833  0074                     _ChildLockString:	
   834  0074                     	ds	1
   835                           
   836                           	psect	bssBANK0
   837  0060                     __pbssBANK0:	
   838  0060                     _IntegerBlueColorIntensity:	
   839  0060                     	ds	2
   840  0062                     strtok@sp:	
   841  0062                     	ds	1
   842  0063                     _AllColorIntensityString:	
   843  0063                     	ds	1
   844  0064                     _BlueColorIntensityString:	
   845  0064                     	ds	1
   846  0065                     _GreenColorIntensityString:	
   847  0065                     	ds	1
   848  0066                     _RedColorIntensityString:	
   849  0066                     	ds	1
   850  0067                     _ModuleNameString:	
   851  0067                     	ds	1
   852  0068                     _token:	
   853  0068                     	ds	1
   854  0069                     _ConvertmaindataReceiveIntoString:	
   855  0069                     	ds	1
   856                           
   857                           	psect	bssBANK1
   858  00D5                     __pbssBANK1:	
   859  00D5                     _IntergerSwitchStatus:	
   860  00D5                     	ds	2
   861  00D7                     _mainReceivedDataPosition:	
   862  00D7                     	ds	2
   863  00D9                     _BlueColorIntensityBuffer:	
   864  00D9                     	ds	2
   865  00DB                     _GreenColorIntensityBuffer:	
   866  00DB                     	ds	2
   867  00DD                     _RedColorIntensityBuffer:	
   868  00DD                     	ds	2
   869  00DF                     _StopBitString:	
   870  00DF                     	ds	1
   871  00E0                     _FinalframebitString:	
   872  00E0                     	ds	1
   873  00E1                     _SwitchStatusString:	
   874  00E1                     	ds	1
   875  00E2                     _AcknowledgementString:	
   876  00E2                     	ds	1
   877  00E3                     _SwitchNumberString:	
   878  00E3                     	ds	1
   879  00E4                     _FinalFramebitBuffer:	
   880  00E4                     	ds	1
   881  00E5                     _ChildLockBuffer:	
   882  00E5                     	ds	1
   883  00E6                     _SwitchStatusBuffer:	
   884  00E6                     	ds	1
   885                           
   886                           	psect	dataBANK1
   887  00E7                     __pdataBANK1:	
   888  00E7                     _charchildLock:	
   889  00E7                     	ds	1
   890  00E8                     _levelofGreenLed_LSB:	
   891  00E8                     	ds	1
   892  00E9                     _levelofGreenLed_MSB:	
   893  00E9                     	ds	1
   894  00EA                     _levelofRedLed_LSB:	
   895  00EA                     	ds	1
   896  00EB                     _levelofRedLed_MSB:	
   897  00EB                     	ds	1
   898  00EC                     _levelofBlueLed_LSB:	
   899  00EC                     	ds	1
   900  00ED                     _levelofBlueLed_MSB:	
   901  00ED                     	ds	1
   902  00EE                     _levelofDimmer_LSB:	
   903  00EE                     	ds	1
   904  00EF                     _levelofDimmer_MSB:	
   905  00EF                     	ds	1
   906                           
   907                           	psect	bssBANK2
   908  0120                     __pbssBANK2:	
   909  0120                     _M9:	
   910  0120                     	ds	2
   911  0122                     _M8:	
   912  0122                     	ds	2
   913  0124                     _M7:	
   914  0124                     	ds	2
   915  0126                     _M6:	
   916  0126                     	ds	2
   917  0128                     _M5:	
   918  0128                     	ds	2
   919  012A                     _M4:	
   920  012A                     	ds	2
   921  012C                     _M3:	
   922  012C                     	ds	2
   923  012E                     _M2:	
   924  012E                     	ds	2
   925  0130                     _M1:	
   926  0130                     	ds	2
   927  0132                     _IntegerChildLock:	
   928  0132                     	ds	2
   929  0134                     _IntegerSwitchNumber:	
   930  0134                     	ds	2
   931  0136                     _partCounter:	
   932  0136                     	ds	2
   933  0138                     _BlueColorIntensityStringLength:	
   934  0138                     	ds	2
   935  013A                     _GreenColorIntensityStringLength:	
   936  013A                     	ds	2
   937  013C                     _RedColorIntensityStringLength:	
   938  013C                     	ds	2
   939  013E                     _Timer8L:	
   940  013E                     	ds	2
   941  0140                     _Timer8H:	
   942  0140                     	ds	2
   943  0142                     _Timer5L:	
   944  0142                     	ds	2
   945  0144                     _Timer5H:	
   946  0144                     	ds	2
   947  0146                     _Timer3L:	
   948  0146                     	ds	2
   949  0148                     _Timer3H:	
   950  0148                     	ds	2
   951  014A                     _Timer1L:	
   952  014A                     	ds	2
   953  014C                     _Timer1H:	
   954  014C                     	ds	2
   955  014E                     _start_PWM_Generation_For_BlueLed:	
   956  014E                     	ds	2
   957  0150                     _start_PWM_Generation_For_GreenLed:	
   958  0150                     	ds	2
   959  0152                     _start_PWM_Generation_For_RedLed:	
   960  0152                     	ds	2
   961  0154                     _start_PWM_Generation_For_DIMMER:	
   962  0154                     	ds	2
   963  0156                     _mainDatacopyPosition:	
   964  0156                     	ds	2
   965  0158                     _mainReceivedDataFlag:	
   966  0158                     	ds	2
   967  015A                     _mainDataReceived:	
   968  015A                     	ds	2
   969  015C                     _FrameLegthCounter:	
   970  015C                     	ds	2
   971  015E                     _SwitchNumberBuffer:	
   972  015E                     	ds	2
   973  0160                     _StopBitStringbufer:	
   974  0160                     	ds	1
   975  0161                     _ChildLockbuffer:	
   976  0161                     	ds	2
   977  0163                     _switchstatusbuffer:	
   978  0163                     	ds	2
   979  0165                     _ConvertIntegertoStringBlueColorBuffer:	
   980  0165                     	ds	2
   981  0167                     _ConvertIntegertoStringGreenColorBuffer:	
   982  0167                     	ds	2
   983  0169                     _ConvertIntegertoStringRedColorBuffer:	
   984  0169                     	ds	2
   985                           
   986                           	psect	dataBANK2
   987  016B                     __pdataBANK2:	
   988  016B                     applianceControl@F3976:	
   989  016B                     	ds	2
   990  016D                     applianceControl@F3974:	
   991  016D                     	ds	2
   992  016F                     _charSwitchState:	
   993  016F                     	ds	1
   994                           
   995                           	psect	bssBANK3
   996  01CF                     __pbssBANK3:	
   997  01CF                     _ModuleNameBuffer:	
   998  01CF                     	ds	3
   999  01D2                     _errno:	
  1000  01D2                     	ds	2
  1001  01D4                     _IntegerAllColorIntensity:	
  1002  01D4                     	ds	2
  1003  01D6                     _BlueLedSwitchCounter:	
  1004  01D6                     	ds	2
  1005  01D8                     _GreenLedSwitchCounter:	
  1006  01D8                     	ds	2
  1007  01DA                     _RedLedSwitchCounter:	
  1008  01DA                     	ds	2
  1009  01DC                     _Finalframebitbuffer:	
  1010  01DC                     	ds	2
  1011  01DE                     _AllColorIntensityStringLength:	
  1012  01DE                     	ds	2
  1013  01E0                     _mainDataReceiveStringLength:	
  1014  01E0                     	ds	2
  1015  01E2                     _switchNumberBuffer:	
  1016  01E2                     	ds	3
  1017                           
  1018                           	psect	dataBANK3
  1019  01A0                     __pdataBANK3:	
  1020  01A0                     _copy_parentalLockBuffer:	
  1021  01A0                     	ds	14
  1022  01AE                     _tempReceivedDataBuffer:	
  1023  01AE                     	ds	10
  1024  01B8                     _ErrorNames:	
  1025  01B8                     	ds	5
  1026  01BD                     _mainReceivedDataBuffer:	
  1027  01BD                     	ds	18
  1028                           
  1029                           	psect	bssBANK4
  1030  0220                     __pbssBANK4:	
  1031  0220                     _sendFinalBufferToGAteway:	
  1032  0220                     	ds	46
  1033                           
  1034                           	psect	dataBANK4
  1035  024E                     __pdataBANK4:	
  1036  024E                     _parentalLockBuffer:	
  1037  024E                     	ds	14
  1038                           
  1039                           	psect	dataBANK5
  1040  02A0                     __pdataBANK5:	
  1041  02A0                     _currentStateBuffer:	
  1042  02A0                     	ds	58
  1043                           
  1044                           	psect	inittext
  1045  1696                     init_ram:	
  1046  1696  00FE               	movwf	126
  1047  1697                     initloop:	
  1048  1697  0012               	moviw fsr0++
  1049  1698  001E               	movwi fsr1++
  1050  1699  0BFE               	decfsz	126,f
  1051  169A  2E97               	goto	initloop
  1052  169B  3400               	retlw	0
  1053                           
  1054                           	psect	clrtext
  1055  1690                     clear_ram0:	
  1056                           ;	Called with FSR0 containing the base address, and
  1057                           ;	WREG with the size to clear
  1058                           
  1059  1690  0064               	clrwdt	;clear the watchdog before getting into this loop
  1060  1691                     clrloop0:	
  1061  1691  0180               	clrf	0	;clear RAM location pointed to by FSR
  1062  1692  3101               	addfsr 0,1
  1063  1693  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1064  1694  2E91               	goto	clrloop0	;have we reached the end yet?
  1065  1695  3400               	retlw	0	;all done for this memory range, return
  1066                           
  1067                           	psect	cstackBANK3
  1068  01E5                     __pcstackBANK3:	
  1069  01E5                     main@dataBufferCounter:	
  1070                           
  1071                           ; 2 bytes @ 0x0
  1072  01E5                     	ds	2
  1073  01E7                     main@j:	
  1074                           
  1075                           ; 2 bytes @ 0x2
  1076  01E7                     	ds	2
  1077  01E9                     main@k:	
  1078                           
  1079                           ; 2 bytes @ 0x4
  1080  01E9                     	ds	2
  1081  01EB                     main@k_1031:	
  1082                           
  1083                           ; 2 bytes @ 0x6
  1084  01EB                     	ds	2
  1085  01ED                     main@man:	
  1086                           
  1087                           ; 2 bytes @ 0x8
  1088  01ED                     	ds	2
  1089                           
  1090                           	psect	cstackBANK1
  1091  00A0                     __pcstackBANK1:	
  1092  00A0                     applianceControl@ConvertStringIntoInt:	
  1093                           
  1094                           ; 2 bytes @ 0x0
  1095  00A0                     	ds	2
  1096  00A2                     applianceControl@remainder:	
  1097                           
  1098                           ; 2 bytes @ 0x2
  1099  00A2                     	ds	2
  1100  00A4                     applianceControl@start:	
  1101                           
  1102                           ; 2 bytes @ 0x4
  1103  00A4                     	ds	2
  1104  00A6                     applianceControl@end:	
  1105                           
  1106                           ; 2 bytes @ 0x6
  1107  00A6                     	ds	2
  1108  00A8                     applianceControl@HexlevelBuffer:	
  1109                           
  1110                           ; 5 bytes @ 0x8
  1111  00A8                     	ds	5
  1112  00AD                     applianceControl@CompleteClock:	
  1113                           
  1114                           ; 4 bytes @ 0xD
  1115  00AD                     	ds	4
  1116  00B1                     applianceControl@deno:	
  1117                           
  1118                           ; 3 bytes @ 0x11
  1119  00B1                     	ds	3
  1120  00B4                     applianceControl@clockPerCycle:	
  1121                           
  1122                           ; 3 bytes @ 0x14
  1123  00B4                     	ds	3
  1124  00B7                     applianceControl@Pulse:	
  1125                           
  1126                           ; 4 bytes @ 0x17
  1127  00B7                     	ds	4
  1128  00BB                     applianceControl@NeedPulse:	
  1129                           
  1130                           ; 4 bytes @ 0x1B
  1131  00BB                     	ds	4
  1132  00BF                     applianceControl@strH:	
  1133                           
  1134                           ; 3 bytes @ 0x1F
  1135  00BF                     	ds	3
  1136  00C2                     applianceControl@strL:	
  1137                           
  1138                           ; 3 bytes @ 0x22
  1139  00C2                     	ds	3
  1140  00C5                     applianceControl@charSwitchMSB:	
  1141                           
  1142                           ; 1 bytes @ 0x25
  1143  00C5                     	ds	1
  1144  00C6                     applianceControl@switchNumberStringBuffer:	
  1145                           
  1146                           ; 2 bytes @ 0x26
  1147  00C6                     	ds	2
  1148  00C8                     applianceControl@ConvertIntToTimeInMilisec:	
  1149                           
  1150                           ; 3 bytes @ 0x28
  1151  00C8                     	ds	3
  1152  00CB                     applianceControl@integerSpeed:	
  1153                           
  1154                           ; 2 bytes @ 0x2B
  1155  00CB                     	ds	2
  1156  00CD                     applianceControl@dimmerSpeedStringBuffer:	
  1157                           
  1158                           ; 2 bytes @ 0x2D
  1159  00CD                     	ds	2
  1160  00CF                     applianceControl@integerSwitchNumber:	
  1161                           
  1162                           ; 2 bytes @ 0x2F
  1163  00CF                     	ds	2
  1164  00D1                     applianceControl@currentStateBufferPositions:	
  1165                           
  1166                           ; 2 bytes @ 0x31
  1167  00D1                     	ds	2
  1168  00D3                     applianceControl@integerSwitchState:	
  1169                           
  1170                           ; 2 bytes @ 0x33
  1171  00D3                     	ds	2
  1172                           
  1173                           	psect	cstackCOMMON
  1174  0075                     __pcstackCOMMON:	
  1175  0075                     ?_isdigit:	
  1176  0075                     ?_sendAcknowledgment:	
  1177                           ; 1 bit 
  1178                           
  1179  0075                     ?_errorsISR:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0075                     ?_GPIO_pin_Initialize:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0075                     ?_allPeripheralInit:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0075                     ?_ReceivingIndicationLedBlinking:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0075                     ?_copyReceivedDataBuffer:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0075                     ?_TransmissionIndicationLedBlinking:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0075                     ?_clearAllPorts:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0075                     ?_pinINIT_extra:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0075                     ?_EUSART_Initialize:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0075                     ?_TMR1_Initialize:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0075                     ?_TMR2_Initialize:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0075                     ?_TMR3_Initialize:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0075                     ?_TMR4_Initialize:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0075                     ?_TMR5_Initialize:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0075                     ?_TMR6_Initialize:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0075                     ?_TMR8_Initialize:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0075                     ?_TMR10_Initialize:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0075                     ?_CCP9_Initialize:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0075                     ?_CCP8_Initialize:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0075                     ?_CCP7_Initialize:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0075                     ?_CCP10_Initialize:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0075                     ?_isr:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245  0075                     ?_main:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248  0075                     errorsISR@errNum:	
  1249                           ; 2 bytes @ 0x0
  1250                           
  1251                           
  1252                           ; 2 bytes @ 0x0
  1253  0075                     	ds	2
  1254  0077                     ??_errorsISR:	
  1255                           
  1256                           ; 1 bytes @ 0x2
  1257  0077                     	ds	1
  1258  0078                     ??_isr:	
  1259                           
  1260                           ; 1 bytes @ 0x3
  1261  0078                     	ds	2
  1262                           
  1263                           	psect	cstackBANK0
  1264  0020                     __pcstackBANK0:	
  1265  0020                     ?_strncpy:	
  1266  0020                     ??_sendAcknowledgment:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269  0020                     ??_GPIO_pin_Initialize:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272  0020                     ??_allPeripheralInit:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275  0020                     ??_ReceivingIndicationLedBlinking:	
  1276                           ; 1 bytes @ 0x0
  1277                           
  1278  0020                     ??_copyReceivedDataBuffer:	
  1279                           ; 1 bytes @ 0x0
  1280                           
  1281  0020                     ?_errorsMain:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284  0020                     ?_SwitchOnStatustToGatway:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287  0020                     ??_TransmissionIndicationLedBlinking:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290  0020                     ?_SwitchOffStatustToGatway:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293  0020                     ??_clearAllPorts:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296  0020                     ??_pinINIT_extra:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0020                     ??_EUSART_Initialize:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0020                     ??_TMR1_Initialize:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0020                     ??_TMR2_Initialize:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0020                     ??_TMR3_Initialize:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0020                     ??_TMR4_Initialize:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0020                     ??_TMR5_Initialize:	
  1315                           ; 1 bytes @ 0x0
  1316                           
  1317  0020                     ??_TMR6_Initialize:	
  1318                           ; 1 bytes @ 0x0
  1319                           
  1320  0020                     ??_TMR8_Initialize:	
  1321                           ; 1 bytes @ 0x0
  1322                           
  1323  0020                     ??_TMR10_Initialize:	
  1324                           ; 1 bytes @ 0x0
  1325                           
  1326  0020                     ??_CCP9_Initialize:	
  1327                           ; 1 bytes @ 0x0
  1328                           
  1329  0020                     ??_CCP8_Initialize:	
  1330                           ; 1 bytes @ 0x0
  1331                           
  1332  0020                     ??_CCP7_Initialize:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335  0020                     ??_CCP10_Initialize:	
  1336                           ; 1 bytes @ 0x0
  1337                           
  1338  0020                     ??_isdigit:	
  1339                           ; 1 bytes @ 0x0
  1340                           
  1341  0020                     ?_putch:	
  1342                           ; 1 bytes @ 0x0
  1343                           
  1344  0020                     ?_strlen:	
  1345                           ; 1 bytes @ 0x0
  1346                           
  1347  0020                     ?_strcmp:	
  1348                           ; 2 bytes @ 0x0
  1349                           
  1350  0020                     ?_strchr:	
  1351                           ; 2 bytes @ 0x0
  1352                           
  1353  0020                     ?___wmul:	
  1354                           ; 2 bytes @ 0x0
  1355                           
  1356  0020                     ?___lwdiv:	
  1357                           ; 2 bytes @ 0x0
  1358                           
  1359  0020                     ?___ftpack:	
  1360                           ; 2 bytes @ 0x0
  1361                           
  1362  0020                     _isdigit$1350:	
  1363                           ; 3 bytes @ 0x0
  1364                           
  1365  0020                     putch@c:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368  0020                     strncpy@from:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371  0020                     errorsMain@errNum:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374  0020                     SwitchOffStatustToGatway@SwitchOffNumber:	
  1375                           ; 2 bytes @ 0x0
  1376                           
  1377  0020                     SwitchOnStatustToGatway@SwitchOnNumber:	
  1378                           ; 2 bytes @ 0x0
  1379                           
  1380  0020                     ___wmul@multiplier:	
  1381                           ; 2 bytes @ 0x0
  1382                           
  1383  0020                     ___lwdiv@divisor:	
  1384                           ; 2 bytes @ 0x0
  1385                           
  1386  0020                     strcmp@s2:	
  1387                           ; 2 bytes @ 0x0
  1388                           
  1389  0020                     strlen@s:	
  1390                           ; 2 bytes @ 0x0
  1391                           
  1392  0020                     strchr@ptr:	
  1393                           ; 2 bytes @ 0x0
  1394                           
  1395  0020                     ___ftpack@arg:	
  1396                           ; 2 bytes @ 0x0
  1397                           
  1398                           
  1399                           ; 3 bytes @ 0x0
  1400  0020                     	ds	1
  1401  0021                     ??_putch:	
  1402  0021                     isdigit@c:	
  1403                           ; 1 bytes @ 0x1
  1404                           
  1405  0021                     sendAcknowledgment@Tx_count:	
  1406                           ; 1 bytes @ 0x1
  1407                           
  1408  0021                     copyReceivedDataBuffer@dataBufferCounter:	
  1409                           ; 2 bytes @ 0x1
  1410                           
  1411  0021                     strncpy@size:	
  1412                           ; 2 bytes @ 0x1
  1413                           
  1414                           
  1415                           ; 2 bytes @ 0x1
  1416  0021                     	ds	1
  1417  0022                     ??_strlen:	
  1418  0022                     ??_strcmp:	
  1419                           ; 1 bytes @ 0x2
  1420                           
  1421  0022                     ??_errorsMain:	
  1422                           ; 1 bytes @ 0x2
  1423                           
  1424  0022                     ??_SwitchOnStatustToGatway:	
  1425                           ; 1 bytes @ 0x2
  1426                           
  1427  0022                     ??_SwitchOffStatustToGatway:	
  1428                           ; 1 bytes @ 0x2
  1429                           
  1430  0022                     ___wmul@multiplicand:	
  1431                           ; 1 bytes @ 0x2
  1432                           
  1433  0022                     ___lwdiv@dividend:	
  1434                           ; 2 bytes @ 0x2
  1435                           
  1436  0022                     strchr@chr:	
  1437                           ; 2 bytes @ 0x2
  1438                           
  1439                           
  1440                           ; 2 bytes @ 0x2
  1441  0022                     	ds	1
  1442  0023                     ??_strncpy:	
  1443  0023                     sendAcknowledgment@currentStateBuffer:	
  1444                           ; 1 bytes @ 0x3
  1445                           
  1446  0023                     ___ftpack@exp:	
  1447                           ; 1 bytes @ 0x3
  1448                           
  1449  0023                     strcmp@r:	
  1450                           ; 1 bytes @ 0x3
  1451                           
  1452                           
  1453                           ; 1 bytes @ 0x3
  1454  0023                     	ds	1
  1455  0024                     ??_strchr:	
  1456  0024                     ??___wmul:	
  1457                           ; 1 bytes @ 0x4
  1458                           
  1459  0024                     ??___lwdiv:	
  1460                           ; 1 bytes @ 0x4
  1461                           
  1462  0024                     ___ftpack@sign:	
  1463                           ; 1 bytes @ 0x4
  1464                           
  1465  0024                     strcmp@s1:	
  1466                           ; 1 bytes @ 0x4
  1467                           
  1468  0024                     strncpy@to:	
  1469                           ; 1 bytes @ 0x4
  1470                           
  1471  0024                     ___wmul@product:	
  1472                           ; 1 bytes @ 0x4
  1473                           
  1474  0024                     strlen@cp:	
  1475                           ; 2 bytes @ 0x4
  1476                           
  1477                           
  1478                           ; 2 bytes @ 0x4
  1479  0024                     	ds	1
  1480  0025                     ??___ftpack:	
  1481  0025                     ___lwdiv@counter:	
  1482                           ; 1 bytes @ 0x5
  1483                           
  1484  0025                     strncpy@cp:	
  1485                           ; 1 bytes @ 0x5
  1486                           
  1487                           
  1488                           ; 1 bytes @ 0x5
  1489  0025                     	ds	1
  1490  0026                     ?_atoi:	
  1491  0026                     ?_hexadecimalToDecimal:	
  1492                           ; 2 bytes @ 0x6
  1493                           
  1494  0026                     ___lwdiv@quotient:	
  1495                           ; 2 bytes @ 0x6
  1496                           
  1497                           
  1498                           ; 2 bytes @ 0x6
  1499  0026                     	ds	1
  1500  0027                     ?_strspn:	
  1501  0027                     ?_strcspn:	
  1502                           ; 2 bytes @ 0x7
  1503                           
  1504  0027                     strcspn@s2:	
  1505                           ; 2 bytes @ 0x7
  1506                           
  1507  0027                     strspn@s2:	
  1508                           ; 2 bytes @ 0x7
  1509                           
  1510                           
  1511                           ; 2 bytes @ 0x7
  1512  0027                     	ds	1
  1513  0028                     ??_atoi:	
  1514  0028                     ??_hexadecimalToDecimal:	
  1515                           ; 1 bytes @ 0x8
  1516                           
  1517  0028                     ?__doprnt:	
  1518                           ; 1 bytes @ 0x8
  1519                           
  1520  0028                     ?___awtoft:	
  1521                           ; 2 bytes @ 0x8
  1522                           
  1523  0028                     ?___ftmul:	
  1524                           ; 3 bytes @ 0x8
  1525                           
  1526  0028                     __doprnt@f:	
  1527                           ; 3 bytes @ 0x8
  1528                           
  1529  0028                     ___awtoft@c:	
  1530                           ; 2 bytes @ 0x8
  1531                           
  1532  0028                     ___ftmul@f1:	
  1533                           ; 2 bytes @ 0x8
  1534                           
  1535                           
  1536                           ; 3 bytes @ 0x8
  1537  0028                     	ds	1
  1538  0029                     ??_strspn:	
  1539  0029                     ??_strcspn:	
  1540                           ; 1 bytes @ 0x9
  1541                           
  1542                           
  1543                           ; 1 bytes @ 0x9
  1544  0029                     	ds	1
  1545  002A                     __doprnt@ap:	
  1546  002A                     atoi@sign:	
  1547                           ; 1 bytes @ 0xA
  1548                           
  1549  002A                     hexadecimalToDecimal@len:	
  1550                           ; 1 bytes @ 0xA
  1551                           
  1552                           
  1553                           ; 2 bytes @ 0xA
  1554  002A                     	ds	1
  1555  002B                     ??__doprnt:	
  1556  002B                     ??___awtoft:	
  1557                           ; 1 bytes @ 0xB
  1558                           
  1559  002B                     atoi@a:	
  1560                           ; 1 bytes @ 0xB
  1561                           
  1562  002B                     strcspn@i:	
  1563                           ; 2 bytes @ 0xB
  1564                           
  1565  002B                     strspn@i:	
  1566                           ; 2 bytes @ 0xB
  1567                           
  1568  002B                     ___ftmul@f2:	
  1569                           ; 2 bytes @ 0xB
  1570                           
  1571                           
  1572                           ; 3 bytes @ 0xB
  1573  002B                     	ds	1
  1574  002C                     hexadecimalToDecimal@dec_val:	
  1575                           
  1576                           ; 2 bytes @ 0xC
  1577  002C                     	ds	1
  1578  002D                     atoi@s:	
  1579  002D                     ___awtoft@sign:	
  1580                           ; 1 bytes @ 0xD
  1581                           
  1582  002D                     strcspn@s1:	
  1583                           ; 1 bytes @ 0xD
  1584                           
  1585  002D                     strspn@s1:	
  1586                           ; 1 bytes @ 0xD
  1587                           
  1588                           
  1589                           ; 1 bytes @ 0xD
  1590  002D                     	ds	1
  1591  002E                     ?_strtok:	
  1592  002E                     ??___ftmul:	
  1593                           ; 1 bytes @ 0xE
  1594                           
  1595  002E                     ?___ftdiv:	
  1596                           ; 1 bytes @ 0xE
  1597                           
  1598  002E                     hexadecimalToDecimal@base:	
  1599                           ; 3 bytes @ 0xE
  1600                           
  1601  002E                     strtok@s2:	
  1602                           ; 2 bytes @ 0xE
  1603                           
  1604  002E                     ___ftdiv@f2:	
  1605                           ; 2 bytes @ 0xE
  1606                           
  1607                           
  1608                           ; 3 bytes @ 0xE
  1609  002E                     	ds	1
  1610  002F                     __doprnt@flag:	
  1611                           
  1612                           ; 1 bytes @ 0xF
  1613  002F                     	ds	1
  1614  0030                     ??_strtok:	
  1615  0030                     hexadecimalToDecimal@hexVal:	
  1616                           ; 1 bytes @ 0x10
  1617                           
  1618  0030                     __doprnt@idx:	
  1619                           ; 1 bytes @ 0x10
  1620                           
  1621                           
  1622                           ; 1 bytes @ 0x10
  1623  0030                     	ds	1
  1624  0031                     hexadecimalToDecimal@i:	
  1625  0031                     __doprnt@val:	
  1626                           ; 2 bytes @ 0x11
  1627                           
  1628  0031                     ___ftdiv@f1:	
  1629                           ; 2 bytes @ 0x11
  1630                           
  1631                           
  1632                           ; 3 bytes @ 0x11
  1633  0031                     	ds	1
  1634  0032                     ___ftmul@exp:	
  1635                           
  1636                           ; 1 bytes @ 0x12
  1637  0032                     	ds	1
  1638  0033                     __doprnt@prec:	
  1639  0033                     strtok@s1:	
  1640                           ; 1 bytes @ 0x13
  1641                           
  1642  0033                     ___ftmul@f3_as_product:	
  1643                           ; 1 bytes @ 0x13
  1644                           
  1645                           
  1646                           ; 3 bytes @ 0x13
  1647  0033                     	ds	1
  1648  0034                     ??___ftdiv:	
  1649  0034                     __doprnt@pb:	
  1650                           ; 1 bytes @ 0x14
  1651                           
  1652                           
  1653                           ; 1 bytes @ 0x14
  1654  0034                     	ds	1
  1655  0035                     __doprnt@c:	
  1656                           
  1657                           ; 1 bytes @ 0x15
  1658  0035                     	ds	1
  1659  0036                     ?_sprintf:	
  1660  0036                     ?_printf:	
  1661                           ; 2 bytes @ 0x16
  1662                           
  1663  0036                     ___ftmul@cntr:	
  1664                           ; 2 bytes @ 0x16
  1665                           
  1666  0036                     printf@f:	
  1667                           ; 1 bytes @ 0x16
  1668                           
  1669  0036                     sprintf@f:	
  1670                           ; 2 bytes @ 0x16
  1671                           
  1672                           
  1673                           ; 2 bytes @ 0x16
  1674  0036                     	ds	1
  1675  0037                     ___ftmul@sign:	
  1676                           
  1677                           ; 1 bytes @ 0x17
  1678  0037                     	ds	1
  1679  0038                     ??_printf:	
  1680  0038                     ___ftdiv@cntr:	
  1681                           ; 1 bytes @ 0x18
  1682                           
  1683                           
  1684                           ; 1 bytes @ 0x18
  1685  0038                     	ds	1
  1686  0039                     printf@ap:	
  1687  0039                     ___ftdiv@f3:	
  1688                           ; 1 bytes @ 0x19
  1689                           
  1690                           
  1691                           ; 3 bytes @ 0x19
  1692  0039                     	ds	1
  1693  003A                     printf@pb:	
  1694                           
  1695                           ; 3 bytes @ 0x1A
  1696  003A                     	ds	2
  1697  003C                     ??_sprintf:	
  1698  003C                     ___ftdiv@exp:	
  1699                           ; 1 bytes @ 0x1C
  1700                           
  1701                           
  1702                           ; 1 bytes @ 0x1C
  1703  003C                     	ds	1
  1704  003D                     ___ftdiv@sign:	
  1705  003D                     sprintf@wh:	
  1706                           ; 1 bytes @ 0x1D
  1707                           
  1708                           
  1709                           ; 1 bytes @ 0x1D
  1710  003D                     	ds	1
  1711  003E                     ?___fttol:	
  1712  003E                     sprintf@ap:	
  1713                           ; 4 bytes @ 0x1E
  1714                           
  1715  003E                     ___fttol@f1:	
  1716                           ; 1 bytes @ 0x1E
  1717                           
  1718                           
  1719                           ; 3 bytes @ 0x1E
  1720  003E                     	ds	1
  1721  003F                     sprintf@pb:	
  1722                           
  1723                           ; 3 bytes @ 0x1F
  1724  003F                     	ds	3
  1725  0042                     ??___fttol:	
  1726                           
  1727                           ; 1 bytes @ 0x22
  1728  0042                     	ds	4
  1729  0046                     ___fttol@sign1:	
  1730                           
  1731                           ; 1 bytes @ 0x26
  1732  0046                     	ds	1
  1733  0047                     ___fttol@lval:	
  1734                           
  1735                           ; 4 bytes @ 0x27
  1736  0047                     	ds	4
  1737  004B                     ___fttol@exp1:	
  1738                           
  1739                           ; 1 bytes @ 0x2B
  1740  004B                     	ds	1
  1741  004C                     ?_applianceControl:	
  1742  004C                     applianceControl@charSwitchLSB:	
  1743                           ; 1 bytes @ 0x2C
  1744                           
  1745                           
  1746                           ; 1 bytes @ 0x2C
  1747  004C                     	ds	1
  1748  004D                     applianceControl@charSwitchSTATE:	
  1749                           
  1750                           ; 1 bytes @ 0x2D
  1751  004D                     	ds	1
  1752  004E                     applianceControl@chDimmerSpeedMSB:	
  1753                           
  1754                           ; 1 bytes @ 0x2E
  1755  004E                     	ds	1
  1756  004F                     applianceControl@chDimmerSpeedLSB:	
  1757                           
  1758                           ; 1 bytes @ 0x2F
  1759  004F                     	ds	1
  1760  0050                     applianceControl@charParentalControl:	
  1761                           
  1762                           ; 1 bytes @ 0x30
  1763  0050                     	ds	1
  1764  0051                     applianceControl@charFinalFrameState:	
  1765                           
  1766                           ; 1 bytes @ 0x31
  1767  0051                     	ds	1
  1768  0052                     ??_applianceControl:	
  1769                           
  1770                           ; 1 bytes @ 0x32
  1771  0052                     	ds	8
  1772  005A                     ??_main:	
  1773                           
  1774                           ; 1 bytes @ 0x3A
  1775  005A                     	ds	6
  1776                           
  1777                           	psect	maintext
  1778  0109                     __pmaintext:	
  1779 ;;
  1780 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1781 ;;
  1782 ;; *************** function _main *****************
  1783 ;; Defined at:
  1784 ;;		line 442 in file "main.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  k               2    6[BANK3 ] int 
  1789 ;;  k               2    4[BANK3 ] int 
  1790 ;;  j               2    2[BANK3 ] int 
  1791 ;;  dataBufferCo    2    0[BANK3 ] int 
  1792 ;;  man             2    8[BANK3 ] int 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  2  513[None  ] int 
  1795 ;; Registers used:
  1796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1797 ;; Tracked objects:
  1798 ;;		On entry : B1F/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  1802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  1803 ;;      Locals:         0       0       0       0      10       0       0       0       0       0       0
  1804 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0
  1805 ;;      Totals:         0       6       0       0      10       0       0       0       0       0       0
  1806 ;;Total ram usage:       16 bytes
  1807 ;; Hardware stack levels required when called:    6
  1808 ;; This function calls:
  1809 ;;		_GPIO_pin_Initialize
  1810 ;;		_ReceivingIndicationLedBlinking
  1811 ;;		_SwitchOffStatustToGatway
  1812 ;;		_SwitchOnStatustToGatway
  1813 ;;		_TransmissionIndicationLedBlinking
  1814 ;;		_allPeripheralInit
  1815 ;;		_applianceControl
  1816 ;;		_copyReceivedDataBuffer
  1817 ;;		_errorsMain
  1818 ;;		_strcmp
  1819 ;;		_strlen
  1820 ;;		_strtok
  1821 ;; This function is called by:
  1822 ;;		Startup code after reset
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           
  1827                           ;psect for function _main
  1828  0109                     _main:	
  1829                           
  1830                           ;main.c: 443: _delay((unsigned long)((2000)*(16000000/4000.0)));
  1831                           
  1832                           ;incstack = 0
  1833                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1834  0109  3029               	movlw	41
  1835  010A  0020               	movlb	0	; select bank0
  1836  010B  00DB               	movwf	??_main+1
  1837  010C  3096               	movlw	150
  1838  010D  00DA               	movwf	??_main
  1839  010E  307F               	movlw	127
  1840  010F                     u8777:	
  1841  010F  0B89               	decfsz	9,f
  1842  0110  290F               	goto	u8777
  1843  0111  0BDA               	decfsz	??_main,f
  1844  0112  290F               	goto	u8777
  1845  0113  0BDB               	decfsz	??_main+1,f
  1846  0114  290F               	goto	u8777
  1847                           
  1848                           ;main.c: 444: M1=1; M2=1; M3=1; M4=1; M5=1; M6=1; M7=1;M8=1;
  1849  0115  3001               	movlw	1
  1850  0116  0022               	movlb	2	; select bank2
  1851  0117  00B0               	movwf	_M1^(0+256)
  1852  0118  3000               	movlw	0
  1853  0119  00B1               	movwf	(_M1^(0+256)+1)
  1854  011A  3001               	movlw	1
  1855  011B  00AE               	movwf	_M2^(0+256)
  1856  011C  3000               	movlw	0
  1857  011D  00AF               	movwf	(_M2^(0+256)+1)
  1858  011E  3001               	movlw	1
  1859  011F  00AC               	movwf	_M3^(0+256)
  1860  0120  3000               	movlw	0
  1861  0121  00AD               	movwf	(_M3^(0+256)+1)
  1862  0122  3001               	movlw	1
  1863  0123  00AA               	movwf	_M4^(0+256)
  1864  0124  3000               	movlw	0
  1865  0125  00AB               	movwf	(_M4^(0+256)+1)
  1866  0126  3001               	movlw	1
  1867  0127  00A8               	movwf	_M5^(0+256)
  1868  0128  3000               	movlw	0
  1869  0129  00A9               	movwf	(_M5^(0+256)+1)
  1870  012A  3001               	movlw	1
  1871  012B  00A6               	movwf	_M6^(0+256)
  1872  012C  3000               	movlw	0
  1873  012D  00A7               	movwf	(_M6^(0+256)+1)
  1874  012E  3001               	movlw	1
  1875  012F  00A4               	movwf	_M7^(0+256)
  1876  0130  3000               	movlw	0
  1877  0131  00A5               	movwf	(_M7^(0+256)+1)
  1878  0132  3001               	movlw	1
  1879  0133  00A2               	movwf	_M8^(0+256)
  1880  0134  3000               	movlw	0
  1881  0135  00A3               	movwf	(_M8^(0+256)+1)
  1882                           
  1883                           ;main.c: 445: M9=1;
  1884  0136  3001               	movlw	1
  1885  0137  00A0               	movwf	_M9^(0+256)
  1886  0138  3000               	movlw	0
  1887  0139  00A1               	movwf	(_M9^(0+256)+1)
  1888                           
  1889                           ;main.c: 446: GPIO_pin_Initialize();
  1890  013A  3188  20E5  3181   	fcall	_GPIO_pin_Initialize
  1891                           
  1892                           ;main.c: 447: allPeripheralInit();
  1893  013D  3188  2094  3181   	fcall	_allPeripheralInit
  1894  0140                     l6825:	
  1895                           ;main.c: 449: while(1){
  1896                           
  1897                           
  1898                           ;main.c: 450: if(mainDataReceived==1){
  1899  0140  0022               	movlb	2	; select bank2
  1900  0141  035A               	decf	_mainDataReceived^(0+256),w
  1901  0142  045B               	iorwf	(_mainDataReceived+1)^(0+256),w
  1902  0143  1D03               	btfss	3,2
  1903  0144  2B42               	goto	l6955
  1904                           
  1905                           ;main.c: 451: mainDataReceived=0;
  1906  0145  01DA               	clrf	_mainDataReceived^(0+256)
  1907  0146  01DB               	clrf	(_mainDataReceived+1)^(0+256)
  1908                           
  1909                           ;main.c: 452: if(mainReceivedDataBuffer[0]=='%' && mainReceivedDataBuffer[1]=='%' && mai
      +                          nReceivedDataBuffer[14]=='@' && mainReceivedDataBuffer[15]=='@'){
  1910  0147  3025               	movlw	37
  1911  0148  0023               	movlb	3	; select bank3
  1912  0149  063D               	xorwf	_mainReceivedDataBuffer^(0+384),w
  1913  014A  1D03               	btfss	3,2
  1914  014B  2988               	goto	l6843
  1915  014C  3025               	movlw	37
  1916  014D  063E               	xorwf	(_mainReceivedDataBuffer^(0+384)+1),w
  1917  014E  1D03               	btfss	3,2
  1918  014F  2988               	goto	l6843
  1919  0150  3040               	movlw	64
  1920  0151  064B               	xorwf	(_mainReceivedDataBuffer^(0+384)+14),w
  1921  0152  1D03               	btfss	3,2
  1922  0153  2988               	goto	l6843
  1923  0154  3040               	movlw	64
  1924  0155  064C               	xorwf	(_mainReceivedDataBuffer^(0+384)+15),w
  1925  0156  1D03               	btfss	3,2
  1926  0157  2988               	goto	l6843
  1927                           
  1928                           ;main.c: 453: ReceivingIndicationLedBlinking();
  1929  0158  3197  273B  3181   	fcall	_ReceivingIndicationLedBlinking
  1930                           
  1931                           ;main.c: 454: copyReceivedDataBuffer();
  1932  015B  3189  21CF  3181   	fcall	_copyReceivedDataBuffer
  1933                           
  1934                           ;main.c: 456: applianceControl(tempReceivedDataBuffer[0],
  1935                           ;main.c: 457: tempReceivedDataBuffer[1],
  1936                           ;main.c: 458: tempReceivedDataBuffer[2],
  1937                           ;main.c: 459: tempReceivedDataBuffer[3],
  1938                           ;main.c: 460: tempReceivedDataBuffer[4],
  1939                           ;main.c: 461: tempReceivedDataBuffer[5],
  1940                           ;main.c: 462: tempReceivedDataBuffer[6]);
  1941  015E  0023               	movlb	3	; select bank3
  1942  015F  082F               	movf	(_tempReceivedDataBuffer^(0+384)+1),w
  1943  0160  0020               	movlb	0	; select bank0
  1944  0161  00DA               	movwf	??_main
  1945  0162  085A               	movf	??_main,w
  1946  0163  00CC               	movwf	applianceControl@charSwitchLSB
  1947  0164  0023               	movlb	3	; select bank3
  1948  0165  0830               	movf	(_tempReceivedDataBuffer^(0+384)+2),w
  1949  0166  0020               	movlb	0	; select bank0
  1950  0167  00DB               	movwf	??_main+1
  1951  0168  085B               	movf	??_main+1,w
  1952  0169  00CD               	movwf	applianceControl@charSwitchSTATE
  1953  016A  0023               	movlb	3	; select bank3
  1954  016B  0831               	movf	(_tempReceivedDataBuffer^(0+384)+3),w
  1955  016C  0020               	movlb	0	; select bank0
  1956  016D  00DC               	movwf	??_main+2
  1957  016E  085C               	movf	??_main+2,w
  1958  016F  00CE               	movwf	applianceControl@chDimmerSpeedMSB
  1959  0170  0023               	movlb	3	; select bank3
  1960  0171  0832               	movf	(_tempReceivedDataBuffer^(0+384)+4),w
  1961  0172  0020               	movlb	0	; select bank0
  1962  0173  00DD               	movwf	??_main+3
  1963  0174  085D               	movf	??_main+3,w
  1964  0175  00CF               	movwf	applianceControl@chDimmerSpeedLSB
  1965  0176  0023               	movlb	3	; select bank3
  1966  0177  0833               	movf	(_tempReceivedDataBuffer^(0+384)+5),w
  1967  0178  0020               	movlb	0	; select bank0
  1968  0179  00DE               	movwf	??_main+4
  1969  017A  085E               	movf	??_main+4,w
  1970  017B  00D0               	movwf	applianceControl@charParentalControl
  1971  017C  0023               	movlb	3	; select bank3
  1972  017D  0834               	movf	(_tempReceivedDataBuffer^(0+384)+6),w
  1973  017E  0020               	movlb	0	; select bank0
  1974  017F  00DF               	movwf	??_main+5
  1975  0180  085F               	movf	??_main+5,w
  1976  0181  00D1               	movwf	applianceControl@charFinalFrameState
  1977  0182  0023               	movlb	3	; select bank3
  1978  0183  082E               	movf	_tempReceivedDataBuffer^(0+384),w
  1979  0184  318D  2538  3181   	fcall	_applianceControl
  1980                           
  1981                           ;main.c: 464: }
  1982  0187  2B42               	goto	l6955
  1983  0188                     l6843:	
  1984                           
  1985                           ;main.c: 465: else if(mainReceivedDataBuffer[0]=='R' && mainReceivedDataBuffer[1]=='G'){
  1986  0188  3052               	movlw	82
  1987  0189  0023               	movlb	3	; select bank3
  1988  018A  063D               	xorwf	_mainReceivedDataBuffer^(0+384),w
  1989  018B  1D03               	btfss	3,2
  1990  018C  2B07               	goto	l6937
  1991  018D  3047               	movlw	71
  1992  018E  063E               	xorwf	(_mainReceivedDataBuffer^(0+384)+1),w
  1993  018F  1D03               	btfss	3,2
  1994  0190  2B07               	goto	l6937
  1995                           
  1996                           ;main.c: 466: ReceivingIndicationLedBlinking();
  1997  0191  3197  273B  3181   	fcall	_ReceivingIndicationLedBlinking
  1998                           
  1999                           ;main.c: 467: ConvertmaindataReceiveIntoString = mainReceivedDataBuffer;
  2000  0194  30BD               	movlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  2001  0195  0020               	movlb	0	; select bank0
  2002  0196  00DA               	movwf	??_main
  2003  0197  085A               	movf	??_main,w
  2004  0198  00E9               	movwf	_ConvertmaindataReceiveIntoString
  2005                           
  2006                           ;main.c: 474: token = strtok(ConvertmaindataReceiveIntoString,".");
  2007  0199  3038               	movlw	low (STR_3| (0+32768))
  2008  019A  00AE               	movwf	strtok@s2
  2009  019B  3098               	movlw	high (STR_3| (0+32768))
  2010  019C  00AF               	movwf	strtok@s2+1
  2011  019D  0869               	movf	_ConvertmaindataReceiveIntoString,w
  2012  019E  318A  22D6  3181   	fcall	_strtok
  2013  01A1  0020               	movlb	0	; select bank0
  2014  01A2  00DA               	movwf	??_main
  2015  01A3  085A               	movf	??_main,w
  2016  01A4  00E8               	movwf	_token
  2017                           
  2018                           ;main.c: 475: ModuleNameString = token;
  2019  01A5  0868               	movf	_token,w
  2020  01A6  00DA               	movwf	??_main
  2021  01A7  085A               	movf	??_main,w
  2022  01A8  00E7               	movwf	_ModuleNameString
  2023                           
  2024                           ;main.c: 477: partCounter=0;
  2025  01A9  0022               	movlb	2	; select bank2
  2026  01AA  01B6               	clrf	_partCounter^(0+256)
  2027  01AB  01B7               	clrf	(_partCounter+1)^(0+256)
  2028                           
  2029                           ;main.c: 478: if((strcmp(ModuleNameString,"RGB") == 0)){
  2030  01AC  302F               	movlw	low (STR_15| (0+32768))
  2031  01AD  0020               	movlb	0	; select bank0
  2032  01AE  00A0               	movwf	strcmp@s2
  2033  01AF  3098               	movlw	high (STR_15| (0+32768))
  2034  01B0  00A1               	movwf	strcmp@s2+1
  2035  01B1  0867               	movf	_ModuleNameString,w
  2036  01B2  3188  20BB  3181   	fcall	_strcmp
  2037  01B5  0020               	movlb	0	; select bank0
  2038  01B6  0820               	movf	?_strcmp,w
  2039  01B7  0421               	iorwf	?_strcmp+1,w
  2040  01B8  1903               	btfsc	3,2
  2041  01B9  2B02               	goto	l6935
  2042  01BA  2B42               	goto	l6955
  2043  01BB                     l6861:	
  2044                           ;main.c: 481: while(token != (0))
  2045                           
  2046                           
  2047                           ;main.c: 482: {
  2048                           ;main.c: 483: partCounter++;
  2049  01BB  3001               	movlw	1
  2050  01BC  0022               	movlb	2	; select bank2
  2051  01BD  07B6               	addwf	_partCounter^(0+256),f
  2052  01BE  3000               	movlw	0
  2053  01BF  3DB7               	addwfc	(_partCounter+1)^(0+256),f
  2054                           
  2055                           ;main.c: 484: token = strtok((0),".");
  2056  01C0  3038               	movlw	low (STR_3| (0+32768))
  2057  01C1  0020               	movlb	0	; select bank0
  2058  01C2  00AE               	movwf	strtok@s2
  2059  01C3  3098               	movlw	high (STR_3| (0+32768))
  2060  01C4  00AF               	movwf	strtok@s2+1
  2061  01C5  3000               	movlw	0
  2062  01C6  318A  22D6  3181   	fcall	_strtok
  2063  01C9  0020               	movlb	0	; select bank0
  2064  01CA  00DA               	movwf	??_main
  2065  01CB  085A               	movf	??_main,w
  2066  01CC  00E8               	movwf	_token
  2067                           
  2068                           ;main.c: 485: switch(partCounter){
  2069  01CD  2AEF               	goto	l6933
  2070  01CE                     l6865:	
  2071                           ;main.c: 486: case 1:
  2072                           
  2073                           
  2074                           ;main.c: 487: {
  2075                           ;main.c: 488: int j=0;
  2076  01CE  0023               	movlb	3	; select bank3
  2077  01CF  01E7               	clrf	main@j^(0+384)
  2078  01D0  01E8               	clrf	(main@j+1)^(0+384)
  2079                           
  2080                           ;main.c: 489: for(j=0;j<1;j++)
  2081  01D1  01E7               	clrf	main@j^(0+384)
  2082  01D2  01E8               	clrf	(main@j+1)^(0+384)
  2083  01D3  0868               	movf	(main@j+1)^(0+384),w
  2084  01D4  3A80               	xorlw	128
  2085  01D5  0020               	movlb	0	; select bank0
  2086  01D6  00DA               	movwf	??_main
  2087  01D7  3080               	movlw	128
  2088  01D8  025A               	subwf	??_main,w
  2089  01D9  1D03               	skipz
  2090  01DA  29DE               	goto	u7965
  2091  01DB  3001               	movlw	1
  2092  01DC  0023               	movlb	3	; select bank3
  2093  01DD  0267               	subwf	main@j^(0+384),w
  2094  01DE                     u7965:	
  2095  01DE  1803               	btfsc	3,0
  2096  01DF  2A06               	goto	l6879
  2097  01E0                     l6871:	
  2098                           
  2099                           ;main.c: 490: {
  2100                           ;main.c: 491: switchNumberBuffer[j]= *token;
  2101  01E0  0020               	movlb	0	; select bank0
  2102  01E1  0868               	movf	_token,w
  2103  01E2  0086               	movwf	6
  2104  01E3  3001               	movlw	1	; select bank2/3
  2105  01E4  0087               	movwf	7
  2106  01E5  0801               	movf	1,w
  2107  01E6  00DA               	movwf	??_main
  2108  01E7  0023               	movlb	3	; select bank3
  2109  01E8  0867               	movf	main@j^(0+384),w
  2110  01E9  3EE2               	addlw	(low (_switchNumberBuffer| (0+256)))& (0+255)
  2111  01EA  0086               	movwf	6
  2112  01EB  3001               	movlw	1	; select bank3/4
  2113  01EC  0087               	movwf	7
  2114  01ED  0020               	movlb	0	; select bank0
  2115  01EE  085A               	movf	??_main,w
  2116  01EF  0081               	movwf	1
  2117                           
  2118                           ;main.c: 492: *token++;
  2119  01F0  3001               	movlw	1
  2120  01F1  00DA               	movwf	??_main
  2121  01F2  085A               	movf	??_main,w
  2122  01F3  07E8               	addwf	_token,f
  2123  01F4  3001               	movlw	1
  2124  01F5  0023               	movlb	3	; select bank3
  2125  01F6  07E7               	addwf	main@j^(0+384),f
  2126  01F7  3000               	movlw	0
  2127  01F8  3DE8               	addwfc	(main@j+1)^(0+384),f
  2128  01F9  0868               	movf	(main@j+1)^(0+384),w
  2129  01FA  3A80               	xorlw	128
  2130  01FB  0020               	movlb	0	; select bank0
  2131  01FC  00DA               	movwf	??_main
  2132  01FD  3080               	movlw	128
  2133  01FE  025A               	subwf	??_main,w
  2134  01FF  1D03               	skipz
  2135  0200  2A04               	goto	u7975
  2136  0201  3001               	movlw	1
  2137  0202  0023               	movlb	3	; select bank3
  2138  0203  0267               	subwf	main@j^(0+384),w
  2139  0204                     u7975:	
  2140  0204  1C03               	skipc
  2141  0205  29E0               	goto	l6871
  2142  0206                     l6879:	
  2143                           
  2144                           ;main.c: 493: }
  2145                           ;main.c: 494: SwitchNumberString = switchNumberBuffer;
  2146  0206  30E2               	movlw	(low (_switchNumberBuffer| (0+256)))& (0+255)
  2147  0207  0020               	movlb	0	; select bank0
  2148  0208  00DA               	movwf	??_main
  2149  0209  085A               	movf	??_main,w
  2150  020A  0021               	movlb	1	; select bank1
  2151  020B  00E3               	movwf	_SwitchNumberString^(0+128)
  2152                           
  2153                           ;main.c: 497: }break;
  2154  020C  2B02               	goto	l6935
  2155  020D                     l6881:	
  2156                           ;main.c: 499: case 2:
  2157                           
  2158                           
  2159                           ;main.c: 500: {
  2160                           ;main.c: 501: AcknowledgementString = token;
  2161  020D  0020               	movlb	0	; select bank0
  2162  020E  0868               	movf	_token,w
  2163  020F  00DA               	movwf	??_main
  2164  0210  085A               	movf	??_main,w
  2165  0211  0021               	movlb	1	; select bank1
  2166  0212  00E2               	movwf	_AcknowledgementString^(0+128)
  2167                           
  2168                           ;main.c: 504: }break;
  2169  0213  2B02               	goto	l6935
  2170  0214                     l6883:	
  2171                           ;main.c: 505: case 3:
  2172                           
  2173                           
  2174                           ;main.c: 506: {
  2175                           ;main.c: 507: int k=0;
  2176  0214  0023               	movlb	3	; select bank3
  2177  0215  01E9               	clrf	main@k^(0+384)
  2178  0216  01EA               	clrf	(main@k+1)^(0+384)
  2179                           
  2180                           ;main.c: 508: for(k=0;k<1;k++)
  2181  0217  01E9               	clrf	main@k^(0+384)
  2182  0218  01EA               	clrf	(main@k+1)^(0+384)
  2183  0219  086A               	movf	(main@k+1)^(0+384),w
  2184  021A  3A80               	xorlw	128
  2185  021B  0020               	movlb	0	; select bank0
  2186  021C  00DA               	movwf	??_main
  2187  021D  3080               	movlw	128
  2188  021E  025A               	subwf	??_main,w
  2189  021F  1D03               	skipz
  2190  0220  2A24               	goto	u7985
  2191  0221  3001               	movlw	1
  2192  0222  0023               	movlb	3	; select bank3
  2193  0223  0269               	subwf	main@k^(0+384),w
  2194  0224                     u7985:	
  2195  0224  1803               	btfsc	3,0
  2196  0225  2A4C               	goto	l6897
  2197  0226                     l6889:	
  2198                           
  2199                           ;main.c: 509: {
  2200                           ;main.c: 510: switchstatusbuffer[k]= *token;
  2201  0226  0020               	movlb	0	; select bank0
  2202  0227  0868               	movf	_token,w
  2203  0228  0086               	movwf	6
  2204  0229  3001               	movlw	1	; select bank2/3
  2205  022A  0087               	movwf	7
  2206  022B  0801               	movf	1,w
  2207  022C  00DA               	movwf	??_main
  2208  022D  0023               	movlb	3	; select bank3
  2209  022E  0869               	movf	main@k^(0+384),w
  2210  022F  3E63               	addlw	(low (_switchstatusbuffer| (0+256)))& (0+255)
  2211  0230  0086               	movwf	6
  2212  0231  3001               	movlw	1	; select bank2/3
  2213  0232  0087               	movwf	7
  2214  0233  0020               	movlb	0	; select bank0
  2215  0234  085A               	movf	??_main,w
  2216  0235  0081               	movwf	1
  2217                           
  2218                           ;main.c: 511: *token++;
  2219  0236  3001               	movlw	1
  2220  0237  00DA               	movwf	??_main
  2221  0238  085A               	movf	??_main,w
  2222  0239  07E8               	addwf	_token,f
  2223  023A  3001               	movlw	1
  2224  023B  0023               	movlb	3	; select bank3
  2225  023C  07E9               	addwf	main@k^(0+384),f
  2226  023D  3000               	movlw	0
  2227  023E  3DEA               	addwfc	(main@k+1)^(0+384),f
  2228  023F  086A               	movf	(main@k+1)^(0+384),w
  2229  0240  3A80               	xorlw	128
  2230  0241  0020               	movlb	0	; select bank0
  2231  0242  00DA               	movwf	??_main
  2232  0243  3080               	movlw	128
  2233  0244  025A               	subwf	??_main,w
  2234  0245  1D03               	skipz
  2235  0246  2A4A               	goto	u7995
  2236  0247  3001               	movlw	1
  2237  0248  0023               	movlb	3	; select bank3
  2238  0249  0269               	subwf	main@k^(0+384),w
  2239  024A                     u7995:	
  2240  024A  1C03               	skipc
  2241  024B  2A26               	goto	l6889
  2242  024C                     l6897:	
  2243                           
  2244                           ;main.c: 512: }
  2245                           ;main.c: 513: SwitchStatusString = switchstatusbuffer;
  2246  024C  3063               	movlw	(low (_switchstatusbuffer| (0+256)))& (0+255)
  2247  024D  0020               	movlb	0	; select bank0
  2248  024E  00DA               	movwf	??_main
  2249  024F  085A               	movf	??_main,w
  2250  0250  0021               	movlb	1	; select bank1
  2251  0251  00E1               	movwf	_SwitchStatusString^(0+128)
  2252                           
  2253                           ;main.c: 517: } break;
  2254  0252  2B02               	goto	l6935
  2255  0253                     l6899:	
  2256                           ;main.c: 518: case 4:
  2257                           
  2258                           
  2259                           ;main.c: 519: {
  2260                           ;main.c: 520: RedColorIntensityString = token;
  2261  0253  0020               	movlb	0	; select bank0
  2262  0254  0868               	movf	_token,w
  2263  0255  00DA               	movwf	??_main
  2264  0256  085A               	movf	??_main,w
  2265  0257  00E6               	movwf	_RedColorIntensityString
  2266                           
  2267                           ;main.c: 521: RedColorIntensityStringLength = strlen(RedColorIntensityString);
  2268  0258  0866               	movf	_RedColorIntensityString,w
  2269  0259  00A0               	movwf	strlen@s
  2270  025A  39FF               	andlw	255
  2271  025B  1D03               	skipz
  2272  025C  3001               	movlw	1
  2273  025D  00A1               	movwf	strlen@s+1
  2274  025E  3188  2033  3181   	fcall	_strlen
  2275  0261  0020               	movlb	0	; select bank0
  2276  0262  0821               	movf	?_strlen+1,w
  2277  0263  0022               	movlb	2	; select bank2
  2278  0264  00BD               	movwf	(_RedColorIntensityStringLength+1)^(0+256)
  2279  0265  0020               	movlb	0	; select bank0
  2280  0266  0820               	movf	?_strlen,w
  2281  0267  0022               	movlb	2	; select bank2
  2282  0268  00BC               	movwf	_RedColorIntensityStringLength^(0+256)
  2283                           
  2284                           ;main.c: 524: } break;
  2285  0269  2B02               	goto	l6935
  2286  026A                     l6903:	
  2287                           ;main.c: 525: case 5:
  2288                           
  2289                           
  2290                           ;main.c: 526: {
  2291                           ;main.c: 527: GreenColorIntensityString = token;
  2292  026A  0020               	movlb	0	; select bank0
  2293  026B  0868               	movf	_token,w
  2294  026C  00DA               	movwf	??_main
  2295  026D  085A               	movf	??_main,w
  2296  026E  00E5               	movwf	_GreenColorIntensityString
  2297                           
  2298                           ;main.c: 528: GreenColorIntensityStringLength = strlen(GreenColorIntensityString);
  2299  026F  0865               	movf	_GreenColorIntensityString,w
  2300  0270  00A0               	movwf	strlen@s
  2301  0271  39FF               	andlw	255
  2302  0272  1D03               	skipz
  2303  0273  3001               	movlw	1
  2304  0274  00A1               	movwf	strlen@s+1
  2305  0275  3188  2033  3181   	fcall	_strlen
  2306  0278  0020               	movlb	0	; select bank0
  2307  0279  0821               	movf	?_strlen+1,w
  2308  027A  0022               	movlb	2	; select bank2
  2309  027B  00BB               	movwf	(_GreenColorIntensityStringLength+1)^(0+256)
  2310  027C  0020               	movlb	0	; select bank0
  2311  027D  0820               	movf	?_strlen,w
  2312  027E  0022               	movlb	2	; select bank2
  2313  027F  00BA               	movwf	_GreenColorIntensityStringLength^(0+256)
  2314                           
  2315                           ;main.c: 531: } break;
  2316  0280  2B02               	goto	l6935
  2317  0281                     l6907:	
  2318                           ;main.c: 532: case 6:
  2319                           
  2320                           
  2321                           ;main.c: 533: {
  2322                           ;main.c: 534: BlueColorIntensityString = token;
  2323  0281  0020               	movlb	0	; select bank0
  2324  0282  0868               	movf	_token,w
  2325  0283  00DA               	movwf	??_main
  2326  0284  085A               	movf	??_main,w
  2327  0285  00E4               	movwf	_BlueColorIntensityString
  2328                           
  2329                           ;main.c: 535: BlueColorIntensityStringLength = strlen(BlueColorIntensityString);
  2330  0286  0864               	movf	_BlueColorIntensityString,w
  2331  0287  00A0               	movwf	strlen@s
  2332  0288  39FF               	andlw	255
  2333  0289  1D03               	skipz
  2334  028A  3001               	movlw	1
  2335  028B  00A1               	movwf	strlen@s+1
  2336  028C  3188  2033  3181   	fcall	_strlen
  2337  028F  0020               	movlb	0	; select bank0
  2338  0290  0821               	movf	?_strlen+1,w
  2339  0291  0022               	movlb	2	; select bank2
  2340  0292  00B9               	movwf	(_BlueColorIntensityStringLength+1)^(0+256)
  2341  0293  0020               	movlb	0	; select bank0
  2342  0294  0820               	movf	?_strlen,w
  2343  0295  0022               	movlb	2	; select bank2
  2344  0296  00B8               	movwf	_BlueColorIntensityStringLength^(0+256)
  2345                           
  2346                           ;main.c: 538: } break;
  2347  0297  2B02               	goto	l6935
  2348  0298                     l6911:	
  2349                           ;main.c: 539: case 7:
  2350                           
  2351                           
  2352                           ;main.c: 540: {
  2353                           ;main.c: 542: int k=0;
  2354  0298  0023               	movlb	3	; select bank3
  2355  0299  01EB               	clrf	main@k_1031^(0+384)
  2356  029A  01EC               	clrf	(main@k_1031+1)^(0+384)
  2357                           
  2358                           ;main.c: 543: for(k=0;k<1;k++)
  2359  029B  01EB               	clrf	main@k_1031^(0+384)
  2360  029C  01EC               	clrf	(main@k_1031+1)^(0+384)
  2361  029D  086C               	movf	(main@k_1031+1)^(0+384),w
  2362  029E  3A80               	xorlw	128
  2363  029F  0020               	movlb	0	; select bank0
  2364  02A0  00DA               	movwf	??_main
  2365  02A1  3080               	movlw	128
  2366  02A2  025A               	subwf	??_main,w
  2367  02A3  1D03               	skipz
  2368  02A4  2AA8               	goto	u8005
  2369  02A5  3001               	movlw	1
  2370  02A6  0023               	movlb	3	; select bank3
  2371  02A7  026B               	subwf	main@k_1031^(0+384),w
  2372  02A8                     u8005:	
  2373  02A8  1803               	btfsc	3,0
  2374  02A9  2AD2               	goto	l6925
  2375  02AA                     l6917:	
  2376                           
  2377                           ;main.c: 544: {
  2378                           ;main.c: 545: ChildLockString[k]= *token;
  2379  02AA  0020               	movlb	0	; select bank0
  2380  02AB  0868               	movf	_token,w
  2381  02AC  0086               	movwf	6
  2382  02AD  3001               	movlw	1	; select bank2/3
  2383  02AE  0087               	movwf	7
  2384  02AF  0801               	movf	1,w
  2385  02B0  00DA               	movwf	??_main
  2386  02B1  0023               	movlb	3	; select bank3
  2387  02B2  086B               	movf	main@k_1031^(0+384),w
  2388  02B3  0774               	addwf	_ChildLockString,w
  2389  02B4  0020               	movlb	0	; select bank0
  2390  02B5  00DB               	movwf	??_main+1
  2391  02B6  085B               	movf	??_main+1,w
  2392  02B7  0086               	movwf	6
  2393  02B8  3001               	movlw	1	; select bank2/3
  2394  02B9  0087               	movwf	7
  2395  02BA  085A               	movf	??_main,w
  2396  02BB  0081               	movwf	1
  2397                           
  2398                           ;main.c: 546: *token++;
  2399  02BC  3001               	movlw	1
  2400  02BD  00DA               	movwf	??_main
  2401  02BE  085A               	movf	??_main,w
  2402  02BF  07E8               	addwf	_token,f
  2403  02C0  3001               	movlw	1
  2404  02C1  0023               	movlb	3	; select bank3
  2405  02C2  07EB               	addwf	main@k_1031^(0+384),f
  2406  02C3  3000               	movlw	0
  2407  02C4  3DEC               	addwfc	(main@k_1031+1)^(0+384),f
  2408  02C5  086C               	movf	(main@k_1031+1)^(0+384),w
  2409  02C6  3A80               	xorlw	128
  2410  02C7  0020               	movlb	0	; select bank0
  2411  02C8  00DA               	movwf	??_main
  2412  02C9  3080               	movlw	128
  2413  02CA  025A               	subwf	??_main,w
  2414  02CB  1D03               	skipz
  2415  02CC  2AD0               	goto	u8015
  2416  02CD  3001               	movlw	1
  2417  02CE  0023               	movlb	3	; select bank3
  2418  02CF  026B               	subwf	main@k_1031^(0+384),w
  2419  02D0                     u8015:	
  2420  02D0  1C03               	skipc
  2421  02D1  2AAA               	goto	l6917
  2422  02D2                     l6925:	
  2423                           
  2424                           ;main.c: 547: }
  2425                           ;main.c: 548: ChildLockString = ChildLockbuffer;
  2426  02D2  3061               	movlw	(low (_ChildLockbuffer| (0+256)))& (0+255)
  2427  02D3  0020               	movlb	0	; select bank0
  2428  02D4  00DA               	movwf	??_main
  2429  02D5  085A               	movf	??_main,w
  2430  02D6  00F4               	movwf	_ChildLockString
  2431                           
  2432                           ;main.c: 551: } break;
  2433  02D7  2B02               	goto	l6935
  2434  02D8                     l6927:	
  2435                           ;main.c: 552: case 8:
  2436                           
  2437                           
  2438                           ;main.c: 553: {
  2439                           ;main.c: 554: AllColorIntensityString = token;
  2440  02D8  0020               	movlb	0	; select bank0
  2441  02D9  0868               	movf	_token,w
  2442  02DA  00DA               	movwf	??_main
  2443  02DB  085A               	movf	??_main,w
  2444  02DC  00E3               	movwf	_AllColorIntensityString
  2445                           
  2446                           ;main.c: 555: AllColorIntensityStringLength = strlen(AllColorIntensityString);
  2447  02DD  0863               	movf	_AllColorIntensityString,w
  2448  02DE  00A0               	movwf	strlen@s
  2449  02DF  39FF               	andlw	255
  2450  02E0  1D03               	skipz
  2451  02E1  3001               	movlw	1
  2452  02E2  00A1               	movwf	strlen@s+1
  2453  02E3  3188  2033  3181   	fcall	_strlen
  2454  02E6  0020               	movlb	0	; select bank0
  2455  02E7  0821               	movf	?_strlen+1,w
  2456  02E8  0023               	movlb	3	; select bank3
  2457  02E9  00DF               	movwf	(_AllColorIntensityStringLength+1)^(0+384)
  2458  02EA  0020               	movlb	0	; select bank0
  2459  02EB  0820               	movf	?_strlen,w
  2460  02EC  0023               	movlb	3	; select bank3
  2461  02ED  00DE               	movwf	_AllColorIntensityStringLength^(0+384)
  2462                           
  2463                           ;main.c: 566: }
  2464                           
  2465                           ;main.c: 563: break;
  2466                           
  2467                           ;main.c: 562: default:
  2468                           
  2469                           ;main.c: 560: }break;
  2470  02EE  2B02               	goto	l6935
  2471  02EF                     l6933:	
  2472                           
  2473                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2474                           ; Switch size 1, requested type "space"
  2475                           ; Number of cases is 1, Range of values is 0 to 0
  2476                           ; switch strategies available:
  2477                           ; Name         Instructions Cycles
  2478                           ; simple_byte            4     3 (average)
  2479                           ; direct_byte            8     6 (fixed)
  2480                           ; jumptable            260     6 (fixed)
  2481                           ;	Chosen strategy is simple_byte
  2482  02EF  0022               	movlb	2	; select bank2
  2483  02F0  0837               	movf	(_partCounter+1)^(0+256),w
  2484  02F1  3A00               	xorlw	0	; case 0
  2485  02F2  1903               	skipnz
  2486  02F3  2AF5               	goto	l7355
  2487  02F4  2B02               	goto	l6935
  2488  02F5                     l7355:	
  2489                           
  2490                           ; Switch size 1, requested type "space"
  2491                           ; Number of cases is 8, Range of values is 1 to 8
  2492                           ; switch strategies available:
  2493                           ; Name         Instructions Cycles
  2494                           ; direct_byte           25     9 (fixed)
  2495                           ; simple_byte           25    13 (average)
  2496                           ; jumptable            263     9 (fixed)
  2497                           ;	Chosen strategy is direct_byte
  2498  02F5  0836               	movf	_partCounter^(0+256),w
  2499  02F6  3EFF               	addlw	-1
  2500  02F7  1C03               	skipc
  2501  02F8  2B02               	goto	l6935
  2502  02F9  0084               	movwf	4
  2503  02FA  3008               	movlw	8
  2504  02FB  0204               	subwf	4,w
  2505  02FC  1803               	skipnc
  2506  02FD  2B02               	goto	l6935
  2507  02FE  3190               	movlp	high S7357
  2508  02FF  3504               	lslf	4,w
  2509  0300  3E12               	addlw	low S7357
  2510  0301  0082               	movwf	2
  2511  0302                     l6935:	
  2512  0302  0020               	movlb	0	; select bank0
  2513  0303  0868               	movf	_token,w
  2514  0304  1903               	btfsc	3,2
  2515  0305  2B42               	goto	l6955
  2516  0306  29BB               	goto	l6861
  2517  0307                     l6937:	
  2518                           ;main.c: 567: }
  2519                           ;main.c: 569: }
  2520                           ;main.c: 573: }
  2521                           
  2522                           
  2523                           ;main.c: 575: else
  2524                           ;main.c: 576: {
  2525                           ;main.c: 578: errorsMain("ERLS");
  2526  0307  3020               	movlw	low (STR_17| (0+32768))
  2527  0308  0020               	movlb	0	; select bank0
  2528  0309  00A0               	movwf	errorsMain@errNum
  2529  030A  3098               	movlw	high (STR_17| (0+32768))
  2530  030B  00A1               	movwf	errorsMain@errNum+1
  2531  030C  3197  27B1  3181   	fcall	_errorsMain
  2532                           
  2533                           ;main.c: 579: RC1STAbits.SPEN=0;
  2534  030F  0023               	movlb	3	; select bank3
  2535  0310  139D               	bcf	29,7	;volatile
  2536                           
  2537                           ;main.c: 580: RC1STAbits.CREN = 0;
  2538  0311  121D               	bcf	29,4	;volatile
  2539                           
  2540                           ;main.c: 581: for(int dataBufferCounter = 0; dataBufferCounter< 15; dataBufferCounter++)
  2541  0312  01E5               	clrf	main@dataBufferCounter^(0+384)
  2542  0313  01E6               	clrf	(main@dataBufferCounter+1)^(0+384)
  2543  0314  0866               	movf	(main@dataBufferCounter+1)^(0+384),w
  2544  0315  3A80               	xorlw	128
  2545  0316  0020               	movlb	0	; select bank0
  2546  0317  00DA               	movwf	??_main
  2547  0318  3080               	movlw	128
  2548  0319  025A               	subwf	??_main,w
  2549  031A  1D03               	skipz
  2550  031B  2B1F               	goto	u8035
  2551  031C  300F               	movlw	15
  2552  031D  0023               	movlb	3	; select bank3
  2553  031E  0265               	subwf	main@dataBufferCounter^(0+384),w
  2554  031F                     u8035:	
  2555  031F  1803               	btfsc	3,0
  2556  0320  2B3F               	goto	l542
  2557  0321                     l6949:	
  2558                           
  2559                           ;main.c: 582: {
  2560                           ;main.c: 583: mainReceivedDataBuffer[dataBufferCounter] = '#';
  2561  0321  3023               	movlw	35
  2562  0322  0020               	movlb	0	; select bank0
  2563  0323  00DA               	movwf	??_main
  2564  0324  0023               	movlb	3	; select bank3
  2565  0325  0865               	movf	main@dataBufferCounter^(0+384),w
  2566  0326  3EBD               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  2567  0327  0086               	movwf	6
  2568  0328  3001               	movlw	1	; select bank3/4
  2569  0329  0087               	movwf	7
  2570  032A  0020               	movlb	0	; select bank0
  2571  032B  085A               	movf	??_main,w
  2572  032C  0081               	movwf	1
  2573  032D  3001               	movlw	1
  2574  032E  0023               	movlb	3	; select bank3
  2575  032F  07E5               	addwf	main@dataBufferCounter^(0+384),f
  2576  0330  3000               	movlw	0
  2577  0331  3DE6               	addwfc	(main@dataBufferCounter+1)^(0+384),f
  2578  0332  0866               	movf	(main@dataBufferCounter+1)^(0+384),w
  2579  0333  3A80               	xorlw	128
  2580  0334  0020               	movlb	0	; select bank0
  2581  0335  00DA               	movwf	??_main
  2582  0336  3080               	movlw	128
  2583  0337  025A               	subwf	??_main,w
  2584  0338  1D03               	skipz
  2585  0339  2B3D               	goto	u8045
  2586  033A  300F               	movlw	15
  2587  033B  0023               	movlb	3	; select bank3
  2588  033C  0265               	subwf	main@dataBufferCounter^(0+384),w
  2589  033D                     u8045:	
  2590  033D  1C03               	skipc
  2591  033E  2B21               	goto	l6949
  2592  033F                     l542:	
  2593                           
  2594                           ;main.c: 584: }
  2595                           ;main.c: 585: RC1STAbits.CREN = 1;
  2596  033F  0023               	movlb	3	; select bank3
  2597  0340  161D               	bsf	29,4	;volatile
  2598                           
  2599                           ;main.c: 586: RC1STAbits.SPEN=1;
  2600  0341  179D               	bsf	29,7	;volatile
  2601  0342                     l6955:	
  2602                           
  2603                           ;main.c: 587: }
  2604                           ;main.c: 588: }
  2605                           ;main.c: 593: int man = 1;
  2606  0342  3001               	movlw	1
  2607  0343  0023               	movlb	3	; select bank3
  2608  0344  00ED               	movwf	main@man^(0+384)
  2609  0345  3000               	movlw	0
  2610  0346  00EE               	movwf	(main@man^(0+384)+1)
  2611                           
  2612                           ;main.c: 594: if(copy_parentalLockBuffer[1] == '0' && PORTDbits.RD6 == 0 && M1 == 0)
  2613  0347  3030               	movlw	48
  2614  0348  0621               	xorwf	(_copy_parentalLockBuffer^(0+384)+1),w
  2615  0349  1D03               	btfss	3,2
  2616  034A  2B6D               	goto	l6973
  2617  034B  0020               	movlb	0	; select bank0
  2618  034C  1B0F               	btfsc	15,6	;volatile
  2619  034D  2B6D               	goto	l6973
  2620  034E  0022               	movlb	2	; select bank2
  2621  034F  0830               	movf	_M1^(0+256),w
  2622  0350  0431               	iorwf	(_M1+1)^(0+256),w
  2623  0351  1D03               	btfss	3,2
  2624  0352  2B6D               	goto	l6973
  2625                           
  2626                           ;main.c: 595: {
  2627                           ;main.c: 596: if(man == 1)
  2628  0353  0023               	movlb	3	; select bank3
  2629  0354  036D               	decf	main@man^(0+384),w
  2630  0355  046E               	iorwf	(main@man+1)^(0+384),w
  2631  0356  1D03               	btfss	3,2
  2632  0357  2B65               	goto	l6969
  2633                           
  2634                           ;main.c: 597: {
  2635                           ;main.c: 598: SwitchOnStatustToGatway(1);
  2636  0358  3001               	movlw	1
  2637  0359  0020               	movlb	0	; select bank0
  2638  035A  00A0               	movwf	SwitchOnStatustToGatway@SwitchOnNumber
  2639  035B  3000               	movlw	0
  2640  035C  00A1               	movwf	SwitchOnStatustToGatway@SwitchOnNumber+1
  2641  035D  318A  2234  3181   	fcall	_SwitchOnStatustToGatway
  2642                           
  2643                           ;main.c: 600: TransmissionIndicationLedBlinking();
  2644  0360  3197  274C  3181   	fcall	_TransmissionIndicationLedBlinking
  2645                           
  2646                           ;main.c: 601: PORTEbits.RE0=1;
  2647  0363  0020               	movlb	0	; select bank0
  2648  0364  1410               	bsf	16,0	;volatile
  2649  0365                     l6969:	
  2650                           
  2651                           ;main.c: 603: }
  2652                           ;main.c: 604: man=0;
  2653  0365  0023               	movlb	3	; select bank3
  2654  0366  01ED               	clrf	main@man^(0+384)
  2655  0367  01EE               	clrf	(main@man+1)^(0+384)
  2656                           
  2657                           ;main.c: 605: M1=1;
  2658  0368  3001               	movlw	1
  2659  0369  0022               	movlb	2	; select bank2
  2660  036A  00B0               	movwf	_M1^(0+256)
  2661  036B  3000               	movlw	0
  2662  036C  00B1               	movwf	(_M1^(0+256)+1)
  2663  036D                     l6973:	
  2664                           
  2665                           ;main.c: 607: }
  2666                           ;main.c: 609: if(copy_parentalLockBuffer[1] == '0' && PORTDbits.RD6 == 1 && M1 == 1)
  2667  036D  3030               	movlw	48
  2668  036E  0023               	movlb	3	; select bank3
  2669  036F  0621               	xorwf	(_copy_parentalLockBuffer^(0+384)+1),w
  2670  0370  1D03               	btfss	3,2
  2671  0371  2B92               	goto	l6989
  2672  0372  0020               	movlb	0	; select bank0
  2673  0373  1F0F               	btfss	15,6	;volatile
  2674  0374  2B92               	goto	l6989
  2675  0375  0022               	movlb	2	; select bank2
  2676  0376  0330               	decf	_M1^(0+256),w
  2677  0377  0431               	iorwf	(_M1+1)^(0+256),w
  2678  0378  1D03               	btfss	3,2
  2679  0379  2B92               	goto	l6989
  2680                           
  2681                           ;main.c: 610: {
  2682                           ;main.c: 612: if(man==1)
  2683  037A  0023               	movlb	3	; select bank3
  2684  037B  036D               	decf	main@man^(0+384),w
  2685  037C  046E               	iorwf	(main@man+1)^(0+384),w
  2686  037D  1D03               	btfss	3,2
  2687  037E  2B8C               	goto	l6985
  2688                           
  2689                           ;main.c: 613: {
  2690                           ;main.c: 614: SwitchOffStatustToGatway(1);
  2691  037F  3001               	movlw	1
  2692  0380  0020               	movlb	0	; select bank0
  2693  0381  00A0               	movwf	SwitchOffStatustToGatway@SwitchOffNumber
  2694  0382  3000               	movlw	0
  2695  0383  00A1               	movwf	SwitchOffStatustToGatway@SwitchOffNumber+1
  2696  0384  318A  2201  3181   	fcall	_SwitchOffStatustToGatway
  2697                           
  2698                           ;main.c: 615: TransmissionIndicationLedBlinking();
  2699  0387  3197  274C  3181   	fcall	_TransmissionIndicationLedBlinking
  2700                           
  2701                           ;main.c: 616: PORTEbits.RE0=0;
  2702  038A  0020               	movlb	0	; select bank0
  2703  038B  1010               	bcf	16,0	;volatile
  2704  038C                     l6985:	
  2705                           
  2706                           ;main.c: 617: }
  2707                           ;main.c: 618: man=0;
  2708  038C  0023               	movlb	3	; select bank3
  2709  038D  01ED               	clrf	main@man^(0+384)
  2710  038E  01EE               	clrf	(main@man+1)^(0+384)
  2711                           
  2712                           ;main.c: 619: M1=0;
  2713  038F  0022               	movlb	2	; select bank2
  2714  0390  01B0               	clrf	_M1^(0+256)
  2715  0391  01B1               	clrf	(_M1+1)^(0+256)
  2716  0392                     l6989:	
  2717                           
  2718                           ;main.c: 620: }
  2719                           ;main.c: 624: if(copy_parentalLockBuffer[2] == '0' && PORTDbits.RD7 == 0 && M2 == 0)
  2720  0392  3030               	movlw	48
  2721  0393  0023               	movlb	3	; select bank3
  2722  0394  0622               	xorwf	(_copy_parentalLockBuffer^(0+384)+2),w
  2723  0395  1D03               	btfss	3,2
  2724  0396  2BB9               	goto	l7005
  2725  0397  0020               	movlb	0	; select bank0
  2726  0398  1B8F               	btfsc	15,7	;volatile
  2727  0399  2BB9               	goto	l7005
  2728  039A  0022               	movlb	2	; select bank2
  2729  039B  082E               	movf	_M2^(0+256),w
  2730  039C  042F               	iorwf	(_M2+1)^(0+256),w
  2731  039D  1D03               	btfss	3,2
  2732  039E  2BB9               	goto	l7005
  2733                           
  2734                           ;main.c: 625: {
  2735                           ;main.c: 626: if(man==1)
  2736  039F  0023               	movlb	3	; select bank3
  2737  03A0  036D               	decf	main@man^(0+384),w
  2738  03A1  046E               	iorwf	(main@man+1)^(0+384),w
  2739  03A2  1D03               	btfss	3,2
  2740  03A3  2BB1               	goto	l7001
  2741                           
  2742                           ;main.c: 627: {
  2743                           ;main.c: 628: SwitchOnStatustToGatway(2);
  2744  03A4  3002               	movlw	2
  2745  03A5  0020               	movlb	0	; select bank0
  2746  03A6  00A0               	movwf	SwitchOnStatustToGatway@SwitchOnNumber
  2747  03A7  3000               	movlw	0
  2748  03A8  00A1               	movwf	SwitchOnStatustToGatway@SwitchOnNumber+1
  2749  03A9  318A  2234  3181   	fcall	_SwitchOnStatustToGatway
  2750                           
  2751                           ;main.c: 629: TransmissionIndicationLedBlinking();
  2752  03AC  3197  274C  3181   	fcall	_TransmissionIndicationLedBlinking
  2753                           
  2754                           ;main.c: 630: PORTEbits.RE1=1;
  2755  03AF  0020               	movlb	0	; select bank0
  2756  03B0  1490               	bsf	16,1	;volatile
  2757  03B1                     l7001:	
  2758                           
  2759                           ;main.c: 631: }
  2760                           ;main.c: 632: man=0;
  2761  03B1  0023               	movlb	3	; select bank3
  2762  03B2  01ED               	clrf	main@man^(0+384)
  2763  03B3  01EE               	clrf	(main@man+1)^(0+384)
  2764                           
  2765                           ;main.c: 633: M2=1;
  2766  03B4  3001               	movlw	1
  2767  03B5  0022               	movlb	2	; select bank2
  2768  03B6  00AE               	movwf	_M2^(0+256)
  2769  03B7  3000               	movlw	0
  2770  03B8  00AF               	movwf	(_M2^(0+256)+1)
  2771  03B9                     l7005:	
  2772                           
  2773                           ;main.c: 634: }
  2774                           ;main.c: 636: if(copy_parentalLockBuffer[2] == '0' && PORTDbits.RD7 == 1 && M2 == 1)
  2775  03B9  3030               	movlw	48
  2776  03BA  0023               	movlb	3	; select bank3
  2777  03BB  0622               	xorwf	(_copy_parentalLockBuffer^(0+384)+2),w
  2778  03BC  1D03               	btfss	3,2
  2779  03BD  2BDE               	goto	l7021
  2780  03BE  0020               	movlb	0	; select bank0
  2781  03BF  1F8F               	btfss	15,7	;volatile
  2782  03C0  2BDE               	goto	l7021
  2783  03C1  0022               	movlb	2	; select bank2
  2784  03C2  032E               	decf	_M2^(0+256),w
  2785  03C3  042F               	iorwf	(_M2+1)^(0+256),w
  2786  03C4  1D03               	btfss	3,2
  2787  03C5  2BDE               	goto	l7021
  2788                           
  2789                           ;main.c: 637: {
  2790                           ;main.c: 638: if(man==1)
  2791  03C6  0023               	movlb	3	; select bank3
  2792  03C7  036D               	decf	main@man^(0+384),w
  2793  03C8  046E               	iorwf	(main@man+1)^(0+384),w
  2794  03C9  1D03               	btfss	3,2
  2795  03CA  2BD8               	goto	l7017
  2796                           
  2797                           ;main.c: 639: {
  2798                           ;main.c: 640: SwitchOffStatustToGatway(2);
  2799  03CB  3002               	movlw	2
  2800  03CC  0020               	movlb	0	; select bank0
  2801  03CD  00A0               	movwf	SwitchOffStatustToGatway@SwitchOffNumber
  2802  03CE  3000               	movlw	0
  2803  03CF  00A1               	movwf	SwitchOffStatustToGatway@SwitchOffNumber+1
  2804  03D0  318A  2201  3181   	fcall	_SwitchOffStatustToGatway
  2805                           
  2806                           ;main.c: 641: TransmissionIndicationLedBlinking();
  2807  03D3  3197  274C  3181   	fcall	_TransmissionIndicationLedBlinking
  2808                           
  2809                           ;main.c: 642: PORTEbits.RE1=0;
  2810  03D6  0020               	movlb	0	; select bank0
  2811  03D7  1090               	bcf	16,1	;volatile
  2812  03D8                     l7017:	
  2813                           
  2814                           ;main.c: 643: }
  2815                           ;main.c: 644: man=0;
  2816  03D8  0023               	movlb	3	; select bank3
  2817  03D9  01ED               	clrf	main@man^(0+384)
  2818  03DA  01EE               	clrf	(main@man+1)^(0+384)
  2819                           
  2820                           ;main.c: 645: M2=0;
  2821  03DB  0022               	movlb	2	; select bank2
  2822  03DC  01AE               	clrf	_M2^(0+256)
  2823  03DD  01AF               	clrf	(_M2+1)^(0+256)
  2824  03DE                     l7021:	
  2825                           
  2826                           ;main.c: 646: }
  2827                           ;main.c: 651: if(copy_parentalLockBuffer[3] == '0' && PORTBbits.RB0 == 0 && M3 == 0)
  2828  03DE  3030               	movlw	48
  2829  03DF  0023               	movlb	3	; select bank3
  2830  03E0  0623               	xorwf	(_copy_parentalLockBuffer^(0+384)+3),w
  2831  03E1  1D03               	btfss	3,2
  2832  03E2  2C05               	goto	l7037
  2833  03E3  0020               	movlb	0	; select bank0
  2834  03E4  180D               	btfsc	13,0	;volatile
  2835  03E5  2C05               	goto	l7037
  2836  03E6  0022               	movlb	2	; select bank2
  2837  03E7  082C               	movf	_M3^(0+256),w
  2838  03E8  042D               	iorwf	(_M3+1)^(0+256),w
  2839  03E9  1D03               	btfss	3,2
  2840  03EA  2C05               	goto	l7037
  2841                           
  2842                           ;main.c: 652: {
  2843                           ;main.c: 653: if(man == 1)
  2844  03EB  0023               	movlb	3	; select bank3
  2845  03EC  036D               	decf	main@man^(0+384),w
  2846  03ED  046E               	iorwf	(main@man+1)^(0+384),w
  2847  03EE  1D03               	btfss	3,2
  2848  03EF  2BFD               	goto	l7033
  2849                           
  2850                           ;main.c: 654: {
  2851                           ;main.c: 655: SwitchOnStatustToGatway(3);
  2852  03F0  3003               	movlw	3
  2853  03F1  0020               	movlb	0	; select bank0
  2854  03F2  00A0               	movwf	SwitchOnStatustToGatway@SwitchOnNumber
  2855  03F3  3000               	movlw	0
  2856  03F4  00A1               	movwf	SwitchOnStatustToGatway@SwitchOnNumber+1
  2857  03F5  318A  2234  3181   	fcall	_SwitchOnStatustToGatway
  2858                           
  2859                           ;main.c: 656: TransmissionIndicationLedBlinking();
  2860  03F8  3197  274C  3181   	fcall	_TransmissionIndicationLedBlinking
  2861                           
  2862                           ;main.c: 657: PORTGbits.RG0=1;
  2863  03FB  0025               	movlb	5	; select bank5
  2864  03FC  140D               	bsf	13,0	;volatile
  2865  03FD                     l7033:	
  2866                           
  2867                           ;main.c: 658: }
  2868                           ;main.c: 659: man=0;
  2869  03FD  0023               	movlb	3	; select bank3
  2870  03FE  01ED               	clrf	main@man^(0+384)
  2871  03FF  01EE               	clrf	(main@man+1)^(0+384)
  2872                           
  2873                           ;main.c: 660: M3=1;
  2874  0400  3001               	movlw	1
  2875  0401  0022               	movlb	2	; select bank2
  2876  0402  00AC               	movwf	_M3^(0+256)
  2877  0403  3000               	movlw	0
  2878  0404  00AD               	movwf	(_M3^(0+256)+1)
  2879  0405                     l7037:	
  2880                           
  2881                           ;main.c: 662: }
  2882                           ;main.c: 664: if(copy_parentalLockBuffer[3] == '0' && PORTBbits.RB0 == 1 && M3 == 1)
  2883  0405  3030               	movlw	48
  2884  0406  0023               	movlb	3	; select bank3
  2885  0407  0623               	xorwf	(_copy_parentalLockBuffer^(0+384)+3),w
  2886  0408  1D03               	btfss	3,2
  2887  0409  2C2A               	goto	l7053
  2888  040A  0020               	movlb	0	; select bank0
  2889  040B  1C0D               	btfss	13,0	;volatile
  2890  040C  2C2A               	goto	l7053
  2891  040D  0022               	movlb	2	; select bank2
  2892  040E  032C               	decf	_M3^(0+256),w
  2893  040F  042D               	iorwf	(_M3+1)^(0+256),w
  2894  0410  1D03               	btfss	3,2
  2895  0411  2C2A               	goto	l7053
  2896                           
  2897                           ;main.c: 665: {
  2898                           ;main.c: 666: if(man==1)
  2899  0412  0023               	movlb	3	; select bank3
  2900  0413  036D               	decf	main@man^(0+384),w
  2901  0414  046E               	iorwf	(main@man+1)^(0+384),w
  2902  0415  1D03               	btfss	3,2
  2903  0416  2C24               	goto	l7049
  2904                           
  2905                           ;main.c: 667: {
  2906                           ;main.c: 668: SwitchOffStatustToGatway(3);
  2907  0417  3003               	movlw	3
  2908  0418  0020               	movlb	0	; select bank0
  2909  0419  00A0               	movwf	SwitchOffStatustToGatway@SwitchOffNumber
  2910  041A  3000               	movlw	0
  2911  041B  00A1               	movwf	SwitchOffStatustToGatway@SwitchOffNumber+1
  2912  041C  318A  2201  3181   	fcall	_SwitchOffStatustToGatway
  2913                           
  2914                           ;main.c: 669: TransmissionIndicationLedBlinking();
  2915  041F  3197  274C  3181   	fcall	_TransmissionIndicationLedBlinking
  2916                           
  2917                           ;main.c: 670: PORTGbits.RG0=0;
  2918  0422  0025               	movlb	5	; select bank5
  2919  0423  100D               	bcf	13,0	;volatile
  2920  0424                     l7049:	
  2921                           
  2922                           ;main.c: 671: }
  2923                           ;main.c: 672: man=0;
  2924  0424  0023               	movlb	3	; select bank3
  2925  0425  01ED               	clrf	main@man^(0+384)
  2926  0426  01EE               	clrf	(main@man+1)^(0+384)
  2927                           
  2928                           ;main.c: 673: M3=0;
  2929  0427  0022               	movlb	2	; select bank2
  2930  0428  01AC               	clrf	_M3^(0+256)
  2931  0429  01AD               	clrf	(_M3+1)^(0+256)
  2932  042A                     l7053:	
  2933                           
  2934                           ;main.c: 675: }
  2935                           ;main.c: 680: if(copy_parentalLockBuffer[4] == '0' && PORTBbits.RB1 == 0 && M4 == 0)
  2936  042A  3030               	movlw	48
  2937  042B  0023               	movlb	3	; select bank3
  2938  042C  0624               	xorwf	(_copy_parentalLockBuffer^(0+384)+4),w
  2939  042D  1D03               	btfss	3,2
  2940  042E  2C51               	goto	l7069
  2941  042F  0020               	movlb	0	; select bank0
  2942  0430  188D               	btfsc	13,1	;volatile
  2943  0431  2C51               	goto	l7069
  2944  0432  0022               	movlb	2	; select bank2
  2945  0433  082A               	movf	_M4^(0+256),w
  2946  0434  042B               	iorwf	(_M4+1)^(0+256),w
  2947  0435  1D03               	btfss	3,2
  2948  0436  2C51               	goto	l7069
  2949                           
  2950                           ;main.c: 681: {
  2951                           ;main.c: 682: if(man==1)
  2952  0437  0023               	movlb	3	; select bank3
  2953  0438  036D               	decf	main@man^(0+384),w
  2954  0439  046E               	iorwf	(main@man+1)^(0+384),w
  2955  043A  1D03               	btfss	3,2
  2956  043B  2C49               	goto	l7065
  2957                           
  2958                           ;main.c: 683: {
  2959                           ;main.c: 684: SwitchOnStatustToGatway(4);
  2960  043C  3004               	movlw	4
  2961  043D  0020               	movlb	0	; select bank0
  2962  043E  00A0               	movwf	SwitchOnStatustToGatway@SwitchOnNumber
  2963  043F  3000               	movlw	0
  2964  0440  00A1               	movwf	SwitchOnStatustToGatway@SwitchOnNumber+1
  2965  0441  318A  2234  3181   	fcall	_SwitchOnStatustToGatway
  2966                           
  2967                           ;main.c: 685: TransmissionIndicationLedBlinking();
  2968  0444  3197  274C  3181   	fcall	_TransmissionIndicationLedBlinking
  2969                           
  2970                           ;main.c: 686: PORTGbits.RG3=1;
  2971  0447  0025               	movlb	5	; select bank5
  2972  0448  158D               	bsf	13,3	;volatile
  2973  0449                     l7065:	
  2974                           
  2975                           ;main.c: 687: }
  2976                           ;main.c: 688: man=0;
  2977  0449  0023               	movlb	3	; select bank3
  2978  044A  01ED               	clrf	main@man^(0+384)
  2979  044B  01EE               	clrf	(main@man+1)^(0+384)
  2980                           
  2981                           ;main.c: 689: M4=1;
  2982  044C  3001               	movlw	1
  2983  044D  0022               	movlb	2	; select bank2
  2984  044E  00AA               	movwf	_M4^(0+256)
  2985  044F  3000               	movlw	0
  2986  0450  00AB               	movwf	(_M4^(0+256)+1)
  2987  0451                     l7069:	
  2988                           
  2989                           ;main.c: 691: }
  2990                           ;main.c: 693: if(copy_parentalLockBuffer[4] == '0' && PORTBbits.RB1 == 1 && M4 == 1)
  2991  0451  3030               	movlw	48
  2992  0452  0023               	movlb	3	; select bank3
  2993  0453  0624               	xorwf	(_copy_parentalLockBuffer^(0+384)+4),w
  2994  0454  1D03               	btfss	3,2
  2995  0455  2C76               	goto	l7085
  2996  0456  0020               	movlb	0	; select bank0
  2997  0457  1C8D               	btfss	13,1	;volatile
  2998  0458  2C76               	goto	l7085
  2999  0459  0022               	movlb	2	; select bank2
  3000  045A  032A               	decf	_M4^(0+256),w
  3001  045B  042B               	iorwf	(_M4+1)^(0+256),w
  3002  045C  1D03               	btfss	3,2
  3003  045D  2C76               	goto	l7085
  3004                           
  3005                           ;main.c: 694: {
  3006                           ;main.c: 695: if(man==1)
  3007  045E  0023               	movlb	3	; select bank3
  3008  045F  036D               	decf	main@man^(0+384),w
  3009  0460  046E               	iorwf	(main@man+1)^(0+384),w
  3010  0461  1D03               	btfss	3,2
  3011  0462  2C70               	goto	l7081
  3012                           
  3013                           ;main.c: 696: {
  3014                           ;main.c: 698: SwitchOffStatustToGatway(4);
  3015  0463  3004               	movlw	4
  3016  0464  0020               	movlb	0	; select bank0
  3017  0465  00A0               	movwf	SwitchOffStatustToGatway@SwitchOffNumber
  3018  0466  3000               	movlw	0
  3019  0467  00A1               	movwf	SwitchOffStatustToGatway@SwitchOffNumber+1
  3020  0468  318A  2201  3181   	fcall	_SwitchOffStatustToGatway
  3021                           
  3022                           ;main.c: 699: TransmissionIndicationLedBlinking();
  3023  046B  3197  274C  3181   	fcall	_TransmissionIndicationLedBlinking
  3024                           
  3025                           ;main.c: 700: PORTGbits.RG3=0;
  3026  046E  0025               	movlb	5	; select bank5
  3027  046F  118D               	bcf	13,3	;volatile
  3028  0470                     l7081:	
  3029                           
  3030                           ;main.c: 701: }
  3031                           ;main.c: 702: man=0;
  3032  0470  0023               	movlb	3	; select bank3
  3033  0471  01ED               	clrf	main@man^(0+384)
  3034  0472  01EE               	clrf	(main@man+1)^(0+384)
  3035                           
  3036                           ;main.c: 703: M4=0;
  3037  0473  0022               	movlb	2	; select bank2
  3038  0474  01AA               	clrf	_M4^(0+256)
  3039  0475  01AB               	clrf	(_M4+1)^(0+256)
  3040  0476                     l7085:	
  3041                           
  3042                           ;main.c: 705: }
  3043                           ;main.c: 707: if(copy_parentalLockBuffer[5] == '0' && PORTBbits.RB2 == 0 && M5 == 0)
  3044  0476  3030               	movlw	48
  3045  0477  0023               	movlb	3	; select bank3
  3046  0478  0625               	xorwf	(_copy_parentalLockBuffer^(0+384)+5),w
  3047  0479  1D03               	btfss	3,2
  3048  047A  2C9D               	goto	l7101
  3049  047B  0020               	movlb	0	; select bank0
  3050  047C  190D               	btfsc	13,2	;volatile
  3051  047D  2C9D               	goto	l7101
  3052  047E  0022               	movlb	2	; select bank2
  3053  047F  0828               	movf	_M5^(0+256),w
  3054  0480  0429               	iorwf	(_M5+1)^(0+256),w
  3055  0481  1D03               	btfss	3,2
  3056  0482  2C9D               	goto	l7101
  3057                           
  3058                           ;main.c: 708: {
  3059                           ;main.c: 709: if(man==1)
  3060  0483  0023               	movlb	3	; select bank3
  3061  0484  036D               	decf	main@man^(0+384),w
  3062  0485  046E               	iorwf	(main@man+1)^(0+384),w
  3063  0486  1D03               	btfss	3,2
  3064  0487  2C95               	goto	l7097
  3065                           
  3066                           ;main.c: 710: {
  3067                           ;main.c: 711: SwitchOnStatustToGatway(5);
  3068  0488  3005               	movlw	5
  3069  0489  0020               	movlb	0	; select bank0
  3070  048A  00A0               	movwf	SwitchOnStatustToGatway@SwitchOnNumber
  3071  048B  3000               	movlw	0
  3072  048C  00A1               	movwf	SwitchOnStatustToGatway@SwitchOnNumber+1
  3073  048D  318A  2234  3181   	fcall	_SwitchOnStatustToGatway
  3074                           
  3075                           ;main.c: 712: TransmissionIndicationLedBlinking();
  3076  0490  3197  274C  3181   	fcall	_TransmissionIndicationLedBlinking
  3077                           
  3078                           ;main.c: 713: PORTGbits.RG4=1;
  3079  0493  0025               	movlb	5	; select bank5
  3080  0494  160D               	bsf	13,4	;volatile
  3081  0495                     l7097:	
  3082                           
  3083                           ;main.c: 714: }
  3084                           ;main.c: 715: man=0;
  3085  0495  0023               	movlb	3	; select bank3
  3086  0496  01ED               	clrf	main@man^(0+384)
  3087  0497  01EE               	clrf	(main@man+1)^(0+384)
  3088                           
  3089                           ;main.c: 716: M5=1;
  3090  0498  3001               	movlw	1
  3091  0499  0022               	movlb	2	; select bank2
  3092  049A  00A8               	movwf	_M5^(0+256)
  3093  049B  3000               	movlw	0
  3094  049C  00A9               	movwf	(_M5^(0+256)+1)
  3095  049D                     l7101:	
  3096                           
  3097                           ;main.c: 718: }
  3098                           ;main.c: 720: if(copy_parentalLockBuffer[5] == '0' && PORTBbits.RB2 == 1 && M5 == 1)
  3099  049D  3030               	movlw	48
  3100  049E  0023               	movlb	3	; select bank3
  3101  049F  0625               	xorwf	(_copy_parentalLockBuffer^(0+384)+5),w
  3102  04A0  1D03               	btfss	3,2
  3103  04A1  2CC2               	goto	l7117
  3104  04A2  0020               	movlb	0	; select bank0
  3105  04A3  1D0D               	btfss	13,2	;volatile
  3106  04A4  2CC2               	goto	l7117
  3107  04A5  0022               	movlb	2	; select bank2
  3108  04A6  0328               	decf	_M5^(0+256),w
  3109  04A7  0429               	iorwf	(_M5+1)^(0+256),w
  3110  04A8  1D03               	btfss	3,2
  3111  04A9  2CC2               	goto	l7117
  3112                           
  3113                           ;main.c: 721: {
  3114                           ;main.c: 722: if(man==1)
  3115  04AA  0023               	movlb	3	; select bank3
  3116  04AB  036D               	decf	main@man^(0+384),w
  3117  04AC  046E               	iorwf	(main@man+1)^(0+384),w
  3118  04AD  1D03               	btfss	3,2
  3119  04AE  2CBC               	goto	l7113
  3120                           
  3121                           ;main.c: 723: {
  3122                           ;main.c: 725: SwitchOffStatustToGatway(5);
  3123  04AF  3005               	movlw	5
  3124  04B0  0020               	movlb	0	; select bank0
  3125  04B1  00A0               	movwf	SwitchOffStatustToGatway@SwitchOffNumber
  3126  04B2  3000               	movlw	0
  3127  04B3  00A1               	movwf	SwitchOffStatustToGatway@SwitchOffNumber+1
  3128  04B4  318A  2201  3181   	fcall	_SwitchOffStatustToGatway
  3129                           
  3130                           ;main.c: 726: TransmissionIndicationLedBlinking();
  3131  04B7  3197  274C  3181   	fcall	_TransmissionIndicationLedBlinking
  3132                           
  3133                           ;main.c: 727: PORTGbits.RG4=0;
  3134  04BA  0025               	movlb	5	; select bank5
  3135  04BB  120D               	bcf	13,4	;volatile
  3136  04BC                     l7113:	
  3137                           
  3138                           ;main.c: 728: }
  3139                           ;main.c: 729: man=0;
  3140  04BC  0023               	movlb	3	; select bank3
  3141  04BD  01ED               	clrf	main@man^(0+384)
  3142  04BE  01EE               	clrf	(main@man+1)^(0+384)
  3143                           
  3144                           ;main.c: 730: M5=0;
  3145  04BF  0022               	movlb	2	; select bank2
  3146  04C0  01A8               	clrf	_M5^(0+256)
  3147  04C1  01A9               	clrf	(_M5+1)^(0+256)
  3148  04C2                     l7117:	
  3149                           
  3150                           ;main.c: 732: }
  3151                           ;main.c: 735: if(copy_parentalLockBuffer[6] == '0' && PORTBbits.RB3 == 0 && M6 == 0)
  3152  04C2  3030               	movlw	48
  3153  04C3  0023               	movlb	3	; select bank3
  3154  04C4  0626               	xorwf	(_copy_parentalLockBuffer^(0+384)+6),w
  3155  04C5  1D03               	btfss	3,2
  3156  04C6  2CE9               	goto	l7133
  3157  04C7  0020               	movlb	0	; select bank0
  3158  04C8  198D               	btfsc	13,3	;volatile
  3159  04C9  2CE9               	goto	l7133
  3160  04CA  0022               	movlb	2	; select bank2
  3161  04CB  0826               	movf	_M6^(0+256),w
  3162  04CC  0427               	iorwf	(_M6+1)^(0+256),w
  3163  04CD  1D03               	btfss	3,2
  3164  04CE  2CE9               	goto	l7133
  3165                           
  3166                           ;main.c: 736: {
  3167                           ;main.c: 737: if(man==1)
  3168  04CF  0023               	movlb	3	; select bank3
  3169  04D0  036D               	decf	main@man^(0+384),w
  3170  04D1  046E               	iorwf	(main@man+1)^(0+384),w
  3171  04D2  1D03               	btfss	3,2
  3172  04D3  2CE1               	goto	l7129
  3173                           
  3174                           ;main.c: 738: {
  3175                           ;main.c: 739: SwitchOnStatustToGatway(6);
  3176  04D4  3006               	movlw	6
  3177  04D5  0020               	movlb	0	; select bank0
  3178  04D6  00A0               	movwf	SwitchOnStatustToGatway@SwitchOnNumber
  3179  04D7  3000               	movlw	0
  3180  04D8  00A1               	movwf	SwitchOnStatustToGatway@SwitchOnNumber+1
  3181  04D9  318A  2234  3181   	fcall	_SwitchOnStatustToGatway
  3182                           
  3183                           ;main.c: 740: TransmissionIndicationLedBlinking();
  3184  04DC  3197  274C  3181   	fcall	_TransmissionIndicationLedBlinking
  3185                           
  3186                           ;main.c: 741: PORTFbits.RF6=1;
  3187  04DF  0025               	movlb	5	; select bank5
  3188  04E0  170C               	bsf	12,6	;volatile
  3189  04E1                     l7129:	
  3190                           
  3191                           ;main.c: 742: }
  3192                           ;main.c: 743: man=0;
  3193  04E1  0023               	movlb	3	; select bank3
  3194  04E2  01ED               	clrf	main@man^(0+384)
  3195  04E3  01EE               	clrf	(main@man+1)^(0+384)
  3196                           
  3197                           ;main.c: 744: M6=1;
  3198  04E4  3001               	movlw	1
  3199  04E5  0022               	movlb	2	; select bank2
  3200  04E6  00A6               	movwf	_M6^(0+256)
  3201  04E7  3000               	movlw	0
  3202  04E8  00A7               	movwf	(_M6^(0+256)+1)
  3203  04E9                     l7133:	
  3204                           
  3205                           ;main.c: 746: }
  3206                           ;main.c: 748: if(copy_parentalLockBuffer[6] == '0' && PORTBbits.RB3 == 1 && M6 == 1)
  3207  04E9  3030               	movlw	48
  3208  04EA  0023               	movlb	3	; select bank3
  3209  04EB  0626               	xorwf	(_copy_parentalLockBuffer^(0+384)+6),w
  3210  04EC  1D03               	btfss	3,2
  3211  04ED  2D0E               	goto	l7149
  3212  04EE  0020               	movlb	0	; select bank0
  3213  04EF  1D8D               	btfss	13,3	;volatile
  3214  04F0  2D0E               	goto	l7149
  3215  04F1  0022               	movlb	2	; select bank2
  3216  04F2  0326               	decf	_M6^(0+256),w
  3217  04F3  0427               	iorwf	(_M6+1)^(0+256),w
  3218  04F4  1D03               	btfss	3,2
  3219  04F5  2D0E               	goto	l7149
  3220                           
  3221                           ;main.c: 749: {
  3222                           ;main.c: 750: if(man==1)
  3223  04F6  0023               	movlb	3	; select bank3
  3224  04F7  036D               	decf	main@man^(0+384),w
  3225  04F8  046E               	iorwf	(main@man+1)^(0+384),w
  3226  04F9  1D03               	btfss	3,2
  3227  04FA  2D08               	goto	l7145
  3228                           
  3229                           ;main.c: 751: {
  3230                           ;main.c: 753: SwitchOffStatustToGatway(6);
  3231  04FB  3006               	movlw	6
  3232  04FC  0020               	movlb	0	; select bank0
  3233  04FD  00A0               	movwf	SwitchOffStatustToGatway@SwitchOffNumber
  3234  04FE  3000               	movlw	0
  3235  04FF  00A1               	movwf	SwitchOffStatustToGatway@SwitchOffNumber+1
  3236  0500  318A  2201  3181   	fcall	_SwitchOffStatustToGatway
  3237                           
  3238                           ;main.c: 754: TransmissionIndicationLedBlinking();
  3239  0503  3197  274C  3181   	fcall	_TransmissionIndicationLedBlinking
  3240                           
  3241                           ;main.c: 755: PORTFbits.RF6=0;
  3242  0506  0025               	movlb	5	; select bank5
  3243  0507  130C               	bcf	12,6	;volatile
  3244  0508                     l7145:	
  3245                           
  3246                           ;main.c: 756: }
  3247                           ;main.c: 757: man=0;
  3248  0508  0023               	movlb	3	; select bank3
  3249  0509  01ED               	clrf	main@man^(0+384)
  3250  050A  01EE               	clrf	(main@man+1)^(0+384)
  3251                           
  3252                           ;main.c: 758: M6=0;
  3253  050B  0022               	movlb	2	; select bank2
  3254  050C  01A6               	clrf	_M6^(0+256)
  3255  050D  01A7               	clrf	(_M6+1)^(0+256)
  3256  050E                     l7149:	
  3257                           
  3258                           ;main.c: 760: }
  3259                           ;main.c: 764: if(copy_parentalLockBuffer[7] == '0' && PORTBbits.RB4 == 0 && M7 == 0)
  3260  050E  3030               	movlw	48
  3261  050F  0023               	movlb	3	; select bank3
  3262  0510  0627               	xorwf	(_copy_parentalLockBuffer^(0+384)+7),w
  3263  0511  1D03               	btfss	3,2
  3264  0512  2D35               	goto	l7165
  3265  0513  0020               	movlb	0	; select bank0
  3266  0514  1A0D               	btfsc	13,4	;volatile
  3267  0515  2D35               	goto	l7165
  3268  0516  0022               	movlb	2	; select bank2
  3269  0517  0824               	movf	_M7^(0+256),w
  3270  0518  0425               	iorwf	(_M7+1)^(0+256),w
  3271  0519  1D03               	btfss	3,2
  3272  051A  2D35               	goto	l7165
  3273                           
  3274                           ;main.c: 765: {
  3275                           ;main.c: 766: if(man==1)
  3276  051B  0023               	movlb	3	; select bank3
  3277  051C  036D               	decf	main@man^(0+384),w
  3278  051D  046E               	iorwf	(main@man+1)^(0+384),w
  3279  051E  1D03               	btfss	3,2
  3280  051F  2D2D               	goto	l7161
  3281                           
  3282                           ;main.c: 767: {
  3283                           ;main.c: 768: SwitchOnStatustToGatway(7);
  3284  0520  3007               	movlw	7
  3285  0521  0020               	movlb	0	; select bank0
  3286  0522  00A0               	movwf	SwitchOnStatustToGatway@SwitchOnNumber
  3287  0523  3000               	movlw	0
  3288  0524  00A1               	movwf	SwitchOnStatustToGatway@SwitchOnNumber+1
  3289  0525  318A  2234  3181   	fcall	_SwitchOnStatustToGatway
  3290                           
  3291                           ;main.c: 769: TransmissionIndicationLedBlinking();
  3292  0528  3197  274C  3181   	fcall	_TransmissionIndicationLedBlinking
  3293                           
  3294                           ;main.c: 770: PORTFbits.RF5=1;
  3295  052B  0025               	movlb	5	; select bank5
  3296  052C  168C               	bsf	12,5	;volatile
  3297  052D                     l7161:	
  3298                           
  3299                           ;main.c: 771: }
  3300                           ;main.c: 772: man=0;
  3301  052D  0023               	movlb	3	; select bank3
  3302  052E  01ED               	clrf	main@man^(0+384)
  3303  052F  01EE               	clrf	(main@man+1)^(0+384)
  3304                           
  3305                           ;main.c: 773: M7=1;
  3306  0530  3001               	movlw	1
  3307  0531  0022               	movlb	2	; select bank2
  3308  0532  00A4               	movwf	_M7^(0+256)
  3309  0533  3000               	movlw	0
  3310  0534  00A5               	movwf	(_M7^(0+256)+1)
  3311  0535                     l7165:	
  3312                           
  3313                           ;main.c: 775: }
  3314                           ;main.c: 777: if(copy_parentalLockBuffer[7] == '0' && PORTBbits.RB4 == 1 && M7 == 1)
  3315  0535  3030               	movlw	48
  3316  0536  0023               	movlb	3	; select bank3
  3317  0537  0627               	xorwf	(_copy_parentalLockBuffer^(0+384)+7),w
  3318  0538  1D03               	btfss	3,2
  3319  0539  2D5A               	goto	l7181
  3320  053A  0020               	movlb	0	; select bank0
  3321  053B  1E0D               	btfss	13,4	;volatile
  3322  053C  2D5A               	goto	l7181
  3323  053D  0022               	movlb	2	; select bank2
  3324  053E  0324               	decf	_M7^(0+256),w
  3325  053F  0425               	iorwf	(_M7+1)^(0+256),w
  3326  0540  1D03               	btfss	3,2
  3327  0541  2D5A               	goto	l7181
  3328                           
  3329                           ;main.c: 778: {
  3330                           ;main.c: 779: if(man==1)
  3331  0542  0023               	movlb	3	; select bank3
  3332  0543  036D               	decf	main@man^(0+384),w
  3333  0544  046E               	iorwf	(main@man+1)^(0+384),w
  3334  0545  1D03               	btfss	3,2
  3335  0546  2D54               	goto	l7177
  3336                           
  3337                           ;main.c: 780: {
  3338                           ;main.c: 782: SwitchOffStatustToGatway(7);
  3339  0547  3007               	movlw	7
  3340  0548  0020               	movlb	0	; select bank0
  3341  0549  00A0               	movwf	SwitchOffStatustToGatway@SwitchOffNumber
  3342  054A  3000               	movlw	0
  3343  054B  00A1               	movwf	SwitchOffStatustToGatway@SwitchOffNumber+1
  3344  054C  318A  2201  3181   	fcall	_SwitchOffStatustToGatway
  3345                           
  3346                           ;main.c: 783: TransmissionIndicationLedBlinking();
  3347  054F  3197  274C  3181   	fcall	_TransmissionIndicationLedBlinking
  3348                           
  3349                           ;main.c: 784: PORTFbits.RF5=0;
  3350  0552  0025               	movlb	5	; select bank5
  3351  0553  128C               	bcf	12,5	;volatile
  3352  0554                     l7177:	
  3353                           
  3354                           ;main.c: 785: }
  3355                           ;main.c: 786: man=0;
  3356  0554  0023               	movlb	3	; select bank3
  3357  0555  01ED               	clrf	main@man^(0+384)
  3358  0556  01EE               	clrf	(main@man+1)^(0+384)
  3359                           
  3360                           ;main.c: 787: M7=0;
  3361  0557  0022               	movlb	2	; select bank2
  3362  0558  01A4               	clrf	_M7^(0+256)
  3363  0559  01A5               	clrf	(_M7+1)^(0+256)
  3364  055A                     l7181:	
  3365                           
  3366                           ;main.c: 789: }
  3367                           ;main.c: 794: if(copy_parentalLockBuffer[8] == '0' && PORTBbits.RB5 == 0 && M8 == 0)
  3368  055A  3030               	movlw	48
  3369  055B  0023               	movlb	3	; select bank3
  3370  055C  0628               	xorwf	(_copy_parentalLockBuffer^(0+384)+8),w
  3371  055D  1D03               	btfss	3,2
  3372  055E  2D81               	goto	l7197
  3373  055F  0020               	movlb	0	; select bank0
  3374  0560  1A8D               	btfsc	13,5	;volatile
  3375  0561  2D81               	goto	l7197
  3376  0562  0022               	movlb	2	; select bank2
  3377  0563  0822               	movf	_M8^(0+256),w
  3378  0564  0423               	iorwf	(_M8+1)^(0+256),w
  3379  0565  1D03               	btfss	3,2
  3380  0566  2D81               	goto	l7197
  3381                           
  3382                           ;main.c: 795: {
  3383                           ;main.c: 796: if(man==1)
  3384  0567  0023               	movlb	3	; select bank3
  3385  0568  036D               	decf	main@man^(0+384),w
  3386  0569  046E               	iorwf	(main@man+1)^(0+384),w
  3387  056A  1D03               	btfss	3,2
  3388  056B  2D79               	goto	l7193
  3389                           
  3390                           ;main.c: 797: {
  3391                           ;main.c: 798: SwitchOnStatustToGatway(8);
  3392  056C  3008               	movlw	8
  3393  056D  0020               	movlb	0	; select bank0
  3394  056E  00A0               	movwf	SwitchOnStatustToGatway@SwitchOnNumber
  3395  056F  3000               	movlw	0
  3396  0570  00A1               	movwf	SwitchOnStatustToGatway@SwitchOnNumber+1
  3397  0571  318A  2234  3181   	fcall	_SwitchOnStatustToGatway
  3398                           
  3399                           ;main.c: 799: TransmissionIndicationLedBlinking();
  3400  0574  3197  274C  3181   	fcall	_TransmissionIndicationLedBlinking
  3401                           
  3402                           ;main.c: 800: PORTFbits.RF4=1;
  3403  0577  0025               	movlb	5	; select bank5
  3404  0578  160C               	bsf	12,4	;volatile
  3405  0579                     l7193:	
  3406                           
  3407                           ;main.c: 801: }
  3408                           ;main.c: 802: man=0;
  3409  0579  0023               	movlb	3	; select bank3
  3410  057A  01ED               	clrf	main@man^(0+384)
  3411  057B  01EE               	clrf	(main@man+1)^(0+384)
  3412                           
  3413                           ;main.c: 803: M8=1;
  3414  057C  3001               	movlw	1
  3415  057D  0022               	movlb	2	; select bank2
  3416  057E  00A2               	movwf	_M8^(0+256)
  3417  057F  3000               	movlw	0
  3418  0580  00A3               	movwf	(_M8^(0+256)+1)
  3419  0581                     l7197:	
  3420                           
  3421                           ;main.c: 805: }
  3422                           ;main.c: 807: if(copy_parentalLockBuffer[8] == '0' && PORTBbits.RB5 == 1 && M8 == 1)
  3423  0581  3030               	movlw	48
  3424  0582  0023               	movlb	3	; select bank3
  3425  0583  0628               	xorwf	(_copy_parentalLockBuffer^(0+384)+8),w
  3426  0584  1D03               	btfss	3,2
  3427  0585  2DA6               	goto	l7213
  3428  0586  0020               	movlb	0	; select bank0
  3429  0587  1E8D               	btfss	13,5	;volatile
  3430  0588  2DA6               	goto	l7213
  3431  0589  0022               	movlb	2	; select bank2
  3432  058A  0322               	decf	_M8^(0+256),w
  3433  058B  0423               	iorwf	(_M8+1)^(0+256),w
  3434  058C  1D03               	btfss	3,2
  3435  058D  2DA6               	goto	l7213
  3436                           
  3437                           ;main.c: 808: {
  3438                           ;main.c: 809: if(man==1)
  3439  058E  0023               	movlb	3	; select bank3
  3440  058F  036D               	decf	main@man^(0+384),w
  3441  0590  046E               	iorwf	(main@man+1)^(0+384),w
  3442  0591  1D03               	btfss	3,2
  3443  0592  2DA0               	goto	l7209
  3444                           
  3445                           ;main.c: 810: {
  3446                           ;main.c: 812: SwitchOffStatustToGatway(8);
  3447  0593  3008               	movlw	8
  3448  0594  0020               	movlb	0	; select bank0
  3449  0595  00A0               	movwf	SwitchOffStatustToGatway@SwitchOffNumber
  3450  0596  3000               	movlw	0
  3451  0597  00A1               	movwf	SwitchOffStatustToGatway@SwitchOffNumber+1
  3452  0598  318A  2201  3181   	fcall	_SwitchOffStatustToGatway
  3453                           
  3454                           ;main.c: 813: TransmissionIndicationLedBlinking();
  3455  059B  3197  274C  3181   	fcall	_TransmissionIndicationLedBlinking
  3456                           
  3457                           ;main.c: 814: PORTFbits.RF4=0;
  3458  059E  0025               	movlb	5	; select bank5
  3459  059F  120C               	bcf	12,4	;volatile
  3460  05A0                     l7209:	
  3461                           
  3462                           ;main.c: 815: }
  3463                           ;main.c: 816: man=0;
  3464  05A0  0023               	movlb	3	; select bank3
  3465  05A1  01ED               	clrf	main@man^(0+384)
  3466  05A2  01EE               	clrf	(main@man+1)^(0+384)
  3467                           
  3468                           ;main.c: 817: M8=0;
  3469  05A3  0022               	movlb	2	; select bank2
  3470  05A4  01A2               	clrf	_M8^(0+256)
  3471  05A5  01A3               	clrf	(_M8+1)^(0+256)
  3472  05A6                     l7213:	
  3473                           
  3474                           ;main.c: 819: }
  3475                           ;main.c: 821: if(copy_parentalLockBuffer[9] == '0' && PORTDbits.RD5 == 0 && M9 == 0)
  3476  05A6  3030               	movlw	48
  3477  05A7  0023               	movlb	3	; select bank3
  3478  05A8  0629               	xorwf	(_copy_parentalLockBuffer^(0+384)+9),w
  3479  05A9  1D03               	btfss	3,2
  3480  05AA  2DD0               	goto	l7231
  3481  05AB  0020               	movlb	0	; select bank0
  3482  05AC  1A8F               	btfsc	15,5	;volatile
  3483  05AD  2DD0               	goto	l7231
  3484  05AE  0022               	movlb	2	; select bank2
  3485  05AF  0820               	movf	_M9^(0+256),w
  3486  05B0  0421               	iorwf	(_M9+1)^(0+256),w
  3487  05B1  1D03               	btfss	3,2
  3488  05B2  2DD0               	goto	l7231
  3489                           
  3490                           ;main.c: 822: {
  3491                           ;main.c: 823: if(man==1)
  3492  05B3  0023               	movlb	3	; select bank3
  3493  05B4  036D               	decf	main@man^(0+384),w
  3494  05B5  046E               	iorwf	(main@man+1)^(0+384),w
  3495  05B6  1D03               	btfss	3,2
  3496  05B7  2DC8               	goto	l576
  3497                           
  3498                           ;main.c: 824: {
  3499                           ;main.c: 826: start_PWM_Generation_For_DIMMER = 0;
  3500  05B8  0022               	movlb	2	; select bank2
  3501  05B9  01D4               	clrf	_start_PWM_Generation_For_DIMMER^(0+256)
  3502  05BA  01D5               	clrf	(_start_PWM_Generation_For_DIMMER+1)^(0+256)
  3503                           
  3504                           ;main.c: 827: SwitchOnStatustToGatway(10);
  3505  05BB  300A               	movlw	10
  3506  05BC  0020               	movlb	0	; select bank0
  3507  05BD  00A0               	movwf	SwitchOnStatustToGatway@SwitchOnNumber
  3508  05BE  3000               	movlw	0
  3509  05BF  00A1               	movwf	SwitchOnStatustToGatway@SwitchOnNumber+1
  3510  05C0  318A  2234  3181   	fcall	_SwitchOnStatustToGatway
  3511                           
  3512                           ;main.c: 828: TransmissionIndicationLedBlinking();
  3513  05C3  3197  274C  3181   	fcall	_TransmissionIndicationLedBlinking
  3514                           
  3515                           ;main.c: 829: PORTFbits.RF3=0;
  3516  05C6  0025               	movlb	5	; select bank5
  3517  05C7  118C               	bcf	12,3	;volatile
  3518  05C8                     l576:	
  3519                           
  3520                           ;main.c: 830: }
  3521                           ;main.c: 831: man=0;
  3522  05C8  0023               	movlb	3	; select bank3
  3523  05C9  01ED               	clrf	main@man^(0+384)
  3524  05CA  01EE               	clrf	(main@man+1)^(0+384)
  3525                           
  3526                           ;main.c: 832: M9=1;
  3527  05CB  3001               	movlw	1
  3528  05CC  0022               	movlb	2	; select bank2
  3529  05CD  00A0               	movwf	_M9^(0+256)
  3530  05CE  3000               	movlw	0
  3531  05CF  00A1               	movwf	(_M9^(0+256)+1)
  3532  05D0                     l7231:	
  3533                           
  3534                           ;main.c: 834: }
  3535                           ;main.c: 836: if(copy_parentalLockBuffer[9] == '0' && PORTDbits.RD5 == 1 && M9 == 1)
  3536  05D0  3030               	movlw	48
  3537  05D1  0023               	movlb	3	; select bank3
  3538  05D2  0629               	xorwf	(_copy_parentalLockBuffer^(0+384)+9),w
  3539  05D3  1D03               	btfss	3,2
  3540  05D4  2940               	goto	l6825
  3541  05D5  0020               	movlb	0	; select bank0
  3542  05D6  1E8F               	btfss	15,5	;volatile
  3543  05D7  2940               	goto	l6825
  3544  05D8  0022               	movlb	2	; select bank2
  3545  05D9  0320               	decf	_M9^(0+256),w
  3546  05DA  0421               	iorwf	(_M9+1)^(0+256),w
  3547  05DB  1D03               	btfss	3,2
  3548  05DC  2940               	goto	l6825
  3549                           
  3550                           ;main.c: 837: {
  3551                           ;main.c: 838: if(man==1)
  3552  05DD  0023               	movlb	3	; select bank3
  3553  05DE  036D               	decf	main@man^(0+384),w
  3554  05DF  046E               	iorwf	(main@man+1)^(0+384),w
  3555  05E0  1D03               	btfss	3,2
  3556  05E1  2DF2               	goto	l578
  3557                           
  3558                           ;main.c: 839: {
  3559                           ;main.c: 840: start_PWM_Generation_For_DIMMER = 0;
  3560  05E2  0022               	movlb	2	; select bank2
  3561  05E3  01D4               	clrf	_start_PWM_Generation_For_DIMMER^(0+256)
  3562  05E4  01D5               	clrf	(_start_PWM_Generation_For_DIMMER+1)^(0+256)
  3563                           
  3564                           ;main.c: 841: SwitchOffStatustToGatway(10);
  3565  05E5  300A               	movlw	10
  3566  05E6  0020               	movlb	0	; select bank0
  3567  05E7  00A0               	movwf	SwitchOffStatustToGatway@SwitchOffNumber
  3568  05E8  3000               	movlw	0
  3569  05E9  00A1               	movwf	SwitchOffStatustToGatway@SwitchOffNumber+1
  3570  05EA  318A  2201  3181   	fcall	_SwitchOffStatustToGatway
  3571                           
  3572                           ;main.c: 842: TransmissionIndicationLedBlinking();
  3573  05ED  3197  274C  3181   	fcall	_TransmissionIndicationLedBlinking
  3574                           
  3575                           ;main.c: 843: PORTFbits.RF3=1;
  3576  05F0  0025               	movlb	5	; select bank5
  3577  05F1  158C               	bsf	12,3	;volatile
  3578  05F2                     l578:	
  3579                           
  3580                           ;main.c: 844: }
  3581                           ;main.c: 845: man=0;
  3582  05F2  0023               	movlb	3	; select bank3
  3583  05F3  01ED               	clrf	main@man^(0+384)
  3584  05F4  01EE               	clrf	(main@man+1)^(0+384)
  3585                           
  3586                           ;main.c: 846: M9=0;
  3587  05F5  0022               	movlb	2	; select bank2
  3588  05F6  01A0               	clrf	_M9^(0+256)
  3589  05F7  01A1               	clrf	(_M9+1)^(0+256)
  3590  05F8  2940               	goto	l6825
  3591  05F9                     __end_of_main:	
  3592                           
  3593                           	psect	swtext1
  3594  1012                     __pswtext1:	
  3595  1012                     S7357:	
  3596  1012  3181  29CE         	ljmp	l6865
  3597  1014  3182  2A0D         	ljmp	l6881
  3598  1016  3182  2A14         	ljmp	l6883
  3599  1018  3182  2A53         	ljmp	l6899
  3600  101A  3182  2A6A         	ljmp	l6903
  3601  101C  3182  2A81         	ljmp	l6907
  3602  101E  3182  2A98         	ljmp	l6911
  3603  1020  3182  2AD8         	ljmp	l6927
  3604                           
  3605                           	psect	text1
  3606  0AD6                     __ptext1:	
  3607 ;; *************** function _strtok *****************
  3608 ;; Defined at:
  3609 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strtok.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;  s1              1    wreg     PTR unsigned char 
  3612 ;;		 -> mainReceivedDataBuffer(18), NULL(0), 
  3613 ;;  s2              2   14[BANK0 ] PTR const unsigned char 
  3614 ;;		 -> STR_16(2), STR_14(2), 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;  s1              1   19[BANK0 ] PTR unsigned char 
  3617 ;;		 -> mainReceivedDataBuffer(18), NULL(0), 
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      PTR unsigned char 
  3620 ;; Registers used:
  3621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3627 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  3628 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0
  3629 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0
  3630 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0
  3631 ;;Total ram usage:        6 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; Hardware stack levels required when called:    4
  3634 ;; This function calls:
  3635 ;;		_strcspn
  3636 ;;		_strspn
  3637 ;; This function is called by:
  3638 ;;		_main
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           
  3643                           ;psect for function _strtok
  3644  0AD6                     _strtok:	
  3645                           
  3646                           ;incstack = 0
  3647                           ; Regs used in _strtok: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3648                           ;strtok@s1 stored from wreg
  3649  0AD6  0020               	movlb	0	; select bank0
  3650  0AD7  00B3               	movwf	strtok@s1
  3651  0AD8  0833               	movf	strtok@s1,w
  3652  0AD9  1D03               	btfss	3,2
  3653  0ADA  2ADF               	goto	l5651
  3654  0ADB  0862               	movf	strtok@sp,w
  3655  0ADC  00B0               	movwf	??_strtok
  3656  0ADD  0830               	movf	??_strtok,w
  3657  0ADE  00B3               	movwf	strtok@s1
  3658  0ADF                     l5651:	
  3659  0ADF  0833               	movf	strtok@s1,w
  3660  0AE0  1D03               	btfss	3,2
  3661  0AE1  2AE4               	goto	l5657
  3662  0AE2  3000               	movlw	0
  3663  0AE3  0008               	return
  3664  0AE4                     l5657:	
  3665  0AE4  082F               	movf	strtok@s2+1,w
  3666  0AE5  00A8               	movwf	strspn@s2+1
  3667  0AE6  082E               	movf	strtok@s2,w
  3668  0AE7  00A7               	movwf	strspn@s2
  3669  0AE8  0833               	movf	strtok@s1,w
  3670  0AE9  3189  219F  318A   	fcall	_strspn
  3671  0AEC  0020               	movlb	0	; select bank0
  3672  0AED  0827               	movf	?_strspn,w
  3673  0AEE  00B0               	movwf	??_strtok
  3674  0AEF  0830               	movf	??_strtok,w
  3675  0AF0  07B3               	addwf	strtok@s1,f
  3676  0AF1  0833               	movf	strtok@s1,w
  3677  0AF2  0086               	movwf	6
  3678  0AF3  3001               	movlw	1	; select bank2/3
  3679  0AF4  0087               	movwf	7
  3680  0AF5  0801               	movf	1,w
  3681  0AF6  1D03               	btfss	3,2
  3682  0AF7  2AFB               	goto	l5665
  3683  0AF8  01E2               	clrf	strtok@sp
  3684  0AF9  3000               	movlw	0
  3685  0AFA  0008               	return
  3686  0AFB                     l5665:	
  3687  0AFB  082F               	movf	strtok@s2+1,w
  3688  0AFC  00A8               	movwf	strcspn@s2+1
  3689  0AFD  082E               	movf	strtok@s2,w
  3690  0AFE  00A7               	movwf	strcspn@s2
  3691  0AFF  0833               	movf	strtok@s1,w
  3692  0B00  3189  216F  318A   	fcall	_strcspn
  3693  0B03  0020               	movlb	0	; select bank0
  3694  0B04  0827               	movf	?_strcspn,w
  3695  0B05  00B0               	movwf	??_strtok
  3696  0B06  0828               	movf	?_strcspn+1,w
  3697  0B07  00B1               	movwf	??_strtok+1
  3698  0B08  0833               	movf	strtok@s1,w
  3699  0B09  0730               	addwf	??_strtok,w
  3700  0B0A  00B2               	movwf	??_strtok+2
  3701  0B0B  0832               	movf	??_strtok+2,w
  3702  0B0C  00E2               	movwf	strtok@sp
  3703  0B0D  0862               	movf	strtok@sp,w
  3704  0B0E  0086               	movwf	6
  3705  0B0F  3001               	movlw	1	; select bank2/3
  3706  0B10  0087               	movwf	7
  3707  0B11  0801               	movf	1,w
  3708  0B12  1903               	btfsc	3,2
  3709  0B13  2B1E               	goto	l5673
  3710  0B14  0862               	movf	strtok@sp,w
  3711  0B15  0086               	movwf	6
  3712  0B16  3001               	movlw	1	; select bank2/3
  3713  0B17  0087               	movwf	7
  3714  0B18  0181               	clrf	1
  3715  0B19  3001               	movlw	1
  3716  0B1A  00B0               	movwf	??_strtok
  3717  0B1B  0830               	movf	??_strtok,w
  3718  0B1C  07E2               	addwf	strtok@sp,f
  3719  0B1D  2B1F               	goto	l5675
  3720  0B1E                     l5673:	
  3721  0B1E  01E2               	clrf	strtok@sp
  3722  0B1F                     l5675:	
  3723  0B1F  0833               	movf	strtok@s1,w
  3724  0B20  0008               	return
  3725  0B21                     __end_of_strtok:	
  3726                           
  3727                           	psect	text2
  3728  099F                     __ptext2:	
  3729 ;; *************** function _strspn *****************
  3730 ;; Defined at:
  3731 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strspn.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  s1              1    wreg     PTR const unsigned char 
  3734 ;;		 -> mainReceivedDataBuffer(18), NULL(0), 
  3735 ;;  s2              2    7[BANK0 ] PTR const unsigned char 
  3736 ;;		 -> STR_16(2), STR_14(2), 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;  s1              1   13[BANK0 ] PTR const unsigned char 
  3739 ;;		 -> mainReceivedDataBuffer(18), NULL(0), 
  3740 ;;  i               2   11[BANK0 ] unsigned int 
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  2    7[BANK0 ] unsigned int 
  3743 ;; Registers used:
  3744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3750 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  3751 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0
  3752 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  3753 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0
  3754 ;;Total ram usage:        7 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; Hardware stack levels required when called:    3
  3757 ;; This function calls:
  3758 ;;		_strchr
  3759 ;; This function is called by:
  3760 ;;		_strtok
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           
  3765                           ;psect for function _strspn
  3766  099F                     _strspn:	
  3767                           
  3768                           ;incstack = 0
  3769                           ; Regs used in _strspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3770                           ;strspn@s1 stored from wreg
  3771  099F  0020               	movlb	0	; select bank0
  3772  09A0  00AD               	movwf	strspn@s1
  3773  09A1  01AB               	clrf	strspn@i
  3774  09A2  01AC               	clrf	strspn@i+1
  3775  09A3  29AC               	goto	l5411
  3776  09A4                     l5409:	
  3777  09A4  3001               	movlw	1
  3778  09A5  00A9               	movwf	??_strspn
  3779  09A6  0829               	movf	??_strspn,w
  3780  09A7  07AD               	addwf	strspn@s1,f
  3781  09A8  3001               	movlw	1
  3782  09A9  07AB               	addwf	strspn@i,f
  3783  09AA  3000               	movlw	0
  3784  09AB  3DAC               	addwfc	strspn@i+1,f
  3785  09AC                     l5411:	
  3786  09AC  082D               	movf	strspn@s1,w
  3787  09AD  0086               	movwf	6
  3788  09AE  3001               	movlw	1	; select bank2/3
  3789  09AF  0087               	movwf	7
  3790  09B0  0801               	movf	1,w
  3791  09B1  1903               	btfsc	3,2
  3792  09B2  29CA               	goto	l5415
  3793  09B3  0828               	movf	strspn@s2+1,w
  3794  09B4  00A1               	movwf	strchr@ptr+1
  3795  09B5  0827               	movf	strspn@s2,w
  3796  09B6  00A0               	movwf	strchr@ptr
  3797  09B7  082D               	movf	strspn@s1,w
  3798  09B8  0086               	movwf	6
  3799  09B9  3001               	movlw	1	; select bank2/3
  3800  09BA  0087               	movwf	7
  3801  09BB  0801               	movf	1,w
  3802  09BC  00A9               	movwf	??_strspn
  3803  09BD  01AA               	clrf	??_strspn+1
  3804  09BE  0829               	movf	??_strspn,w
  3805  09BF  00A2               	movwf	strchr@chr
  3806  09C0  082A               	movf	??_strspn+1,w
  3807  09C1  00A3               	movwf	strchr@chr+1
  3808  09C2  3197  27CA  3189   	fcall	_strchr
  3809  09C5  0020               	movlb	0	; select bank0
  3810  09C6  0820               	movf	?_strchr,w
  3811  09C7  0421               	iorwf	?_strchr+1,w
  3812  09C8  1D03               	btfss	3,2
  3813  09C9  29A4               	goto	l5409
  3814  09CA                     l5415:	
  3815  09CA  082C               	movf	strspn@i+1,w
  3816  09CB  00A8               	movwf	?_strspn+1
  3817  09CC  082B               	movf	strspn@i,w
  3818  09CD  00A7               	movwf	?_strspn
  3819  09CE  0008               	return
  3820  09CF                     __end_of_strspn:	
  3821                           
  3822                           	psect	text3
  3823  096F                     __ptext3:	
  3824 ;; *************** function _strcspn *****************
  3825 ;; Defined at:
  3826 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcspn.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  s1              1    wreg     PTR const unsigned char 
  3829 ;;		 -> mainReceivedDataBuffer(18), NULL(0), 
  3830 ;;  s2              2    7[BANK0 ] PTR const unsigned char 
  3831 ;;		 -> STR_16(2), STR_14(2), 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;  s1              1   13[BANK0 ] PTR const unsigned char 
  3834 ;;		 -> mainReceivedDataBuffer(18), NULL(0), 
  3835 ;;  i               2   11[BANK0 ] unsigned int 
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  2    7[BANK0 ] unsigned int 
  3838 ;; Registers used:
  3839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3845 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  3846 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0
  3847 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  3848 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0
  3849 ;;Total ram usage:        7 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    3
  3852 ;; This function calls:
  3853 ;;		_strchr
  3854 ;; This function is called by:
  3855 ;;		_strtok
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           
  3860                           ;psect for function _strcspn
  3861  096F                     _strcspn:	
  3862                           
  3863                           ;incstack = 0
  3864                           ; Regs used in _strcspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3865                           ;strcspn@s1 stored from wreg
  3866  096F  0020               	movlb	0	; select bank0
  3867  0970  00AD               	movwf	strcspn@s1
  3868  0971  01AB               	clrf	strcspn@i
  3869  0972  01AC               	clrf	strcspn@i+1
  3870  0973  297C               	goto	l5423
  3871  0974                     l5421:	
  3872  0974  3001               	movlw	1
  3873  0975  00A9               	movwf	??_strcspn
  3874  0976  0829               	movf	??_strcspn,w
  3875  0977  07AD               	addwf	strcspn@s1,f
  3876  0978  3001               	movlw	1
  3877  0979  07AB               	addwf	strcspn@i,f
  3878  097A  3000               	movlw	0
  3879  097B  3DAC               	addwfc	strcspn@i+1,f
  3880  097C                     l5423:	
  3881  097C  082D               	movf	strcspn@s1,w
  3882  097D  0086               	movwf	6
  3883  097E  3001               	movlw	1	; select bank2/3
  3884  097F  0087               	movwf	7
  3885  0980  0801               	movf	1,w
  3886  0981  1903               	btfsc	3,2
  3887  0982  299A               	goto	l5427
  3888  0983  0828               	movf	strcspn@s2+1,w
  3889  0984  00A1               	movwf	strchr@ptr+1
  3890  0985  0827               	movf	strcspn@s2,w
  3891  0986  00A0               	movwf	strchr@ptr
  3892  0987  082D               	movf	strcspn@s1,w
  3893  0988  0086               	movwf	6
  3894  0989  3001               	movlw	1	; select bank2/3
  3895  098A  0087               	movwf	7
  3896  098B  0801               	movf	1,w
  3897  098C  00A9               	movwf	??_strcspn
  3898  098D  01AA               	clrf	??_strcspn+1
  3899  098E  0829               	movf	??_strcspn,w
  3900  098F  00A2               	movwf	strchr@chr
  3901  0990  082A               	movf	??_strcspn+1,w
  3902  0991  00A3               	movwf	strchr@chr+1
  3903  0992  3197  27CA  3189   	fcall	_strchr
  3904  0995  0020               	movlb	0	; select bank0
  3905  0996  0820               	movf	?_strchr,w
  3906  0997  0421               	iorwf	?_strchr+1,w
  3907  0998  1903               	btfsc	3,2
  3908  0999  2974               	goto	l5421
  3909  099A                     l5427:	
  3910  099A  082C               	movf	strcspn@i+1,w
  3911  099B  00A8               	movwf	?_strcspn+1
  3912  099C  082B               	movf	strcspn@i,w
  3913  099D  00A7               	movwf	?_strcspn
  3914  099E  0008               	return
  3915  099F                     __end_of_strcspn:	
  3916                           
  3917                           	psect	text4
  3918  17CA                     __ptext4:	
  3919 ;; *************** function _strchr *****************
  3920 ;; Defined at:
  3921 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
  3924 ;;		 -> STR_16(2), STR_14(2), 
  3925 ;;  chr             2    2[BANK0 ] int 
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;		None
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  2    0[BANK0 ] PTR unsigned char 
  3930 ;; Registers used:
  3931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  3937 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0
  3938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  3939 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0
  3940 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0
  3941 ;;Total ram usage:        7 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; Hardware stack levels required when called:    2
  3944 ;; This function calls:
  3945 ;;		Nothing
  3946 ;; This function is called by:
  3947 ;;		_strcspn
  3948 ;;		_strspn
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           
  3953                           ;psect for function _strchr
  3954  17CA                     _strchr:	
  3955  17CA                     l1230:	
  3956                           ;incstack = 0
  3957                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0+pclath]
  3958                           
  3959  17CA  0020               	movlb	0	; select bank0
  3960  17CB  0820               	movf	strchr@ptr,w
  3961  17CC  0084               	movwf	4
  3962  17CD  0821               	movf	strchr@ptr+1,w
  3963  17CE  0085               	movwf	5
  3964  17CF  0800               	movf	0,w	;code access
  3965  17D0  0622               	xorwf	strchr@chr,w
  3966  17D1  1903               	btfsc	3,2
  3967  17D2  0008               	return
  3968  17D3  0821               	movf	strchr@ptr+1,w
  3969  17D4  00A5               	movwf	??_strchr+1
  3970  17D5  0820               	movf	strchr@ptr,w
  3971  17D6  00A4               	movwf	??_strchr
  3972  17D7  0AA0               	incf	strchr@ptr,f
  3973  17D8  1903               	skipnz
  3974  17D9  0AA1               	incf	strchr@ptr+1,f
  3975  17DA  0824               	movf	??_strchr,w
  3976  17DB  0084               	movwf	4
  3977  17DC  0825               	movf	??_strchr+1,w
  3978  17DD  0085               	movwf	5
  3979  17DE  0012               	moviw fsr0++
  3980  17DF  1D03               	btfss	3,2
  3981  17E0  2FCA               	goto	l1230
  3982  17E1  01A0               	clrf	?_strchr
  3983  17E2  01A1               	clrf	?_strchr+1
  3984  17E3  0008               	return
  3985  17E4                     __end_of_strchr:	
  3986                           
  3987                           	psect	text5
  3988  08BB                     __ptext5:	
  3989 ;; *************** function _strcmp *****************
  3990 ;; Defined at:
  3991 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  s1              1    wreg     PTR const unsigned char 
  3994 ;;		 -> mainReceivedDataBuffer(18), NULL(0), 
  3995 ;;  s2              2    0[BANK0 ] PTR const unsigned char 
  3996 ;;		 -> STR_15(4), 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  s1              1    4[BANK0 ] PTR const unsigned char 
  3999 ;;		 -> mainReceivedDataBuffer(18), NULL(0), 
  4000 ;;  r               1    3[BANK0 ] char 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  2    0[BANK0 ] int 
  4003 ;; Registers used:
  4004 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4010 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  4011 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  4012 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  4013 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0
  4014 ;;Total ram usage:        5 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:    2
  4017 ;; This function calls:
  4018 ;;		Nothing
  4019 ;; This function is called by:
  4020 ;;		_main
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           
  4025                           ;psect for function _strcmp
  4026  08BB                     _strcmp:	
  4027                           
  4028                           ;incstack = 0
  4029                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  4030                           ;strcmp@s1 stored from wreg
  4031  08BB  0020               	movlb	0	; select bank0
  4032  08BC  00A4               	movwf	strcmp@s1
  4033  08BD  28C6               	goto	l5683
  4034  08BE                     l5681:	
  4035  08BE  3001               	movlw	1
  4036  08BF  00A2               	movwf	??_strcmp
  4037  08C0  0822               	movf	??_strcmp,w
  4038  08C1  07A4               	addwf	strcmp@s1,f
  4039  08C2  3001               	movlw	1
  4040  08C3  07A0               	addwf	strcmp@s2,f
  4041  08C4  3000               	movlw	0
  4042  08C5  3DA1               	addwfc	strcmp@s2+1,f
  4043  08C6                     l5683:	
  4044  08C6  0824               	movf	strcmp@s1,w
  4045  08C7  0086               	movwf	6
  4046  08C8  3001               	movlw	1	; select bank2/3
  4047  08C9  0087               	movwf	7
  4048  08CA  0820               	movf	strcmp@s2,w
  4049  08CB  0084               	movwf	4
  4050  08CC  0821               	movf	strcmp@s2+1,w
  4051  08CD  0085               	movwf	5
  4052  08CE  0800               	movf	0,w	;code access
  4053  08CF  3AFF               	xorlw	255
  4054  08D0  3E01               	addlw	1
  4055  08D1  0701               	addwf	1,w
  4056  08D2  00A2               	movwf	??_strcmp
  4057  08D3  0822               	movf	??_strcmp,w
  4058  08D4  00A3               	movwf	strcmp@r
  4059  08D5  0823               	movf	strcmp@r,w
  4060  08D6  1D03               	btfss	3,2
  4061  08D7  28DF               	goto	l5687
  4062  08D8  0824               	movf	strcmp@s1,w
  4063  08D9  0086               	movwf	6
  4064  08DA  3001               	movlw	1	; select bank2/3
  4065  08DB  0087               	movwf	7
  4066  08DC  0801               	movf	1,w
  4067  08DD  1D03               	btfss	3,2
  4068  08DE  28BE               	goto	l5681
  4069  08DF                     l5687:	
  4070  08DF  0823               	movf	strcmp@r,w
  4071  08E0  00A0               	movwf	?_strcmp
  4072  08E1  01A1               	clrf	?_strcmp+1
  4073  08E2  1BA0               	btfsc	?_strcmp,7
  4074  08E3  03A1               	decf	?_strcmp+1,f
  4075  08E4  0008               	return
  4076  08E5                     __end_of_strcmp:	
  4077                           
  4078                           	psect	text6
  4079  17B1                     __ptext6:	
  4080 ;; *************** function _errorsMain *****************
  4081 ;; Defined at:
  4082 ;;		line 1252 in file "main.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  errNum          2    0[BANK0 ] PTR const unsigned char 
  4085 ;;		 -> STR_17(5), 
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;		None
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  1    wreg      void 
  4090 ;; Registers used:
  4091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4097 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  4098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  4099 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  4100 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  4101 ;;Total ram usage:        3 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; Hardware stack levels required when called:    2
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_main
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           
  4112                           ;psect for function _errorsMain
  4113  17B1                     _errorsMain:	
  4114  17B1                     l5697:	
  4115                           ;main.c: 1254: while(*errNum != (0))
  4116                           
  4117                           ;incstack = 0
  4118                           ; Regs used in _errorsMain: [wreg-fsr0h+status,2+status,0+pclath]
  4119                           
  4120  17B1  0020               	movlb	0	; select bank0
  4121  17B2  0820               	movf	errorsMain@errNum,w
  4122  17B3  0084               	movwf	4
  4123  17B4  0821               	movf	errorsMain@errNum+1,w
  4124  17B5  0085               	movwf	5
  4125  17B6  0012               	moviw fsr0++
  4126  17B7  1903               	btfsc	3,2
  4127  17B8  0008               	return
  4128  17B9                     l640:	
  4129                           ;main.c: 1255: {
  4130                           ;main.c: 1256: while (!TX1STAbits.TRMT);
  4131                           
  4132  17B9  0023               	movlb	3	; select bank3
  4133  17BA  1C9E               	btfss	30,1	;volatile
  4134  17BB  2FB9               	goto	l640
  4135                           
  4136                           ;main.c: 1257: TX1REG = *errNum;
  4137  17BC  0020               	movlb	0	; select bank0
  4138  17BD  0820               	movf	errorsMain@errNum,w
  4139  17BE  0084               	movwf	4
  4140  17BF  0821               	movf	errorsMain@errNum+1,w
  4141  17C0  0085               	movwf	5
  4142  17C1  0800               	movf	0,w	;code access
  4143  17C2  0023               	movlb	3	; select bank3
  4144  17C3  009A               	movwf	26	;volatile
  4145                           
  4146                           ;main.c: 1258: *errNum++;
  4147  17C4  3001               	movlw	1
  4148  17C5  0020               	movlb	0	; select bank0
  4149  17C6  07A0               	addwf	errorsMain@errNum,f
  4150  17C7  3000               	movlw	0
  4151  17C8  3DA1               	addwfc	errorsMain@errNum+1,f
  4152  17C9  2FB1               	goto	l5697
  4153  17CA                     __end_of_errorsMain:	
  4154                           
  4155                           	psect	text7
  4156  09CF                     __ptext7:	
  4157 ;; *************** function _copyReceivedDataBuffer *****************
  4158 ;; Defined at:
  4159 ;;		line 1313 in file "main.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;		None
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  dataBufferCo    2    1[BANK0 ] int 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      void 
  4166 ;; Registers used:
  4167 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  4174 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  4175 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  4176 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  4177 ;;Total ram usage:        3 bytes
  4178 ;; Hardware stack levels used:    1
  4179 ;; Hardware stack levels required when called:    2
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_main
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           
  4188                           ;psect for function _copyReceivedDataBuffer
  4189  09CF                     _copyReceivedDataBuffer:	
  4190                           
  4191                           ;main.c: 1314: int dataBufferCounter=2;
  4192                           
  4193                           ;incstack = 0
  4194                           ; Regs used in _copyReceivedDataBuffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  4195  09CF  3002               	movlw	2
  4196  09D0  0020               	movlb	0	; select bank0
  4197  09D1  00A1               	movwf	copyReceivedDataBuffer@dataBufferCounter
  4198  09D2  3000               	movlw	0
  4199  09D3  00A2               	movwf	copyReceivedDataBuffer@dataBufferCounter+1
  4200                           
  4201                           ;main.c: 1315: for(dataBufferCounter=2;dataBufferCounter<9;dataBufferCounter++){
  4202  09D4  3002               	movlw	2
  4203  09D5  00A1               	movwf	copyReceivedDataBuffer@dataBufferCounter
  4204  09D6  3000               	movlw	0
  4205  09D7  00A2               	movwf	copyReceivedDataBuffer@dataBufferCounter+1
  4206  09D8                     L1:	
  4207  09D8  0822               	movf	copyReceivedDataBuffer@dataBufferCounter+1,w
  4208  09D9  3A80               	xorlw	128
  4209  09DA  00A0               	movwf	??_copyReceivedDataBuffer
  4210  09DB  3080               	movlw	128
  4211  09DC  0220               	subwf	??_copyReceivedDataBuffer,w
  4212  09DD  1D03               	skipz
  4213  09DE  29E1               	goto	u6155
  4214  09DF  3009               	movlw	9
  4215  09E0  0221               	subwf	copyReceivedDataBuffer@dataBufferCounter,w
  4216  09E1                     u6155:	
  4217  09E1  1803               	btfsc	3,0
  4218  09E2  0008               	return
  4219                           
  4220                           ;main.c: 1316: tempReceivedDataBuffer[dataBufferCounter-2]=mainReceivedDataBuffer[dataBu
      +                          fferCounter];
  4221  09E3  0020               	movlb	0	; select bank0
  4222  09E4  0821               	movf	copyReceivedDataBuffer@dataBufferCounter,w
  4223  09E5  3EBD               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  4224  09E6  0086               	movwf	6
  4225  09E7  3001               	movlw	1	; select bank3/4
  4226  09E8  0087               	movwf	7
  4227  09E9  0801               	movf	1,w
  4228  09EA  00A0               	movwf	??_copyReceivedDataBuffer
  4229  09EB  0821               	movf	copyReceivedDataBuffer@dataBufferCounter,w
  4230  09EC  3EFE               	addlw	254
  4231  09ED  3EAE               	addlw	(low (_tempReceivedDataBuffer| (0+256)))& (0+255)
  4232  09EE  0086               	movwf	6
  4233  09EF  3001               	movlw	1	; select bank3/4
  4234  09F0  0087               	movwf	7
  4235  09F1  0820               	movf	??_copyReceivedDataBuffer,w
  4236  09F2  0081               	movwf	1
  4237                           
  4238                           ;main.c: 1317: mainReceivedDataBuffer[dataBufferCounter]='#';
  4239  09F3  3023               	movlw	35
  4240  09F4  00A0               	movwf	??_copyReceivedDataBuffer
  4241  09F5  0821               	movf	copyReceivedDataBuffer@dataBufferCounter,w
  4242  09F6  3EBD               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  4243  09F7  0086               	movwf	6
  4244  09F8  3001               	movlw	1	; select bank3/4
  4245  09F9  0087               	movwf	7
  4246  09FA  0820               	movf	??_copyReceivedDataBuffer,w
  4247  09FB  0081               	movwf	1
  4248  09FC  3001               	movlw	1
  4249  09FD  07A1               	addwf	copyReceivedDataBuffer@dataBufferCounter,f
  4250  09FE  3000               	movlw	0
  4251  09FF  3DA2               	addwfc	copyReceivedDataBuffer@dataBufferCounter+1,f
  4252  0A00  29D8               	goto	L1
  4253  0A01                     __end_of_copyReceivedDataBuffer:	
  4254                           
  4255                           	psect	text8
  4256  0D38                     __ptext8:	
  4257 ;; *************** function _applianceControl *****************
  4258 ;; Defined at:
  4259 ;;		line 3 in file "applicationcontrol.h"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;  charSwitchMS    1    wreg     unsigned char 
  4262 ;;  charSwitchLS    1   44[BANK0 ] unsigned char 
  4263 ;;  charSwitchST    1   45[BANK0 ] unsigned char 
  4264 ;;  chDimmerSpee    1   46[BANK0 ] unsigned char 
  4265 ;;  chDimmerSpee    1   47[BANK0 ] unsigned char 
  4266 ;;  charParental    1   48[BANK0 ] unsigned char 
  4267 ;;  charFinalFra    1   49[BANK0 ] unsigned char 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  charSwitchMS    1   37[BANK1 ] unsigned char 
  4270 ;;  HexlevelBuff    5    8[BANK1 ] unsigned char [5]
  4271 ;;  NeedPulse       4   27[BANK1 ] unsigned long 
  4272 ;;  Pulse           4   23[BANK1 ] unsigned long 
  4273 ;;  CompleteCloc    4   13[BANK1 ] unsigned long 
  4274 ;;  strL            3   34[BANK1 ] unsigned char [3]
  4275 ;;  strH            3   31[BANK1 ] unsigned char [3]
  4276 ;;  ConvertIntTo    3   40[BANK1 ] float 
  4277 ;;  clockPerCycl    3   20[BANK1 ] float 
  4278 ;;  deno            3   17[BANK1 ] float 
  4279 ;;  integerSwitc    2   51[BANK1 ] int 
  4280 ;;  dimmerSpeedS    2   45[BANK1 ] unsigned char [2]
  4281 ;;  currentState    2   49[BANK1 ] int 
  4282 ;;  integerSwitc    2   47[BANK1 ] int 
  4283 ;;  switchNumber    2   38[BANK1 ] unsigned char [2]
  4284 ;;  integerSpeed    2   43[BANK1 ] int 
  4285 ;;  end             2    6[BANK1 ] int 
  4286 ;;  start           2    4[BANK1 ] int 
  4287 ;;  remainder       2    2[BANK1 ] int 
  4288 ;;  ConvertStrin    2    0[BANK1 ] int 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  1    wreg      void 
  4291 ;; Registers used:
  4292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  4298 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0
  4299 ;;      Locals:         0       0      53       0       0       0       0       0       0       0       0
  4300 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0
  4301 ;;      Totals:         0      14      53       0       0       0       0       0       0       0       0
  4302 ;;Total ram usage:       67 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; Hardware stack levels required when called:    5
  4305 ;; This function calls:
  4306 ;;		___awtoft
  4307 ;;		___ftdiv
  4308 ;;		___ftmul
  4309 ;;		___fttol
  4310 ;;		_atoi
  4311 ;;		_hexadecimalToDecimal
  4312 ;;		_printf
  4313 ;;		_sendAcknowledgment
  4314 ;;		_sprintf
  4315 ;;		_strlen
  4316 ;;		_strncpy
  4317 ;; This function is called by:
  4318 ;;		_main
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           
  4323                           ;psect for function _applianceControl
  4324  0D38                     _applianceControl:	
  4325                           
  4326                           ;incstack = 0
  4327                           ; Regs used in _applianceControl: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4328                           ;applianceControl@charSwitchMSB stored from wreg
  4329  0D38  0021               	movlb	1	; select bank1
  4330  0D39  00C5               	movwf	applianceControl@charSwitchMSB^(0+128)
  4331                           
  4332                           ;applicationcontrol.h: 7: int integerSwitchNumber = 0;
  4333  0D3A  01CF               	clrf	applianceControl@integerSwitchNumber^(0+128)
  4334  0D3B  01D0               	clrf	(applianceControl@integerSwitchNumber+1)^(0+128)
  4335                           
  4336                           ;applicationcontrol.h: 8: int integerSwitchState = 0;
  4337  0D3C  01D3               	clrf	applianceControl@integerSwitchState^(0+128)
  4338  0D3D  01D4               	clrf	(applianceControl@integerSwitchState+1)^(0+128)
  4339                           
  4340                           ;applicationcontrol.h: 9: int integerSpeed = 0;
  4341  0D3E  01CB               	clrf	applianceControl@integerSpeed^(0+128)
  4342  0D3F  01CC               	clrf	(applianceControl@integerSpeed+1)^(0+128)
  4343                           
  4344                           ;applicationcontrol.h: 10: int currentStateBufferPositions=0;
  4345  0D40  01D1               	clrf	applianceControl@currentStateBufferPositions^(0+128)
  4346  0D41  01D2               	clrf	(applianceControl@currentStateBufferPositions+1)^(0+128)
  4347                           
  4348                           ;applicationcontrol.h: 12: int ConvertStringIntoInt=0;
  4349  0D42  01A0               	clrf	applianceControl@ConvertStringIntoInt^(0+128)
  4350  0D43  01A1               	clrf	(applianceControl@ConvertStringIntoInt+1)^(0+128)
  4351                           
  4352                           ;applicationcontrol.h: 13: float ConvertIntToTimeInMilisec=0;
  4353  0D44  3000               	movlw	0
  4354  0D45  00C8               	movwf	applianceControl@ConvertIntToTimeInMilisec^(0+128)
  4355  0D46  3000               	movlw	0
  4356  0D47  00C9               	movwf	(applianceControl@ConvertIntToTimeInMilisec+1)^(0+128)
  4357  0D48  3000               	movlw	0
  4358  0D49  00CA               	movwf	(applianceControl@ConvertIntToTimeInMilisec+2)^(0+128)
  4359                           
  4360                           ;applicationcontrol.h: 14: unsigned long long int Pulse=0,NeedPulse=0,CompleteClock =655
      +                          35;
  4361  0D4A  3000               	movlw	0
  4362  0D4B  00BA               	movwf	(applianceControl@Pulse+3)^(0+128)
  4363  0D4C  3000               	movlw	0
  4364  0D4D  00B9               	movwf	(applianceControl@Pulse+2)^(0+128)
  4365  0D4E  3000               	movlw	0
  4366  0D4F  00B8               	movwf	(applianceControl@Pulse+1)^(0+128)
  4367  0D50  3000               	movlw	0
  4368  0D51  00B7               	movwf	applianceControl@Pulse^(0+128)
  4369  0D52  3000               	movlw	0
  4370  0D53  00BE               	movwf	(applianceControl@NeedPulse+3)^(0+128)
  4371  0D54  3000               	movlw	0
  4372  0D55  00BD               	movwf	(applianceControl@NeedPulse+2)^(0+128)
  4373  0D56  3000               	movlw	0
  4374  0D57  00BC               	movwf	(applianceControl@NeedPulse+1)^(0+128)
  4375  0D58  3000               	movlw	0
  4376  0D59  00BB               	movwf	applianceControl@NeedPulse^(0+128)
  4377  0D5A  3000               	movlw	0
  4378  0D5B  00B0               	movwf	(applianceControl@CompleteClock+3)^(0+128)
  4379  0D5C  3000               	movlw	0
  4380  0D5D  00AF               	movwf	(applianceControl@CompleteClock+2)^(0+128)
  4381  0D5E  30FF               	movlw	255
  4382  0D5F  00AE               	movwf	(applianceControl@CompleteClock+1)^(0+128)
  4383  0D60  30FF               	movlw	255
  4384  0D61  00AD               	movwf	applianceControl@CompleteClock^(0+128)
  4385                           
  4386                           ;applicationcontrol.h: 15: float deno = 20.0;
  4387  0D62  3000               	movlw	0
  4388  0D63  00B1               	movwf	applianceControl@deno^(0+128)
  4389  0D64  30A0               	movlw	160
  4390  0D65  00B2               	movwf	(applianceControl@deno+1)^(0+128)
  4391  0D66  3041               	movlw	65
  4392  0D67  00B3               	movwf	(applianceControl@deno+2)^(0+128)
  4393                           
  4394                           ;applicationcontrol.h: 16: float clockPerCycle=0.25;
  4395  0D68  3000               	movlw	0
  4396  0D69  00B4               	movwf	applianceControl@clockPerCycle^(0+128)
  4397  0D6A  3080               	movlw	128
  4398  0D6B  00B5               	movwf	(applianceControl@clockPerCycle+1)^(0+128)
  4399  0D6C  303E               	movlw	62
  4400  0D6D  00B6               	movwf	(applianceControl@clockPerCycle+2)^(0+128)
  4401                           
  4402                           ;applicationcontrol.h: 17: int remainder=0;
  4403  0D6E  01A2               	clrf	applianceControl@remainder^(0+128)
  4404  0D6F  01A3               	clrf	(applianceControl@remainder+1)^(0+128)
  4405                           
  4406                           ;applicationcontrol.h: 18: char HexlevelBuffer[5];
  4407                           ;applicationcontrol.h: 19: int start=0;
  4408  0D70  01A4               	clrf	applianceControl@start^(0+128)
  4409  0D71  01A5               	clrf	(applianceControl@start+1)^(0+128)
  4410                           
  4411                           ;applicationcontrol.h: 20: int end = strlen(HexlevelBuffer)-1;
  4412  0D72  30A8               	movlw	low applianceControl@HexlevelBuffer
  4413  0D73  0020               	movlb	0	; select bank0
  4414  0D74  00A0               	movwf	strlen@s
  4415  0D75  3000               	movlw	high applianceControl@HexlevelBuffer
  4416  0D76  00A1               	movwf	strlen@s+1
  4417  0D77  3188  2033  318D   	fcall	_strlen
  4418  0D7A  0020               	movlb	0	; select bank0
  4419  0D7B  0820               	movf	?_strlen,w
  4420  0D7C  3EFF               	addlw	255
  4421  0D7D  0021               	movlb	1	; select bank1
  4422  0D7E  00A6               	movwf	applianceControl@end^(0+128)
  4423  0D7F  30FF               	movlw	255
  4424  0D80  0020               	movlb	0	; select bank0
  4425  0D81  3D21               	addwfc	?_strlen+1,w
  4426  0D82  0021               	movlb	1	; select bank1
  4427  0D83  00A7               	movwf	(applianceControl@end+1)^(0+128)
  4428                           
  4429                           ;applicationcontrol.h: 21: char strH[3],strL[3];
  4430                           ;applicationcontrol.h: 24: char switchNumberStringBuffer[2]="#";
  4431  0D84  0022               	movlb	2	; select bank2
  4432  0D85  086E               	movf	(applianceControl@F3974+1)^(0+256),w
  4433  0D86  0021               	movlb	1	; select bank1
  4434  0D87  00C7               	movwf	(applianceControl@switchNumberStringBuffer+1)^(0+128)
  4435  0D88  0022               	movlb	2	; select bank2
  4436  0D89  086D               	movf	applianceControl@F3974^(0+256),w
  4437  0D8A  0021               	movlb	1	; select bank1
  4438  0D8B  00C6               	movwf	applianceControl@switchNumberStringBuffer^(0+128)
  4439                           
  4440                           ;applicationcontrol.h: 25: char dimmerSpeedStringBuffer[2]="#";
  4441  0D8C  0022               	movlb	2	; select bank2
  4442  0D8D  086C               	movf	(applianceControl@F3976+1)^(0+256),w
  4443  0D8E  0021               	movlb	1	; select bank1
  4444  0D8F  00CE               	movwf	(applianceControl@dimmerSpeedStringBuffer+1)^(0+128)
  4445  0D90  0022               	movlb	2	; select bank2
  4446  0D91  086B               	movf	applianceControl@F3976^(0+256),w
  4447  0D92  0021               	movlb	1	; select bank1
  4448  0D93  00CD               	movwf	applianceControl@dimmerSpeedStringBuffer^(0+128)
  4449                           
  4450                           ;applicationcontrol.h: 27: switchNumberStringBuffer[0]=charSwitchMSB;
  4451  0D94  0845               	movf	applianceControl@charSwitchMSB^(0+128),w
  4452  0D95  0020               	movlb	0	; select bank0
  4453  0D96  00D2               	movwf	??_applianceControl
  4454  0D97  0852               	movf	??_applianceControl,w
  4455  0D98  0021               	movlb	1	; select bank1
  4456  0D99  00C6               	movwf	applianceControl@switchNumberStringBuffer^(0+128)
  4457                           
  4458                           ;applicationcontrol.h: 28: switchNumberStringBuffer[1]=charSwitchLSB;
  4459  0D9A  0020               	movlb	0	; select bank0
  4460  0D9B  084C               	movf	applianceControl@charSwitchLSB,w
  4461  0D9C  00D2               	movwf	??_applianceControl
  4462  0D9D  0852               	movf	??_applianceControl,w
  4463  0D9E  0021               	movlb	1	; select bank1
  4464  0D9F  00C7               	movwf	(applianceControl@switchNumberStringBuffer^(0+128)+1)
  4465                           
  4466                           ;applicationcontrol.h: 29: integerSwitchNumber = atoi(switchNumberStringBuffer);
  4467  0DA0  30C6               	movlw	(low (applianceControl@switchNumberStringBuffer| 0))& (0+255)
  4468  0DA1  3187  2793  318D   	fcall	_atoi
  4469  0DA4  0020               	movlb	0	; select bank0
  4470  0DA5  0827               	movf	?_atoi+1,w
  4471  0DA6  0021               	movlb	1	; select bank1
  4472  0DA7  00D0               	movwf	(applianceControl@integerSwitchNumber+1)^(0+128)
  4473  0DA8  0020               	movlb	0	; select bank0
  4474  0DA9  0826               	movf	?_atoi,w
  4475  0DAA  0021               	movlb	1	; select bank1
  4476  0DAB  00CF               	movwf	applianceControl@integerSwitchNumber^(0+128)
  4477                           
  4478                           ;applicationcontrol.h: 33: integerSwitchState = charSwitchSTATE-'0';
  4479  0DAC  0020               	movlb	0	; select bank0
  4480  0DAD  084D               	movf	applianceControl@charSwitchSTATE,w
  4481  0DAE  3ED0               	addlw	208
  4482  0DAF  0021               	movlb	1	; select bank1
  4483  0DB0  00D3               	movwf	applianceControl@integerSwitchState^(0+128)
  4484  0DB1  30FF               	movlw	255
  4485  0DB2  1803               	skipnc
  4486  0DB3  3000               	movlw	0
  4487  0DB4  00D4               	movwf	(applianceControl@integerSwitchState^(0+128)+1)
  4488                           
  4489                           ;applicationcontrol.h: 36: dimmerSpeedStringBuffer[0]=chDimmerSpeedMSB;
  4490  0DB5  0020               	movlb	0	; select bank0
  4491  0DB6  084E               	movf	applianceControl@chDimmerSpeedMSB,w
  4492  0DB7  00D2               	movwf	??_applianceControl
  4493  0DB8  0852               	movf	??_applianceControl,w
  4494  0DB9  0021               	movlb	1	; select bank1
  4495  0DBA  00CD               	movwf	applianceControl@dimmerSpeedStringBuffer^(0+128)
  4496                           
  4497                           ;applicationcontrol.h: 37: dimmerSpeedStringBuffer[1]=chDimmerSpeedLSB;
  4498  0DBB  0020               	movlb	0	; select bank0
  4499  0DBC  084F               	movf	applianceControl@chDimmerSpeedLSB,w
  4500  0DBD  00D2               	movwf	??_applianceControl
  4501  0DBE  0852               	movf	??_applianceControl,w
  4502  0DBF  0021               	movlb	1	; select bank1
  4503  0DC0  00CE               	movwf	(applianceControl@dimmerSpeedStringBuffer^(0+128)+1)
  4504                           
  4505                           ;applicationcontrol.h: 38: integerSpeed = atoi(dimmerSpeedStringBuffer);
  4506  0DC1  30CD               	movlw	(low (applianceControl@dimmerSpeedStringBuffer| 0))& (0+255)
  4507  0DC2  3187  2793  318D   	fcall	_atoi
  4508  0DC5  0020               	movlb	0	; select bank0
  4509  0DC6  0827               	movf	?_atoi+1,w
  4510  0DC7  0021               	movlb	1	; select bank1
  4511  0DC8  00CC               	movwf	(applianceControl@integerSpeed+1)^(0+128)
  4512  0DC9  0020               	movlb	0	; select bank0
  4513  0DCA  0826               	movf	?_atoi,w
  4514  0DCB  0021               	movlb	1	; select bank1
  4515  0DCC  00CB               	movwf	applianceControl@integerSpeed^(0+128)
  4516                           
  4517                           ;applicationcontrol.h: 41: dimmerSpeedStringBuffer[0]=chDimmerSpeedMSB;
  4518  0DCD  0020               	movlb	0	; select bank0
  4519  0DCE  084E               	movf	applianceControl@chDimmerSpeedMSB,w
  4520  0DCF  00D2               	movwf	??_applianceControl
  4521  0DD0  0852               	movf	??_applianceControl,w
  4522  0DD1  0021               	movlb	1	; select bank1
  4523  0DD2  00CD               	movwf	applianceControl@dimmerSpeedStringBuffer^(0+128)
  4524                           
  4525                           ;applicationcontrol.h: 42: dimmerSpeedStringBuffer[1]=chDimmerSpeedLSB;
  4526  0DD3  0020               	movlb	0	; select bank0
  4527  0DD4  084F               	movf	applianceControl@chDimmerSpeedLSB,w
  4528  0DD5  00D2               	movwf	??_applianceControl
  4529  0DD6  0852               	movf	??_applianceControl,w
  4530  0DD7  0021               	movlb	1	; select bank1
  4531  0DD8  00CE               	movwf	(applianceControl@dimmerSpeedStringBuffer^(0+128)+1)
  4532                           
  4533                           ;applicationcontrol.h: 43: integerSpeed = atoi(dimmerSpeedStringBuffer);
  4534  0DD9  30CD               	movlw	(low (applianceControl@dimmerSpeedStringBuffer| 0))& (0+255)
  4535  0DDA  3187  2793  318D   	fcall	_atoi
  4536  0DDD  0020               	movlb	0	; select bank0
  4537  0DDE  0827               	movf	?_atoi+1,w
  4538  0DDF  0021               	movlb	1	; select bank1
  4539  0DE0  00CC               	movwf	(applianceControl@integerSpeed+1)^(0+128)
  4540  0DE1  0020               	movlb	0	; select bank0
  4541  0DE2  0826               	movf	?_atoi,w
  4542  0DE3  0021               	movlb	1	; select bank1
  4543  0DE4  00CB               	movwf	applianceControl@integerSpeed^(0+128)
  4544                           
  4545                           ;applicationcontrol.h: 44: integerSpeed = 99-integerSpeed;
  4546  0DE5  094B               	comf	applianceControl@integerSpeed^(0+128),w
  4547  0DE6  0020               	movlb	0	; select bank0
  4548  0DE7  00D2               	movwf	??_applianceControl
  4549  0DE8  0021               	movlb	1	; select bank1
  4550  0DE9  094C               	comf	(applianceControl@integerSpeed+1)^(0+128),w
  4551  0DEA  0020               	movlb	0	; select bank0
  4552  0DEB  00D3               	movwf	??_applianceControl+1
  4553  0DEC  0AD2               	incf	??_applianceControl,f
  4554  0DED  1903               	skipnz
  4555  0DEE  0AD3               	incf	??_applianceControl+1,f
  4556  0DEF  0852               	movf	??_applianceControl,w
  4557  0DF0  3E63               	addlw	99
  4558  0DF1  0021               	movlb	1	; select bank1
  4559  0DF2  00CB               	movwf	applianceControl@integerSpeed^(0+128)
  4560  0DF3  3000               	movlw	0
  4561  0DF4  0020               	movlb	0	; select bank0
  4562  0DF5  3D53               	addwfc	??_applianceControl+1,w
  4563  0DF6  0021               	movlb	1	; select bank1
  4564  0DF7  00CC               	movwf	(applianceControl@integerSpeed+1)^(0+128)
  4565                           
  4566                           ;applicationcontrol.h: 45: ConvertIntToTimeInMilisec = (integerSpeed/deno);
  4567  0DF8  0831               	movf	applianceControl@deno^(0+128),w
  4568  0DF9  0020               	movlb	0	; select bank0
  4569  0DFA  00AE               	movwf	___ftdiv@f2
  4570  0DFB  0021               	movlb	1	; select bank1
  4571  0DFC  0832               	movf	(applianceControl@deno+1)^(0+128),w
  4572  0DFD  0020               	movlb	0	; select bank0
  4573  0DFE  00AF               	movwf	___ftdiv@f2+1
  4574  0DFF  0021               	movlb	1	; select bank1
  4575  0E00  0833               	movf	(applianceControl@deno+2)^(0+128),w
  4576  0E01  0020               	movlb	0	; select bank0
  4577  0E02  00B0               	movwf	___ftdiv@f2+2
  4578  0E03  0021               	movlb	1	; select bank1
  4579  0E04  084C               	movf	(applianceControl@integerSpeed+1)^(0+128),w
  4580  0E05  0020               	movlb	0	; select bank0
  4581  0E06  00A9               	movwf	___awtoft@c+1
  4582  0E07  0021               	movlb	1	; select bank1
  4583  0E08  084B               	movf	applianceControl@integerSpeed^(0+128),w
  4584  0E09  0020               	movlb	0	; select bank0
  4585  0E0A  00A8               	movwf	___awtoft@c
  4586  0E0B  3188  2072  318D   	fcall	___awtoft
  4587  0E0E  0020               	movlb	0	; select bank0
  4588  0E0F  0828               	movf	?___awtoft,w
  4589  0E10  00B1               	movwf	___ftdiv@f1
  4590  0E11  0829               	movf	?___awtoft+1,w
  4591  0E12  00B2               	movwf	___ftdiv@f1+1
  4592  0E13  082A               	movf	?___awtoft+2,w
  4593  0E14  00B3               	movwf	___ftdiv@f1+2
  4594  0E15  318C  248F  318D   	fcall	___ftdiv
  4595  0E18  0020               	movlb	0	; select bank0
  4596  0E19  082E               	movf	?___ftdiv,w
  4597  0E1A  0021               	movlb	1	; select bank1
  4598  0E1B  00C8               	movwf	applianceControl@ConvertIntToTimeInMilisec^(0+128)
  4599  0E1C  0020               	movlb	0	; select bank0
  4600  0E1D  082F               	movf	?___ftdiv+1,w
  4601  0E1E  0021               	movlb	1	; select bank1
  4602  0E1F  00C9               	movwf	(applianceControl@ConvertIntToTimeInMilisec+1)^(0+128)
  4603  0E20  0020               	movlb	0	; select bank0
  4604  0E21  0830               	movf	?___ftdiv+2,w
  4605  0E22  0021               	movlb	1	; select bank1
  4606  0E23  00CA               	movwf	(applianceControl@ConvertIntToTimeInMilisec+2)^(0+128)
  4607                           
  4608                           ;applicationcontrol.h: 46: ConvertIntToTimeInMilisec = (ConvertIntToTimeInMilisec*1000);
  4609  0E24  3000               	movlw	0
  4610  0E25  0020               	movlb	0	; select bank0
  4611  0E26  00A8               	movwf	___ftmul@f1
  4612  0E27  307A               	movlw	122
  4613  0E28  00A9               	movwf	___ftmul@f1+1
  4614  0E29  3044               	movlw	68
  4615  0E2A  00AA               	movwf	___ftmul@f1+2
  4616  0E2B  0021               	movlb	1	; select bank1
  4617  0E2C  0848               	movf	applianceControl@ConvertIntToTimeInMilisec^(0+128),w
  4618  0E2D  0020               	movlb	0	; select bank0
  4619  0E2E  00AB               	movwf	___ftmul@f2
  4620  0E2F  0021               	movlb	1	; select bank1
  4621  0E30  0849               	movf	(applianceControl@ConvertIntToTimeInMilisec+1)^(0+128),w
  4622  0E31  0020               	movlb	0	; select bank0
  4623  0E32  00AC               	movwf	___ftmul@f2+1
  4624  0E33  0021               	movlb	1	; select bank1
  4625  0E34  084A               	movf	(applianceControl@ConvertIntToTimeInMilisec+2)^(0+128),w
  4626  0E35  0020               	movlb	0	; select bank0
  4627  0E36  00AD               	movwf	___ftmul@f2+2
  4628  0E37  3186  26DF  318D   	fcall	___ftmul
  4629  0E3A  0020               	movlb	0	; select bank0
  4630  0E3B  0828               	movf	?___ftmul,w
  4631  0E3C  0021               	movlb	1	; select bank1
  4632  0E3D  00C8               	movwf	applianceControl@ConvertIntToTimeInMilisec^(0+128)
  4633  0E3E  0020               	movlb	0	; select bank0
  4634  0E3F  0829               	movf	?___ftmul+1,w
  4635  0E40  0021               	movlb	1	; select bank1
  4636  0E41  00C9               	movwf	(applianceControl@ConvertIntToTimeInMilisec+1)^(0+128)
  4637  0E42  0020               	movlb	0	; select bank0
  4638  0E43  082A               	movf	?___ftmul+2,w
  4639  0E44  0021               	movlb	1	; select bank1
  4640  0E45  00CA               	movwf	(applianceControl@ConvertIntToTimeInMilisec+2)^(0+128)
  4641                           
  4642                           ;applicationcontrol.h: 47: Pulse = (ConvertIntToTimeInMilisec/clockPerCycle);
  4643  0E46  0848               	movf	applianceControl@ConvertIntToTimeInMilisec^(0+128),w
  4644  0E47  0020               	movlb	0	; select bank0
  4645  0E48  00B1               	movwf	___ftdiv@f1
  4646  0E49  0021               	movlb	1	; select bank1
  4647  0E4A  0849               	movf	(applianceControl@ConvertIntToTimeInMilisec+1)^(0+128),w
  4648  0E4B  0020               	movlb	0	; select bank0
  4649  0E4C  00B2               	movwf	___ftdiv@f1+1
  4650  0E4D  0021               	movlb	1	; select bank1
  4651  0E4E  084A               	movf	(applianceControl@ConvertIntToTimeInMilisec+2)^(0+128),w
  4652  0E4F  0020               	movlb	0	; select bank0
  4653  0E50  00B3               	movwf	___ftdiv@f1+2
  4654  0E51  0021               	movlb	1	; select bank1
  4655  0E52  0834               	movf	applianceControl@clockPerCycle^(0+128),w
  4656  0E53  0020               	movlb	0	; select bank0
  4657  0E54  00AE               	movwf	___ftdiv@f2
  4658  0E55  0021               	movlb	1	; select bank1
  4659  0E56  0835               	movf	(applianceControl@clockPerCycle+1)^(0+128),w
  4660  0E57  0020               	movlb	0	; select bank0
  4661  0E58  00AF               	movwf	___ftdiv@f2+1
  4662  0E59  0021               	movlb	1	; select bank1
  4663  0E5A  0836               	movf	(applianceControl@clockPerCycle+2)^(0+128),w
  4664  0E5B  0020               	movlb	0	; select bank0
  4665  0E5C  00B0               	movwf	___ftdiv@f2+2
  4666  0E5D  318C  248F  318D   	fcall	___ftdiv
  4667  0E60  0020               	movlb	0	; select bank0
  4668  0E61  082E               	movf	?___ftdiv,w
  4669  0E62  00BE               	movwf	___fttol@f1
  4670  0E63  082F               	movf	?___ftdiv+1,w
  4671  0E64  00BF               	movwf	___fttol@f1+1
  4672  0E65  0830               	movf	?___ftdiv+2,w
  4673  0E66  00C0               	movwf	___fttol@f1+2
  4674  0E67  318C  2408  318D   	fcall	___fttol
  4675  0E6A  0020               	movlb	0	; select bank0
  4676  0E6B  0841               	movf	?___fttol+3,w
  4677  0E6C  0021               	movlb	1	; select bank1
  4678  0E6D  00BA               	movwf	(applianceControl@Pulse+3)^(0+128)
  4679  0E6E  0020               	movlb	0	; select bank0
  4680  0E6F  0840               	movf	?___fttol+2,w
  4681  0E70  0021               	movlb	1	; select bank1
  4682  0E71  00B9               	movwf	(applianceControl@Pulse+2)^(0+128)
  4683  0E72  0020               	movlb	0	; select bank0
  4684  0E73  083F               	movf	?___fttol+1,w
  4685  0E74  0021               	movlb	1	; select bank1
  4686  0E75  00B8               	movwf	(applianceControl@Pulse+1)^(0+128)
  4687  0E76  0020               	movlb	0	; select bank0
  4688  0E77  083E               	movf	?___fttol,w
  4689  0E78  0021               	movlb	1	; select bank1
  4690  0E79  00B7               	movwf	applianceControl@Pulse^(0+128)
  4691                           
  4692                           ;applicationcontrol.h: 48: NeedPulse = CompleteClock - Pulse;
  4693  0E7A  082D               	movf	applianceControl@CompleteClock^(0+128),w
  4694  0E7B  0020               	movlb	0	; select bank0
  4695  0E7C  00D2               	movwf	??_applianceControl
  4696  0E7D  0021               	movlb	1	; select bank1
  4697  0E7E  082E               	movf	(applianceControl@CompleteClock+1)^(0+128),w
  4698  0E7F  0020               	movlb	0	; select bank0
  4699  0E80  00D3               	movwf	??_applianceControl+1
  4700  0E81  0021               	movlb	1	; select bank1
  4701  0E82  082F               	movf	(applianceControl@CompleteClock+2)^(0+128),w
  4702  0E83  0020               	movlb	0	; select bank0
  4703  0E84  00D4               	movwf	??_applianceControl+2
  4704  0E85  0021               	movlb	1	; select bank1
  4705  0E86  0830               	movf	(applianceControl@CompleteClock+3)^(0+128),w
  4706  0E87  0020               	movlb	0	; select bank0
  4707  0E88  00D5               	movwf	??_applianceControl+3
  4708  0E89  0021               	movlb	1	; select bank1
  4709  0E8A  0937               	comf	applianceControl@Pulse^(0+128),w
  4710  0E8B  0020               	movlb	0	; select bank0
  4711  0E8C  00D6               	movwf	??_applianceControl+4
  4712  0E8D  0021               	movlb	1	; select bank1
  4713  0E8E  0938               	comf	(applianceControl@Pulse+1)^(0+128),w
  4714  0E8F  0020               	movlb	0	; select bank0
  4715  0E90  00D7               	movwf	??_applianceControl+5
  4716  0E91  0021               	movlb	1	; select bank1
  4717  0E92  0939               	comf	(applianceControl@Pulse+2)^(0+128),w
  4718  0E93  0020               	movlb	0	; select bank0
  4719  0E94  00D8               	movwf	??_applianceControl+6
  4720  0E95  0021               	movlb	1	; select bank1
  4721  0E96  093A               	comf	(applianceControl@Pulse+3)^(0+128),w
  4722  0E97  0020               	movlb	0	; select bank0
  4723  0E98  00D9               	movwf	??_applianceControl+7
  4724  0E99  0AD6               	incf	??_applianceControl+4,f
  4725  0E9A  1903               	skipnz
  4726  0E9B  0AD7               	incf	??_applianceControl+5,f
  4727  0E9C  1903               	skipnz
  4728  0E9D  0AD8               	incf	??_applianceControl+6,f
  4729  0E9E  1903               	skipnz
  4730  0E9F  0AD9               	incf	??_applianceControl+7,f
  4731  0EA0  0856               	movf	??_applianceControl+4,w
  4732  0EA1  07D2               	addwf	??_applianceControl,f
  4733  0EA2  0857               	movf	??_applianceControl+5,w
  4734  0EA3  3DD3               	addwfc	??_applianceControl+1,f
  4735  0EA4  0858               	movf	??_applianceControl+6,w
  4736  0EA5  3DD4               	addwfc	??_applianceControl+2,f
  4737  0EA6  0859               	movf	??_applianceControl+7,w
  4738  0EA7  3DD5               	addwfc	??_applianceControl+3,f
  4739  0EA8  0855               	movf	??_applianceControl+3,w
  4740  0EA9  0021               	movlb	1	; select bank1
  4741  0EAA  00BE               	movwf	(applianceControl@NeedPulse+3)^(0+128)
  4742  0EAB  0020               	movlb	0	; select bank0
  4743  0EAC  0854               	movf	??_applianceControl+2,w
  4744  0EAD  0021               	movlb	1	; select bank1
  4745  0EAE  00BD               	movwf	(applianceControl@NeedPulse+2)^(0+128)
  4746  0EAF  0020               	movlb	0	; select bank0
  4747  0EB0  0853               	movf	??_applianceControl+1,w
  4748  0EB1  0021               	movlb	1	; select bank1
  4749  0EB2  00BC               	movwf	(applianceControl@NeedPulse+1)^(0+128)
  4750  0EB3  0020               	movlb	0	; select bank0
  4751  0EB4  0852               	movf	??_applianceControl,w
  4752  0EB5  0021               	movlb	1	; select bank1
  4753  0EB6  00BB               	movwf	applianceControl@NeedPulse^(0+128)
  4754                           
  4755                           ;applicationcontrol.h: 49: sprintf(HexlevelBuffer,"%X",NeedPulse);
  4756  0EB7  3033               	movlw	low (STR_1| (0+32768))
  4757  0EB8  0020               	movlb	0	; select bank0
  4758  0EB9  00B6               	movwf	sprintf@f
  4759  0EBA  3098               	movlw	high (STR_1| (0+32768))
  4760  0EBB  00B7               	movwf	sprintf@f+1
  4761  0EBC  0021               	movlb	1	; select bank1
  4762  0EBD  083E               	movf	(applianceControl@NeedPulse+3)^(0+128),w
  4763  0EBE  0020               	movlb	0	; select bank0
  4764  0EBF  00BB               	movwf	?_sprintf+5
  4765  0EC0  0021               	movlb	1	; select bank1
  4766  0EC1  083D               	movf	(applianceControl@NeedPulse+2)^(0+128),w
  4767  0EC2  0020               	movlb	0	; select bank0
  4768  0EC3  00BA               	movwf	?_sprintf+4
  4769  0EC4  0021               	movlb	1	; select bank1
  4770  0EC5  083C               	movf	(applianceControl@NeedPulse+1)^(0+128),w
  4771  0EC6  0020               	movlb	0	; select bank0
  4772  0EC7  00B9               	movwf	?_sprintf+3
  4773  0EC8  0021               	movlb	1	; select bank1
  4774  0EC9  083B               	movf	applianceControl@NeedPulse^(0+128),w
  4775  0ECA  0020               	movlb	0	; select bank0
  4776  0ECB  00B8               	movwf	?_sprintf+2
  4777  0ECC  30A8               	movlw	(low (applianceControl@HexlevelBuffer| 0))& (0+255)
  4778  0ECD  3188  2016  318D   	fcall	_sprintf
  4779                           
  4780                           ;applicationcontrol.h: 50: strncpy(strH,HexlevelBuffer,2);
  4781  0ED0  30A8               	movlw	(low (applianceControl@HexlevelBuffer| 0))& (0+255)
  4782  0ED1  0020               	movlb	0	; select bank0
  4783  0ED2  00D2               	movwf	??_applianceControl
  4784  0ED3  0852               	movf	??_applianceControl,w
  4785  0ED4  00A0               	movwf	strncpy@from
  4786  0ED5  3002               	movlw	2
  4787  0ED6  00A1               	movwf	strncpy@size
  4788  0ED7  3000               	movlw	0
  4789  0ED8  00A2               	movwf	strncpy@size+1
  4790  0ED9  30BF               	movlw	(low (applianceControl@strH| 0))& (0+255)
  4791  0EDA  3189  2111  318D   	fcall	_strncpy
  4792                           
  4793                           ;applicationcontrol.h: 51: strH[2]='\0';
  4794  0EDD  0021               	movlb	1	; select bank1
  4795  0EDE  01C1               	clrf	(applianceControl@strH^(0+128)+2)
  4796                           
  4797                           ;applicationcontrol.h: 53: printf("\n");
  4798  0EDF  3036               	movlw	low (STR_2| (0+32768))
  4799  0EE0  0020               	movlb	0	; select bank0
  4800  0EE1  00B6               	movwf	printf@f
  4801  0EE2  3098               	movlw	high (STR_2| (0+32768))
  4802  0EE3  00B7               	movwf	printf@f+1
  4803  0EE4  3188  2000  318D   	fcall	_printf
  4804                           
  4805                           ;applicationcontrol.h: 54: strncpy(strL,HexlevelBuffer+2,2);
  4806  0EE7  30AA               	movlw	(low ((applianceControl@HexlevelBuffer| 0+2)))& (0+255)
  4807  0EE8  0020               	movlb	0	; select bank0
  4808  0EE9  00D2               	movwf	??_applianceControl
  4809  0EEA  0852               	movf	??_applianceControl,w
  4810  0EEB  00A0               	movwf	strncpy@from
  4811  0EEC  3002               	movlw	2
  4812  0EED  00A1               	movwf	strncpy@size
  4813  0EEE  3000               	movlw	0
  4814  0EEF  00A2               	movwf	strncpy@size+1
  4815  0EF0  30C2               	movlw	(low (applianceControl@strL| 0))& (0+255)
  4816  0EF1  3189  2111  318D   	fcall	_strncpy
  4817                           
  4818                           ;applicationcontrol.h: 55: strL[2]='\0';
  4819  0EF4  0021               	movlb	1	; select bank1
  4820  0EF5  01C4               	clrf	(applianceControl@strL^(0+128)+2)
  4821                           
  4822                           ;applicationcontrol.h: 58: parentalLockBuffer[integerSwitchNumber] = charParentalControl
      +                          ;
  4823  0EF6  0020               	movlb	0	; select bank0
  4824  0EF7  0850               	movf	applianceControl@charParentalControl,w
  4825  0EF8  00D2               	movwf	??_applianceControl
  4826  0EF9  0021               	movlb	1	; select bank1
  4827  0EFA  084F               	movf	applianceControl@integerSwitchNumber^(0+128),w
  4828  0EFB  3E4E               	addlw	(low (_parentalLockBuffer| (0+512)))& (0+255)
  4829  0EFC  0086               	movwf	6
  4830  0EFD  3002               	movlw	2	; select bank4/5
  4831  0EFE  0087               	movwf	7
  4832  0EFF  0020               	movlb	0	; select bank0
  4833  0F00  0852               	movf	??_applianceControl,w
  4834  0F01  0081               	movwf	1
  4835                           
  4836                           ;applicationcontrol.h: 59: copy_parentalLockBuffer[integerSwitchNumber]=parentalLockBuff
      +                          er[integerSwitchNumber];
  4837  0F02  0021               	movlb	1	; select bank1
  4838  0F03  084F               	movf	applianceControl@integerSwitchNumber^(0+128),w
  4839  0F04  3E4E               	addlw	(low (_parentalLockBuffer| (0+512)))& (0+255)
  4840  0F05  0086               	movwf	6
  4841  0F06  3002               	movlw	2	; select bank4/5
  4842  0F07  0087               	movwf	7
  4843  0F08  0801               	movf	1,w
  4844  0F09  0020               	movlb	0	; select bank0
  4845  0F0A  00D2               	movwf	??_applianceControl
  4846  0F0B  0021               	movlb	1	; select bank1
  4847  0F0C  084F               	movf	applianceControl@integerSwitchNumber^(0+128),w
  4848  0F0D  3EA0               	addlw	(low (_copy_parentalLockBuffer| (0+256)))& (0+255)
  4849  0F0E  0086               	movwf	6
  4850  0F0F  3001               	movlw	1	; select bank3/4
  4851  0F10  0087               	movwf	7
  4852  0F11  0020               	movlb	0	; select bank0
  4853  0F12  0852               	movf	??_applianceControl,w
  4854  0F13  0081               	movwf	1
  4855                           
  4856                           ;applicationcontrol.h: 62: currentStateBufferPositions = ((1+4*(integerSwitchNumber))-5)
      +                          ;
  4857  0F14  0021               	movlb	1	; select bank1
  4858  0F15  0850               	movf	(applianceControl@integerSwitchNumber+1)^(0+128),w
  4859  0F16  0020               	movlb	0	; select bank0
  4860  0F17  00D3               	movwf	??_applianceControl+1
  4861  0F18  0021               	movlb	1	; select bank1
  4862  0F19  084F               	movf	applianceControl@integerSwitchNumber^(0+128),w
  4863  0F1A  0020               	movlb	0	; select bank0
  4864  0F1B  00D2               	movwf	??_applianceControl
  4865  0F1C  35D2               	lslf	??_applianceControl,f
  4866  0F1D  0DD3               	rlf	??_applianceControl+1,f
  4867  0F1E  35D2               	lslf	??_applianceControl,f
  4868  0F1F  0DD3               	rlf	??_applianceControl+1,f
  4869  0F20  0852               	movf	??_applianceControl,w
  4870  0F21  3EFC               	addlw	252
  4871  0F22  0021               	movlb	1	; select bank1
  4872  0F23  00D1               	movwf	applianceControl@currentStateBufferPositions^(0+128)
  4873  0F24  30FF               	movlw	255
  4874  0F25  0020               	movlb	0	; select bank0
  4875  0F26  3D53               	addwfc	??_applianceControl+1,w
  4876  0F27  0021               	movlb	1	; select bank1
  4877  0F28  00D2               	movwf	(applianceControl@currentStateBufferPositions+1)^(0+128)
  4878                           
  4879                           ;applicationcontrol.h: 63: currentStateBuffer[currentStateBufferPositions++] = 'G';
  4880  0F29  3047               	movlw	71
  4881  0F2A  0020               	movlb	0	; select bank0
  4882  0F2B  00D2               	movwf	??_applianceControl
  4883  0F2C  0021               	movlb	1	; select bank1
  4884  0F2D  0851               	movf	applianceControl@currentStateBufferPositions^(0+128),w
  4885  0F2E  3EA0               	addlw	(low (_currentStateBuffer| (0+512)))& (0+255)
  4886  0F2F  0086               	movwf	6
  4887  0F30  3002               	movlw	2	; select bank5/6
  4888  0F31  0087               	movwf	7
  4889  0F32  0020               	movlb	0	; select bank0
  4890  0F33  0852               	movf	??_applianceControl,w
  4891  0F34  0081               	movwf	1
  4892  0F35  3001               	movlw	1
  4893  0F36  0021               	movlb	1	; select bank1
  4894  0F37  07D1               	addwf	applianceControl@currentStateBufferPositions^(0+128),f
  4895  0F38  3000               	movlw	0
  4896  0F39  3DD2               	addwfc	(applianceControl@currentStateBufferPositions+1)^(0+128),f
  4897                           
  4898                           ;applicationcontrol.h: 64: currentStateBuffer[currentStateBufferPositions++] = charSwitc
      +                          hSTATE;
  4899  0F3A  0020               	movlb	0	; select bank0
  4900  0F3B  084D               	movf	applianceControl@charSwitchSTATE,w
  4901  0F3C  00D2               	movwf	??_applianceControl
  4902  0F3D  0021               	movlb	1	; select bank1
  4903  0F3E  0851               	movf	applianceControl@currentStateBufferPositions^(0+128),w
  4904  0F3F  3EA0               	addlw	(low (_currentStateBuffer| (0+512)))& (0+255)
  4905  0F40  0086               	movwf	6
  4906  0F41  3002               	movlw	2	; select bank5/6
  4907  0F42  0087               	movwf	7
  4908  0F43  0020               	movlb	0	; select bank0
  4909  0F44  0852               	movf	??_applianceControl,w
  4910  0F45  0081               	movwf	1
  4911  0F46  3001               	movlw	1
  4912  0F47  0021               	movlb	1	; select bank1
  4913  0F48  07D1               	addwf	applianceControl@currentStateBufferPositions^(0+128),f
  4914  0F49  3000               	movlw	0
  4915  0F4A  3DD2               	addwfc	(applianceControl@currentStateBufferPositions+1)^(0+128),f
  4916                           
  4917                           ;applicationcontrol.h: 65: currentStateBuffer[currentStateBufferPositions++] = charSwitc
      +                          hMSB;
  4918  0F4B  0845               	movf	applianceControl@charSwitchMSB^(0+128),w
  4919  0F4C  0020               	movlb	0	; select bank0
  4920  0F4D  00D2               	movwf	??_applianceControl
  4921  0F4E  0021               	movlb	1	; select bank1
  4922  0F4F  0851               	movf	applianceControl@currentStateBufferPositions^(0+128),w
  4923  0F50  3EA0               	addlw	(low (_currentStateBuffer| (0+512)))& (0+255)
  4924  0F51  0086               	movwf	6
  4925  0F52  3002               	movlw	2	; select bank5/6
  4926  0F53  0087               	movwf	7
  4927  0F54  0020               	movlb	0	; select bank0
  4928  0F55  0852               	movf	??_applianceControl,w
  4929  0F56  0081               	movwf	1
  4930  0F57  3001               	movlw	1
  4931  0F58  0021               	movlb	1	; select bank1
  4932  0F59  07D1               	addwf	applianceControl@currentStateBufferPositions^(0+128),f
  4933  0F5A  3000               	movlw	0
  4934  0F5B  3DD2               	addwfc	(applianceControl@currentStateBufferPositions+1)^(0+128),f
  4935                           
  4936                           ;applicationcontrol.h: 66: currentStateBuffer[currentStateBufferPositions] = charSwitchL
      +                          SB;
  4937  0F5C  0020               	movlb	0	; select bank0
  4938  0F5D  084C               	movf	applianceControl@charSwitchLSB,w
  4939  0F5E  00D2               	movwf	??_applianceControl
  4940  0F5F  0021               	movlb	1	; select bank1
  4941  0F60  0851               	movf	applianceControl@currentStateBufferPositions^(0+128),w
  4942  0F61  3EA0               	addlw	(low (_currentStateBuffer| (0+512)))& (0+255)
  4943  0F62  0086               	movwf	6
  4944  0F63  3002               	movlw	2	; select bank5/6
  4945  0F64  0087               	movwf	7
  4946  0F65  0020               	movlb	0	; select bank0
  4947  0F66  0852               	movf	??_applianceControl,w
  4948  0F67  0081               	movwf	1
  4949                           
  4950                           ;applicationcontrol.h: 68: currentStateBufferPositions-=3;
  4951  0F68  30FD               	movlw	253
  4952  0F69  0021               	movlb	1	; select bank1
  4953  0F6A  07D1               	addwf	applianceControl@currentStateBufferPositions^(0+128),f
  4954  0F6B  30FF               	movlw	255
  4955  0F6C  3DD2               	addwfc	(applianceControl@currentStateBufferPositions+1)^(0+128),f
  4956                           
  4957                           ;applicationcontrol.h: 69: if(charFinalFrameState=='1')
  4958  0F6D  3031               	movlw	49
  4959  0F6E  0020               	movlb	0	; select bank0
  4960  0F6F  0651               	xorwf	applianceControl@charFinalFrameState,w
  4961  0F70  1D03               	btfss	3,2
  4962  0F71  2FEC               	goto	l6807
  4963                           
  4964                           ;applicationcontrol.h: 70: {
  4965                           ;applicationcontrol.h: 71: sendAcknowledgment(currentStateBuffer+currentStateBufferPosit
      +                          ions);
  4966  0F72  0021               	movlb	1	; select bank1
  4967  0F73  0851               	movf	applianceControl@currentStateBufferPositions^(0+128),w
  4968  0F74  3EA0               	addlw	(low (_currentStateBuffer| (0+512)))& (0+255)
  4969  0F75  3188  2052  318D   	fcall	_sendAcknowledgment
  4970                           
  4971                           ;applicationcontrol.h: 72: }
  4972                           ;applicationcontrol.h: 74: switch(integerSwitchNumber){
  4973  0F78  2FEC               	goto	l6807
  4974  0F79                     l6781:	
  4975                           ;applicationcontrol.h: 75: case 1:
  4976                           
  4977                           
  4978                           ;applicationcontrol.h: 76: {
  4979                           ;applicationcontrol.h: 77: PORTEbits.RE0 = integerSwitchState;
  4980  0F79  0021               	movlb	1	; select bank1
  4981  0F7A  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  4982  0F7B  0020               	movlb	0	; select bank0
  4983  0F7C  1C03               	skipc
  4984  0F7D  1010               	bcf	16,0	;volatile
  4985  0F7E  1803               	skipnc
  4986  0F7F  1410               	bsf	16,0	;volatile
  4987                           
  4988                           ;applicationcontrol.h: 78: }break;
  4989  0F80  0008               	return
  4990  0F81                     l6783:	
  4991                           ;applicationcontrol.h: 80: case 2:
  4992                           
  4993                           
  4994                           ;applicationcontrol.h: 81: {
  4995                           ;applicationcontrol.h: 82: PORTEbits.RE1 = integerSwitchState;
  4996  0F81  0021               	movlb	1	; select bank1
  4997  0F82  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  4998  0F83  0020               	movlb	0	; select bank0
  4999  0F84  1C03               	skipc
  5000  0F85  1090               	bcf	16,1	;volatile
  5001  0F86  1803               	skipnc
  5002  0F87  1490               	bsf	16,1	;volatile
  5003                           
  5004                           ;applicationcontrol.h: 84: } break;
  5005  0F88  0008               	return
  5006  0F89                     l6785:	
  5007                           ;applicationcontrol.h: 85: case 3:
  5008                           
  5009                           
  5010                           ;applicationcontrol.h: 86: {
  5011                           ;applicationcontrol.h: 87: PORTGbits.RG0 = integerSwitchState;
  5012  0F89  0021               	movlb	1	; select bank1
  5013  0F8A  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  5014  0F8B  0025               	movlb	5	; select bank5
  5015  0F8C  1C03               	skipc
  5016  0F8D  100D               	bcf	13,0	;volatile
  5017  0F8E  1803               	skipnc
  5018  0F8F  140D               	bsf	13,0	;volatile
  5019                           
  5020                           ;applicationcontrol.h: 89: } break;
  5021  0F90  0008               	return
  5022  0F91                     l6787:	
  5023                           ;applicationcontrol.h: 91: case 4:
  5024                           
  5025                           
  5026                           ;applicationcontrol.h: 92: {
  5027                           ;applicationcontrol.h: 93: PORTGbits.RG3 = integerSwitchState;
  5028  0F91  0021               	movlb	1	; select bank1
  5029  0F92  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  5030  0F93  0025               	movlb	5	; select bank5
  5031  0F94  1C03               	skipc
  5032  0F95  118D               	bcf	13,3	;volatile
  5033  0F96  1803               	skipnc
  5034  0F97  158D               	bsf	13,3	;volatile
  5035                           
  5036                           ;applicationcontrol.h: 94: }break;
  5037  0F98  0008               	return
  5038  0F99                     l6789:	
  5039                           ;applicationcontrol.h: 95: case 5:
  5040                           
  5041                           
  5042                           ;applicationcontrol.h: 96: {
  5043                           ;applicationcontrol.h: 97: PORTGbits.RG4 = integerSwitchState;
  5044  0F99  0021               	movlb	1	; select bank1
  5045  0F9A  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  5046  0F9B  0025               	movlb	5	; select bank5
  5047  0F9C  1C03               	skipc
  5048  0F9D  120D               	bcf	13,4	;volatile
  5049  0F9E  1803               	skipnc
  5050  0F9F  160D               	bsf	13,4	;volatile
  5051                           
  5052                           ;applicationcontrol.h: 98: }break;
  5053  0FA0  0008               	return
  5054  0FA1                     l6791:	
  5055                           ;applicationcontrol.h: 99: case 6:
  5056                           
  5057                           
  5058                           ;applicationcontrol.h: 100: {
  5059                           ;applicationcontrol.h: 101: PORTFbits.RF6 = integerSwitchState;
  5060  0FA1  0021               	movlb	1	; select bank1
  5061  0FA2  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  5062  0FA3  0025               	movlb	5	; select bank5
  5063  0FA4  1C03               	skipc
  5064  0FA5  130C               	bcf	12,6	;volatile
  5065  0FA6  1803               	skipnc
  5066  0FA7  170C               	bsf	12,6	;volatile
  5067                           
  5068                           ;applicationcontrol.h: 102: }break;
  5069  0FA8  0008               	return
  5070  0FA9                     l6793:	
  5071                           ;applicationcontrol.h: 104: case 7:
  5072                           
  5073                           
  5074                           ;applicationcontrol.h: 105: {
  5075                           ;applicationcontrol.h: 106: PORTFbits.RF5 = integerSwitchState;
  5076  0FA9  0021               	movlb	1	; select bank1
  5077  0FAA  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  5078  0FAB  0025               	movlb	5	; select bank5
  5079  0FAC  1C03               	skipc
  5080  0FAD  128C               	bcf	12,5	;volatile
  5081  0FAE  1803               	skipnc
  5082  0FAF  168C               	bsf	12,5	;volatile
  5083                           
  5084                           ;applicationcontrol.h: 107: }break;
  5085  0FB0  0008               	return
  5086  0FB1                     l6795:	
  5087                           ;applicationcontrol.h: 109: case 8:
  5088                           
  5089                           
  5090                           ;applicationcontrol.h: 110: {
  5091                           ;applicationcontrol.h: 111: PORTFbits.RF4 = integerSwitchState;
  5092  0FB1  0021               	movlb	1	; select bank1
  5093  0FB2  0C53               	rrf	applianceControl@integerSwitchState^(0+128),w
  5094  0FB3  0025               	movlb	5	; select bank5
  5095  0FB4  1C03               	skipc
  5096  0FB5  120C               	bcf	12,4	;volatile
  5097  0FB6  1803               	skipnc
  5098  0FB7  160C               	bsf	12,4	;volatile
  5099                           
  5100                           ;applicationcontrol.h: 112: }break;
  5101  0FB8  0008               	return
  5102  0FB9                     l6797:	
  5103                           ;applicationcontrol.h: 113: case 9:{
  5104                           
  5105                           
  5106                           ;applicationcontrol.h: 114: start_PWM_Generation_For_DIMMER = integerSwitchState;
  5107  0FB9  0021               	movlb	1	; select bank1
  5108  0FBA  0854               	movf	(applianceControl@integerSwitchState+1)^(0+128),w
  5109  0FBB  0022               	movlb	2	; select bank2
  5110  0FBC  00D5               	movwf	(_start_PWM_Generation_For_DIMMER+1)^(0+256)
  5111  0FBD  0021               	movlb	1	; select bank1
  5112  0FBE  0853               	movf	applianceControl@integerSwitchState^(0+128),w
  5113  0FBF  0022               	movlb	2	; select bank2
  5114  0FC0  00D4               	movwf	_start_PWM_Generation_For_DIMMER^(0+256)
  5115                           
  5116                           ;applicationcontrol.h: 115: switch(integerSwitchState){
  5117  0FC1  2FDD               	goto	l6803
  5118  0FC2                     l434:	
  5119                           ;applicationcontrol.h: 116: case 0:
  5120                           
  5121                           
  5122                           ;applicationcontrol.h: 117: PORTFbits.RF3=1;
  5123  0FC2  0025               	movlb	5	; select bank5
  5124  0FC3  158C               	bsf	12,3	;volatile
  5125                           
  5126                           ;applicationcontrol.h: 118: break;
  5127  0FC4  0008               	return
  5128  0FC5                     l6799:	
  5129                           ;applicationcontrol.h: 119: case 1:
  5130                           
  5131                           
  5132                           ;applicationcontrol.h: 120: Timer1H = hexadecimalToDecimal(strH);
  5133  0FC5  30BF               	movlw	(low (applianceControl@strH| 0))& (0+255)
  5134  0FC6  318B  2386  318D   	fcall	_hexadecimalToDecimal
  5135  0FC9  0020               	movlb	0	; select bank0
  5136  0FCA  0827               	movf	?_hexadecimalToDecimal+1,w
  5137  0FCB  0022               	movlb	2	; select bank2
  5138  0FCC  00CD               	movwf	(_Timer1H+1)^(0+256)
  5139  0FCD  0020               	movlb	0	; select bank0
  5140  0FCE  0826               	movf	?_hexadecimalToDecimal,w
  5141  0FCF  0022               	movlb	2	; select bank2
  5142  0FD0  00CC               	movwf	_Timer1H^(0+256)
  5143                           
  5144                           ;applicationcontrol.h: 121: Timer1L = hexadecimalToDecimal(strL);
  5145  0FD1  30C2               	movlw	(low (applianceControl@strL| 0))& (0+255)
  5146  0FD2  318B  2386         	fcall	_hexadecimalToDecimal
  5147  0FD4  0020               	movlb	0	; select bank0
  5148  0FD5  0827               	movf	?_hexadecimalToDecimal+1,w
  5149  0FD6  0022               	movlb	2	; select bank2
  5150  0FD7  00CB               	movwf	(_Timer1L+1)^(0+256)
  5151  0FD8  0020               	movlb	0	; select bank0
  5152  0FD9  0826               	movf	?_hexadecimalToDecimal,w
  5153  0FDA  0022               	movlb	2	; select bank2
  5154  0FDB  00CA               	movwf	_Timer1L^(0+256)
  5155                           
  5156                           ;applicationcontrol.h: 125: }
  5157                           
  5158                           ;applicationcontrol.h: 124: break;
  5159                           
  5160                           ;applicationcontrol.h: 123: default:
  5161                           
  5162                           ;applicationcontrol.h: 122: break;
  5163  0FDC  0008               	return
  5164  0FDD                     l6803:	
  5165                           
  5166                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5167                           ; Switch size 1, requested type "space"
  5168                           ; Number of cases is 1, Range of values is 0 to 0
  5169                           ; switch strategies available:
  5170                           ; Name         Instructions Cycles
  5171                           ; simple_byte            4     3 (average)
  5172                           ; direct_byte            8     6 (fixed)
  5173                           ; jumptable            260     6 (fixed)
  5174                           ;	Chosen strategy is simple_byte
  5175  0FDD  0021               	movlb	1	; select bank1
  5176  0FDE  0854               	movf	(applianceControl@integerSwitchState+1)^(0+128),w
  5177  0FDF  3A00               	xorlw	0	; case 0
  5178  0FE0  1903               	skipnz
  5179  0FE1  2FE3               	goto	l7359
  5180  0FE2  2FFF               	goto	l439
  5181  0FE3                     l7359:	
  5182                           
  5183                           ; Switch size 1, requested type "space"
  5184                           ; Number of cases is 2, Range of values is 0 to 1
  5185                           ; switch strategies available:
  5186                           ; Name         Instructions Cycles
  5187                           ; simple_byte            7     4 (average)
  5188                           ; direct_byte           10     6 (fixed)
  5189                           ; jumptable            260     6 (fixed)
  5190                           ;	Chosen strategy is simple_byte
  5191  0FE3  0853               	movf	applianceControl@integerSwitchState^(0+128),w
  5192  0FE4  3A00               	xorlw	0	; case 0
  5193  0FE5  1903               	skipnz
  5194  0FE6  2FC2               	goto	l434
  5195  0FE7  3A01               	xorlw	1	; case 1
  5196  0FE8  1903               	skipnz
  5197  0FE9  2FC5               	goto	l6799
  5198  0FEA  2FFF               	goto	l439
  5199                           
  5200                           ;applicationcontrol.h: 129: }
  5201                           
  5202                           ;applicationcontrol.h: 128: break;
  5203                           
  5204                           ;applicationcontrol.h: 127: default:
  5205                           
  5206                           ;applicationcontrol.h: 126: }break;
  5207  0FEB  0008               	return
  5208  0FEC                     l6807:	
  5209                           
  5210                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5211                           ; Switch size 1, requested type "space"
  5212                           ; Number of cases is 1, Range of values is 0 to 0
  5213                           ; switch strategies available:
  5214                           ; Name         Instructions Cycles
  5215                           ; simple_byte            4     3 (average)
  5216                           ; direct_byte            8     6 (fixed)
  5217                           ; jumptable            260     6 (fixed)
  5218                           ;	Chosen strategy is simple_byte
  5219  0FEC  0021               	movlb	1	; select bank1
  5220  0FED  0850               	movf	(applianceControl@integerSwitchNumber+1)^(0+128),w
  5221  0FEE  3A00               	xorlw	0	; case 0
  5222  0FEF  1903               	skipnz
  5223  0FF0  2FF2               	goto	l7361
  5224  0FF1  2FFF               	goto	l439
  5225  0FF2                     l7361:	
  5226                           
  5227                           ; Switch size 1, requested type "space"
  5228                           ; Number of cases is 9, Range of values is 1 to 9
  5229                           ; switch strategies available:
  5230                           ; Name         Instructions Cycles
  5231                           ; direct_byte           27     9 (fixed)
  5232                           ; simple_byte           28    15 (average)
  5233                           ; jumptable            263     9 (fixed)
  5234                           ;	Chosen strategy is direct_byte
  5235  0FF2  084F               	movf	applianceControl@integerSwitchNumber^(0+128),w
  5236  0FF3  3EFF               	addlw	-1
  5237  0FF4  1C03               	skipc
  5238  0FF5  0008               	return
  5239  0FF6  0084               	movwf	4
  5240  0FF7  3009               	movlw	9
  5241  0FF8  0204               	subwf	4,w
  5242  0FF9  1803               	skipnc
  5243  0FFA  0008               	return
  5244  0FFB  3190               	movlp	high S7363
  5245  0FFC  3504               	lslf	4,w
  5246  0FFD  3E00               	addlw	low S7363
  5247  0FFE  0082               	movwf	2
  5248  0FFF                     l439:	
  5249  0FFF  0008               	return
  5250  1000                     __end_of_applianceControl:	
  5251                           
  5252                           	psect	swtext2
  5253  1000                     __pswtext2:	
  5254  1000                     S7363:	
  5255  1000  318F  2F79         	ljmp	l6781
  5256  1002  318F  2F81         	ljmp	l6783
  5257  1004  318F  2F89         	ljmp	l6785
  5258  1006  318F  2F91         	ljmp	l6787
  5259  1008  318F  2F99         	ljmp	l6789
  5260  100A  318F  2FA1         	ljmp	l6791
  5261  100C  318F  2FA9         	ljmp	l6793
  5262  100E  318F  2FB1         	ljmp	l6795
  5263  1010  318F  2FB9         	ljmp	l6797
  5264                           
  5265                           	psect	text9
  5266  0911                     __ptext9:	
  5267 ;; *************** function _strncpy *****************
  5268 ;; Defined at:
  5269 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  to              1    wreg     PTR unsigned char 
  5272 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), 
  5273 ;;  from            1    0[BANK0 ] PTR const unsigned char 
  5274 ;;		 -> applianceControl@HexlevelBuffer(5), 
  5275 ;;  size            2    1[BANK0 ] unsigned int 
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;  to              1    4[BANK0 ] PTR unsigned char 
  5278 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), 
  5279 ;;  cp              1    5[BANK0 ] PTR unsigned char 
  5280 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), 
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  1    wreg      PTR unsigned char 
  5283 ;; Registers used:
  5284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5290 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0
  5291 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  5292 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  5293 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0
  5294 ;;Total ram usage:        6 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; Hardware stack levels required when called:    2
  5297 ;; This function calls:
  5298 ;;		Nothing
  5299 ;; This function is called by:
  5300 ;;		_applianceControl
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           
  5305                           ;psect for function _strncpy
  5306  0911                     _strncpy:	
  5307                           
  5308                           ;incstack = 0
  5309                           ; Regs used in _strncpy: [wreg-fsr1h+status,2+status,0]
  5310                           ;strncpy@to stored from wreg
  5311  0911  0020               	movlb	0	; select bank0
  5312  0912  00A4               	movwf	strncpy@to
  5313  0913  0824               	movf	strncpy@to,w
  5314  0914  00A3               	movwf	??_strncpy
  5315  0915  0823               	movf	??_strncpy,w
  5316  0916  00A5               	movwf	strncpy@cp
  5317  0917                     l5067:	
  5318  0917  0821               	movf	strncpy@size,w
  5319  0918  0422               	iorwf	strncpy@size+1,w
  5320  0919  1903               	btfsc	3,2
  5321  091A  2935               	goto	l5073
  5322  091B  3001               	movlw	1
  5323  091C  02A1               	subwf	strncpy@size,f
  5324  091D  3000               	movlw	0
  5325  091E  3BA2               	subwfb	strncpy@size+1,f
  5326  091F  0825               	movf	strncpy@cp,w
  5327  0920  0086               	movwf	6
  5328  0921  0187               	clrf	7
  5329  0922  0AA5               	incf	strncpy@cp,f
  5330  0923  0820               	movf	strncpy@from,w
  5331  0924  0084               	movwf	4
  5332  0925  0185               	clrf	5
  5333  0926  0AA0               	incf	strncpy@from,f
  5334  0927  0800               	movf	0,w
  5335  0928  3FC0               	movwi [0]fsr1
  5336  0929  0889               	movf	9,f
  5337  092A  1903               	btfsc	3,2
  5338  092B  2935               	goto	l5073
  5339  092C  2917               	goto	l5067
  5340  092D                     l5069:	
  5341  092D  0825               	movf	strncpy@cp,w
  5342  092E  0086               	movwf	6
  5343  092F  0187               	clrf	7
  5344  0930  0181               	clrf	1
  5345  0931  3001               	movlw	1
  5346  0932  00A3               	movwf	??_strncpy
  5347  0933  0823               	movf	??_strncpy,w
  5348  0934  07A5               	addwf	strncpy@cp,f
  5349  0935                     l5073:	
  5350  0935  3001               	movlw	1
  5351  0936  02A1               	subwf	strncpy@size,f
  5352  0937  3000               	movlw	0
  5353  0938  3BA2               	subwfb	strncpy@size+1,f
  5354  0939  0A21               	incf	strncpy@size,w
  5355  093A  1D03               	skipz
  5356  093B  292D               	goto	l5069
  5357  093C  0A22               	incf	strncpy@size+1,w
  5358  093D  1903               	btfsc	3,2
  5359  093E  0008               	return
  5360  093F  292D               	goto	l5069
  5361  0940                     __end_of_strncpy:	
  5362                           ;	Return value of _strncpy is never used
  5363                           
  5364                           
  5365                           	psect	text10
  5366  0816                     __ptext10:	
  5367 ;; *************** function _sprintf *****************
  5368 ;; Defined at:
  5369 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprintf.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;  wh              1    wreg     PTR unsigned char 
  5372 ;;		 -> applianceControl@HexlevelBuffer(5), 
  5373 ;;  f               2   22[BANK0 ] PTR const unsigned char 
  5374 ;;		 -> STR_1(3), 
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;  wh              1   29[BANK0 ] PTR unsigned char 
  5377 ;;		 -> applianceControl@HexlevelBuffer(5), 
  5378 ;;  pb              3   31[BANK0 ] struct __prbuf
  5379 ;;  ap              1   30[BANK0 ] PTR void [1]
  5380 ;;		 -> ?_sprintf(2), ?_printf(2), 
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  2   22[BANK0 ] int 
  5383 ;; Registers used:
  5384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5390 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0
  5391 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0
  5392 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  5393 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0
  5394 ;;Total ram usage:       12 bytes
  5395 ;; Hardware stack levels used:    1
  5396 ;; Hardware stack levels required when called:    4
  5397 ;; This function calls:
  5398 ;;		__doprnt
  5399 ;; This function is called by:
  5400 ;;		_applianceControl
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404                           
  5405                           ;psect for function _sprintf
  5406  0816                     _sprintf:	
  5407                           
  5408                           ;incstack = 0
  5409                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5410                           ;sprintf@wh stored from wreg
  5411  0816  0020               	movlb	0	; select bank0
  5412  0817  00BD               	movwf	sprintf@wh
  5413  0818  083D               	movf	sprintf@wh,w
  5414  0819  00BC               	movwf	??_sprintf
  5415  081A  083C               	movf	??_sprintf,w
  5416  081B  00BF               	movwf	sprintf@pb
  5417  081C  01C0               	clrf	low ((sprintf@pb| 0+1))
  5418  081D  01C1               	clrf	(low ((sprintf@pb| 0+1))+1)
  5419  081E  3038               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  5420  081F  00BC               	movwf	??_sprintf
  5421  0820  083C               	movf	??_sprintf,w
  5422  0821  00BE               	movwf	sprintf@ap
  5423  0822  0837               	movf	sprintf@f+1,w
  5424  0823  00A9               	movwf	__doprnt@f+1
  5425  0824  0836               	movf	sprintf@f,w
  5426  0825  00A8               	movwf	__doprnt@f
  5427  0826  303E               	movlw	(low (sprintf@ap| 0))& (0+255)
  5428  0827  00BC               	movwf	??_sprintf
  5429  0828  083C               	movf	??_sprintf,w
  5430  0829  00AA               	movwf	__doprnt@ap
  5431  082A  303F               	movlw	(low (sprintf@pb| 0))& (0+255)
  5432  082B  3185  25F9         	fcall	__doprnt
  5433  082D  0020               	movlb	0	; select bank0
  5434  082E  083F               	movf	sprintf@pb,w
  5435  082F  0086               	movwf	6
  5436  0830  0187               	clrf	7
  5437  0831  0181               	clrf	1
  5438  0832  0008               	return
  5439  0833                     __end_of_sprintf:	
  5440                           ;	Return value of _sprintf is never used
  5441                           
  5442                           
  5443                           	psect	text11
  5444  0852                     __ptext11:	
  5445 ;; *************** function _sendAcknowledgment *****************
  5446 ;; Defined at:
  5447 ;;		line 1274 in file "main.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;  currentState    1    wreg     PTR unsigned char 
  5450 ;;		 -> sendFinalBufferToGAteway(46), currentStateBuffer(58), 
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;  currentState    1    3[BANK0 ] PTR unsigned char 
  5453 ;;		 -> sendFinalBufferToGAteway(46), currentStateBuffer(58), 
  5454 ;;  Tx_count        2    1[BANK0 ] int 
  5455 ;; Return value:  Size  Location     Type
  5456 ;;                  1    wreg      void 
  5457 ;; Registers used:
  5458 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 0/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  5465 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0
  5466 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  5467 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0
  5468 ;;Total ram usage:        4 bytes
  5469 ;; Hardware stack levels used:    1
  5470 ;; Hardware stack levels required when called:    2
  5471 ;; This function calls:
  5472 ;;		Nothing
  5473 ;; This function is called by:
  5474 ;;		_applianceControl
  5475 ;;		_applicationControlRGB
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           
  5480                           ;psect for function _sendAcknowledgment
  5481  0852                     _sendAcknowledgment:	
  5482                           
  5483                           ;incstack = 0
  5484                           ; Regs used in _sendAcknowledgment: [wreg+fsr1l+fsr1h+status,2+status,0]
  5485                           ;sendAcknowledgment@currentStateBuffer stored from wreg
  5486  0852  0020               	movlb	0	; select bank0
  5487  0853  00A3               	movwf	sendAcknowledgment@currentStateBuffer
  5488                           
  5489                           ;main.c: 1275: int Tx_count=0;
  5490  0854  01A1               	clrf	sendAcknowledgment@Tx_count
  5491  0855  01A2               	clrf	sendAcknowledgment@Tx_count+1
  5492  0856                     l653:	
  5493                           ;main.c: 1276: while(*currentStateBuffer != (0))
  5494                           
  5495  0856  0823               	movf	sendAcknowledgment@currentStateBuffer,w
  5496  0857  0086               	movwf	6
  5497  0858  3002               	movlw	2	; select bank4/5
  5498  0859  0087               	movwf	7
  5499  085A  0801               	movf	1,w
  5500  085B  1903               	btfsc	3,2
  5501  085C  0008               	return
  5502  085D                     l655:	
  5503                           ;main.c: 1277: {
  5504                           ;main.c: 1278: while (!TX1STAbits.TRMT);
  5505                           
  5506  085D  0023               	movlb	3	; select bank3
  5507  085E  1C9E               	btfss	30,1	;volatile
  5508  085F  285D               	goto	l655
  5509                           
  5510                           ;main.c: 1279: TX1REG = *currentStateBuffer;
  5511  0860  0020               	movlb	0	; select bank0
  5512  0861  0823               	movf	sendAcknowledgment@currentStateBuffer,w
  5513  0862  0086               	movwf	6
  5514  0863  3002               	movlw	2	; select bank4/5
  5515  0864  0087               	movwf	7
  5516  0865  0801               	movf	1,w
  5517  0866  0023               	movlb	3	; select bank3
  5518  0867  009A               	movwf	26	;volatile
  5519                           
  5520                           ;main.c: 1280: *currentStateBuffer++;
  5521  0868  3001               	movlw	1
  5522  0869  0020               	movlb	0	; select bank0
  5523  086A  00A0               	movwf	??_sendAcknowledgment
  5524  086B  0820               	movf	??_sendAcknowledgment,w
  5525  086C  07A3               	addwf	sendAcknowledgment@currentStateBuffer,f
  5526                           
  5527                           ;main.c: 1281: Tx_count++;
  5528  086D  3001               	movlw	1
  5529  086E  07A1               	addwf	sendAcknowledgment@Tx_count,f
  5530  086F  3000               	movlw	0
  5531  0870  3DA2               	addwfc	sendAcknowledgment@Tx_count+1,f
  5532  0871  2856               	goto	l653
  5533  0872                     __end_of_sendAcknowledgment:	
  5534                           
  5535                           	psect	text12
  5536  0800                     __ptext12:	
  5537 ;; *************** function _printf *****************
  5538 ;; Defined at:
  5539 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\printf.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;  f               2   22[BANK0 ] PTR const unsigned char 
  5542 ;;		 -> STR_2(2), 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  pb              3   26[BANK0 ] struct __prbuf
  5545 ;;  ap              1   25[BANK0 ] PTR void [1]
  5546 ;;		 -> ?_sprintf(2), ?_printf(2), 
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  2   22[BANK0 ] int 
  5549 ;; Registers used:
  5550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5556 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  5557 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0
  5558 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  5559 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0
  5560 ;;Total ram usage:        7 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    4
  5563 ;; This function calls:
  5564 ;;		__doprnt
  5565 ;; This function is called by:
  5566 ;;		_applianceControl
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           
  5571                           ;psect for function _printf
  5572  0800                     _printf:	
  5573                           
  5574                           ;incstack = 0
  5575                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5576  0800  0020               	movlb	0	; select bank0
  5577  0801  01BA               	clrf	printf@pb
  5578  0802  30FE               	movlw	low _putch
  5579  0803  00BB               	movwf	low ((printf@pb| 0+1))
  5580  0804  3007               	movlw	high _putch
  5581  0805  00BC               	movwf	(low ((printf@pb| 0+1))+1)
  5582  0806  3038               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5583  0807  00B8               	movwf	??_printf
  5584  0808  0838               	movf	??_printf,w
  5585  0809  00B9               	movwf	printf@ap
  5586                           
  5587                           ;	Return value of _printf is never used
  5588  080A  0837               	movf	printf@f+1,w
  5589  080B  00A9               	movwf	__doprnt@f+1
  5590  080C  0836               	movf	printf@f,w
  5591  080D  00A8               	movwf	__doprnt@f
  5592  080E  3039               	movlw	(low (printf@ap| 0))& (0+255)
  5593  080F  00B8               	movwf	??_printf
  5594  0810  0838               	movf	??_printf,w
  5595  0811  00AA               	movwf	__doprnt@ap
  5596  0812  303A               	movlw	(low (printf@pb| 0))& (0+255)
  5597  0813  3185  25F9         	fcall	__doprnt
  5598  0815  0008               	return
  5599  0816                     __end_of_printf:	
  5600                           
  5601                           	psect	text13
  5602  05F9                     __ptext13:	
  5603 ;; *************** function __doprnt *****************
  5604 ;; Defined at:
  5605 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  pb              1    wreg     PTR struct __prbuf
  5608 ;;		 -> sprintf@pb(3), printf@pb(3), 
  5609 ;;  f               2    8[BANK0 ] PTR const unsigned char 
  5610 ;;		 -> STR_2(2), STR_1(3), 
  5611 ;;  ap              1   10[BANK0 ] PTR PTR void 
  5612 ;;		 -> sprintf@ap(1), printf@ap(1), 
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;  pb              1   20[BANK0 ] PTR struct __prbuf
  5615 ;;		 -> sprintf@pb(3), printf@pb(3), 
  5616 ;;  idx             1   16[BANK0 ] unsigned char 
  5617 ;;  tmpval          4    0        struct .
  5618 ;;  val             2   17[BANK0 ] unsigned int 
  5619 ;;  cp              2    0        PTR const unsigned char 
  5620 ;;  len             2    0        unsigned int 
  5621 ;;  c               1   21[BANK0 ] char 
  5622 ;;  prec            1   19[BANK0 ] char 
  5623 ;;  flag            1   15[BANK0 ] unsigned char 
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  2    8[BANK0 ] int 
  5626 ;; Registers used:
  5627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5633 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0
  5634 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0
  5635 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0
  5636 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0
  5637 ;;Total ram usage:       14 bytes
  5638 ;; Hardware stack levels used:    1
  5639 ;; Hardware stack levels required when called:    3
  5640 ;; This function calls:
  5641 ;;		Absolute function
  5642 ;;		___lwdiv
  5643 ;;		_putch
  5644 ;; This function is called by:
  5645 ;;		_printf
  5646 ;;		_sprintf
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           
  5651                           ;psect for function __doprnt
  5652  05F9                     __doprnt:	
  5653                           
  5654                           ;incstack = 0
  5655                           ; Regs used in __doprnt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5656                           ;__doprnt@pb stored from wreg
  5657  05F9  0020               	movlb	0	; select bank0
  5658  05FA  00B4               	movwf	__doprnt@pb
  5659  05FB                     l6665:	
  5660                           ;doprnt.c: 499: signed char c;
  5661                           ;doprnt.c: 506: signed char prec;
  5662                           ;doprnt.c: 508: unsigned char flag;
  5663                           ;doprnt.c: 523: union {
  5664                           ;doprnt.c: 524: unsigned long vd;
  5665                           ;doprnt.c: 525: double integ;
  5666                           ;doprnt.c: 526: } tmpval;
  5667                           ;doprnt.c: 528: unsigned int val;
  5668                           ;doprnt.c: 529: unsigned len;
  5669                           ;doprnt.c: 530: const char * cp;
  5670                           ;doprnt.c: 536: while(c = *f++) {
  5671                           
  5672  05FB  0020               	movlb	0	; select bank0
  5673  05FC  0829               	movf	__doprnt@f+1,w
  5674  05FD  00AC               	movwf	??__doprnt+1
  5675  05FE  0828               	movf	__doprnt@f,w
  5676  05FF  00AB               	movwf	??__doprnt
  5677  0600  0AA8               	incf	__doprnt@f,f
  5678  0601  1903               	skipnz
  5679  0602  0AA9               	incf	__doprnt@f+1,f
  5680  0603  082B               	movf	??__doprnt,w
  5681  0604  0084               	movwf	4
  5682  0605  082C               	movf	??__doprnt+1,w
  5683  0606  0085               	movwf	5
  5684  0607  0800               	movf	0,w	;code access
  5685  0608  00AD               	movwf	??__doprnt+2
  5686  0609  082D               	movf	??__doprnt+2,w
  5687  060A  00B5               	movwf	__doprnt@c
  5688  060B  0835               	movf	__doprnt@c,w
  5689  060C  1903               	btfsc	3,2
  5690  060D  2EDC               	goto	l6667
  5691                           
  5692                           ;doprnt.c: 538: if(c != '%')
  5693  060E  3025               	movlw	37
  5694  060F  0635               	xorwf	__doprnt@c,w
  5695  0610  1903               	btfsc	3,2
  5696  0611  2E39               	goto	l6629
  5697                           
  5698                           ;doprnt.c: 540: {
  5699                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  5700  0612  0A34               	incf	__doprnt@pb,w
  5701  0613  0086               	movwf	6
  5702  0614  0187               	clrf	7
  5703  0615  0016               	moviw fsr1++
  5704  0616  0401               	iorwf	1,w
  5705  0617  1903               	btfsc	3,2
  5706  0618  2E26               	goto	l6625
  5707  0619  0835               	movf	__doprnt@c,w
  5708  061A  00AB               	movwf	??__doprnt
  5709  061B  082B               	movf	??__doprnt,w
  5710  061C  00A0               	movwf	putch@c
  5711  061D  0A34               	incf	__doprnt@pb,w
  5712  061E  0086               	movwf	6
  5713  061F  0187               	clrf	7
  5714  0620  3F41               	moviw [1]fsr1
  5715  0621  008A               	movwf	10
  5716  0622  3F40               	moviw [0]fsr1
  5717  0623  000A               	callw
  5718  0624  3185               	pagesel	$
  5719  0625  2DFB               	goto	l6665
  5720  0626                     l6625:	
  5721  0626  0020               	movlb	0	; select bank0
  5722  0627  0835               	movf	__doprnt@c,w
  5723  0628  00AB               	movwf	??__doprnt
  5724  0629  0834               	movf	__doprnt@pb,w
  5725  062A  0086               	movwf	6
  5726  062B  0187               	clrf	7
  5727  062C  0801               	movf	1,w
  5728  062D  0086               	movwf	6
  5729  062E  0187               	clrf	7
  5730  062F  082B               	movf	??__doprnt,w
  5731  0630  0081               	movwf	1
  5732  0631  3001               	movlw	1
  5733  0632  00AB               	movwf	??__doprnt
  5734  0633  0834               	movf	__doprnt@pb,w
  5735  0634  0086               	movwf	6
  5736  0635  0187               	clrf	7
  5737  0636  082B               	movf	??__doprnt,w
  5738  0637  0781               	addwf	1,f
  5739                           
  5740                           ;doprnt.c: 542: continue;
  5741  0638  2DFB               	goto	l6665
  5742  0639                     l6629:	
  5743                           
  5744                           ;doprnt.c: 543: }
  5745                           ;doprnt.c: 548: flag = 0;
  5746  0639  01AF               	clrf	__doprnt@flag
  5747                           
  5748                           ;doprnt.c: 822: }
  5749                           
  5750                           ;doprnt.c: 813: continue;
  5751                           
  5752                           ;doprnt.c: 802: default:
  5753                           
  5754                           ;doprnt.c: 718: case 'x':
  5755                           ;doprnt.c: 723: break;
  5756                           
  5757                           ;doprnt.c: 712: case 'X':
  5758                           
  5759                           ;doprnt.c: 638: goto alldone;
  5760                           
  5761                           ;doprnt.c: 637: case 0:
  5762                           
  5763                           ;doprnt.c: 635: switch(c = *f++) {
  5764  063A  0829               	movf	__doprnt@f+1,w
  5765  063B  00AC               	movwf	??__doprnt+1
  5766  063C  0828               	movf	__doprnt@f,w
  5767  063D  00AB               	movwf	??__doprnt
  5768  063E  0AA8               	incf	__doprnt@f,f
  5769  063F  1903               	skipnz
  5770  0640  0AA9               	incf	__doprnt@f+1,f
  5771  0641  082B               	movf	??__doprnt,w
  5772  0642  0084               	movwf	4
  5773  0643  082C               	movf	??__doprnt+1,w
  5774  0644  0085               	movwf	5
  5775  0645  0800               	movf	0,w	;code access
  5776  0646  00B5               	movwf	__doprnt@c
  5777                           
  5778                           ; Switch size 1, requested type "space"
  5779                           ; Number of cases is 3, Range of values is 0 to 120
  5780                           ; switch strategies available:
  5781                           ; Name         Instructions Cycles
  5782                           ; simple_byte           10     6 (average)
  5783                           ; direct_byte          248     6 (fixed)
  5784                           ; jumptable            260     6 (fixed)
  5785                           ;	Chosen strategy is simple_byte
  5786  0647  3A00               	xorlw	0	; case 0
  5787  0648  1903               	skipnz
  5788  0649  2EDC               	goto	l6667
  5789  064A  3A58               	xorlw	88	; case 88
  5790  064B  1903               	skipnz
  5791  064C  2E51               	goto	l6635
  5792  064D  3A20               	xorlw	32	; case 120
  5793  064E  1903               	skipnz
  5794  064F  2E51               	goto	l6635
  5795  0650  2DFB               	goto	l6665
  5796  0651                     l6635:	
  5797                           
  5798                           ;doprnt.c: 1273: {
  5799                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5800  0651  082A               	movf	__doprnt@ap,w
  5801  0652  0086               	movwf	6
  5802  0653  0187               	clrf	7
  5803  0654  0801               	movf	1,w
  5804  0655  0084               	movwf	4
  5805  0656  0185               	clrf	5
  5806  0657  3002               	movlw	2
  5807  0658  0781               	addwf	1,f
  5808  0659  3F00               	moviw [0]fsr0
  5809  065A  00B1               	movwf	__doprnt@val
  5810  065B  3F01               	moviw [1]fsr0
  5811  065C  00B2               	movwf	__doprnt@val+1
  5812                           
  5813                           ;doprnt.c: 1287: }
  5814                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  5815  065D  01B5               	clrf	__doprnt@c
  5816  065E  0AB5               	incf	__doprnt@c,f
  5817  065F  3004               	movlw	4
  5818  0660  0635               	xorwf	__doprnt@c,w
  5819  0661  1903               	btfsc	3,2
  5820  0662  2E82               	goto	l6649
  5821  0663                     l6643:	
  5822                           
  5823                           ;doprnt.c: 1317: if(val < hexpowers[c])
  5824  0663  0835               	movf	__doprnt@c,w
  5825  0664  00AB               	movwf	??__doprnt
  5826  0665  01AC               	clrf	??__doprnt+1
  5827  0666  35AB               	lslf	??__doprnt,f
  5828  0667  0DAC               	rlf	??__doprnt+1,f
  5829  0668  3000               	movlw	low (_hexpowers| (0+32768))
  5830  0669  072B               	addwf	??__doprnt,w
  5831  066A  0084               	movwf	4
  5832  066B  3098               	movlw	high (_hexpowers| (0+32768))
  5833  066C  3D2C               	addwfc	??__doprnt+1,w
  5834  066D  0085               	movwf	5
  5835  066E  3F00               	moviw [0]fsr0
  5836  066F  00AD               	movwf	??__doprnt+2
  5837  0670  3F01               	moviw [1]fsr0
  5838  0671  00AE               	movwf	??__doprnt+3
  5839  0672  082E               	movf	??__doprnt+3,w
  5840  0673  0232               	subwf	__doprnt@val+1,w
  5841  0674  1D03               	skipz
  5842  0675  2E78               	goto	u7825
  5843  0676  082D               	movf	??__doprnt+2,w
  5844  0677  0231               	subwf	__doprnt@val,w
  5845  0678                     u7825:	
  5846  0678  1C03               	btfss	3,0
  5847  0679  2E82               	goto	l6649
  5848                           
  5849                           ;doprnt.c: 1318: break;
  5850  067A  3001               	movlw	1
  5851  067B  00AB               	movwf	??__doprnt
  5852  067C  082B               	movf	??__doprnt,w
  5853  067D  07B5               	addwf	__doprnt@c,f
  5854  067E  3004               	movlw	4
  5855  067F  0635               	xorwf	__doprnt@c,w
  5856  0680  1D03               	btfss	3,2
  5857  0681  2E63               	goto	l6643
  5858  0682                     l6649:	
  5859                           
  5860                           ;doprnt.c: 1422: {
  5861                           ;doprnt.c: 1469: }
  5862                           ;doprnt.c: 1472: prec = c;
  5863  0682  0835               	movf	__doprnt@c,w
  5864  0683  00AB               	movwf	??__doprnt
  5865  0684  082B               	movf	??__doprnt,w
  5866  0685  00B3               	movwf	__doprnt@prec
  5867  0686                     l6663:	
  5868                           ;doprnt.c: 1474: while(prec--) {
  5869                           
  5870  0686  30FF               	movlw	255
  5871  0687  0020               	movlb	0	; select bank0
  5872  0688  00AB               	movwf	??__doprnt
  5873  0689  082B               	movf	??__doprnt,w
  5874  068A  07B3               	addwf	__doprnt@prec,f
  5875  068B  0A33               	incf	__doprnt@prec,w
  5876  068C  1903               	btfsc	3,2
  5877  068D  2DFB               	goto	l6665
  5878                           
  5879                           ;doprnt.c: 1478: {
  5880                           ;doprnt.c: 1499: {
  5881                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  5882  068E  0833               	movf	__doprnt@prec,w
  5883  068F  00AB               	movwf	??__doprnt
  5884  0690  01AC               	clrf	??__doprnt+1
  5885  0691  35AB               	lslf	??__doprnt,f
  5886  0692  0DAC               	rlf	??__doprnt+1,f
  5887  0693  3000               	movlw	low (_hexpowers| (0+32768))
  5888  0694  072B               	addwf	??__doprnt,w
  5889  0695  0084               	movwf	4
  5890  0696  3098               	movlw	high (_hexpowers| (0+32768))
  5891  0697  3D2C               	addwfc	??__doprnt+1,w
  5892  0698  0085               	movwf	5
  5893  0699  3F00               	moviw [0]fsr0
  5894  069A  00A0               	movwf	___lwdiv@divisor
  5895  069B  3F01               	moviw [1]fsr0
  5896  069C  00A1               	movwf	___lwdiv@divisor+1
  5897  069D  0832               	movf	__doprnt@val+1,w
  5898  069E  00A3               	movwf	___lwdiv@dividend+1
  5899  069F  0831               	movf	__doprnt@val,w
  5900  06A0  00A2               	movwf	___lwdiv@dividend
  5901  06A1  318A  2267  3185   	fcall	___lwdiv
  5902  06A4  0020               	movlb	0	; select bank0
  5903  06A5  0820               	movf	?___lwdiv,w
  5904  06A6  390F               	andlw	15
  5905  06A7  00AD               	movwf	??__doprnt+2
  5906  06A8  082D               	movf	??__doprnt+2,w
  5907  06A9  00B0               	movwf	__doprnt@idx
  5908                           
  5909                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  5910  06AA  0830               	movf	__doprnt@idx,w
  5911  06AB  3E08               	addlw	low (STR_18| (0+32768))
  5912  06AC  0084               	movwf	4
  5913  06AD  3098               	movlw	high (STR_18| (0+32768))
  5914  06AE  1803               	skipnc
  5915  06AF  3E01               	addlw	1
  5916  06B0  0085               	movwf	5
  5917  06B1  0800               	movf	0,w	;code access
  5918  06B2  00AB               	movwf	??__doprnt
  5919  06B3  082B               	movf	??__doprnt,w
  5920  06B4  00B5               	movwf	__doprnt@c
  5921                           
  5922                           ;doprnt.c: 1508: }
  5923                           ;doprnt.c: 1523: }
  5924                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
  5925  06B5  0A34               	incf	__doprnt@pb,w
  5926  06B6  0086               	movwf	6
  5927  06B7  0187               	clrf	7
  5928  06B8  0016               	moviw fsr1++
  5929  06B9  0401               	iorwf	1,w
  5930  06BA  1903               	btfsc	3,2
  5931  06BB  2EC9               	goto	l6659
  5932  06BC  0835               	movf	__doprnt@c,w
  5933  06BD  00AB               	movwf	??__doprnt
  5934  06BE  082B               	movf	??__doprnt,w
  5935  06BF  00A0               	movwf	putch@c
  5936  06C0  0A34               	incf	__doprnt@pb,w
  5937  06C1  0086               	movwf	6
  5938  06C2  0187               	clrf	7
  5939  06C3  3F41               	moviw [1]fsr1
  5940  06C4  008A               	movwf	10
  5941  06C5  3F40               	moviw [0]fsr1
  5942  06C6  000A               	callw
  5943  06C7  3185               	pagesel	$
  5944  06C8  2E86               	goto	l6663
  5945  06C9                     l6659:	
  5946  06C9  0020               	movlb	0	; select bank0
  5947  06CA  0835               	movf	__doprnt@c,w
  5948  06CB  00AB               	movwf	??__doprnt
  5949  06CC  0834               	movf	__doprnt@pb,w
  5950  06CD  0086               	movwf	6
  5951  06CE  0187               	clrf	7
  5952  06CF  0801               	movf	1,w
  5953  06D0  0086               	movwf	6
  5954  06D1  0187               	clrf	7
  5955  06D2  082B               	movf	??__doprnt,w
  5956  06D3  0081               	movwf	1
  5957  06D4  3001               	movlw	1
  5958  06D5  00AB               	movwf	??__doprnt
  5959  06D6  0834               	movf	__doprnt@pb,w
  5960  06D7  0086               	movwf	6
  5961  06D8  0187               	clrf	7
  5962  06D9  082B               	movf	??__doprnt,w
  5963  06DA  0781               	addwf	1,f
  5964  06DB  2E86               	goto	l6663
  5965  06DC                     l6667:	
  5966                           ;doprnt.c: 1525: }
  5967                           ;doprnt.c: 1533: }
  5968                           ;doprnt.c: 1535: alldone:
  5969                           
  5970                           
  5971                           ;doprnt.c: 1540: return 0;
  5972  06DC  01A8               	clrf	?__doprnt
  5973  06DD  01A9               	clrf	?__doprnt+1
  5974  06DE  0008               	return
  5975  06DF                     __end_of__doprnt:	
  5976                           
  5977                           	psect	text14
  5978  07FE                     __ptext14:	
  5979 ;; *************** function _putch *****************
  5980 ;; Defined at:
  5981 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\putch.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;  c               1    0[BANK0 ] unsigned char 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  1    wreg      void 
  5988 ;; Registers used:
  5989 ;;		None
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  5995 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0
  5996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  5997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  5998 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0
  5999 ;;Total ram usage:        1 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; Hardware stack levels required when called:    2
  6002 ;; This function calls:
  6003 ;;		Nothing
  6004 ;; This function is called by:
  6005 ;;		_printf
  6006 ;;		__doprnt
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010                           
  6011                           ;psect for function _putch
  6012  07FE                     _putch:	
  6013                           
  6014                           ;incstack = 0
  6015                           ; Regs used in _putch: []
  6016  07FE  0008               	return
  6017  07FF                     __end_of_putch:	
  6018                           
  6019                           	psect	text15
  6020  0A67                     __ptext15:	
  6021 ;; *************** function ___lwdiv *****************
  6022 ;; Defined at:
  6023 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;  divisor         2    0[BANK0 ] unsigned int 
  6026 ;;  dividend        2    2[BANK0 ] unsigned int 
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;  quotient        2    6[BANK0 ] unsigned int 
  6029 ;;  counter         1    5[BANK0 ] unsigned char 
  6030 ;; Return value:  Size  Location     Type
  6031 ;;                  2    0[BANK0 ] unsigned int 
  6032 ;; Registers used:
  6033 ;;		wreg, status,2, status,0
  6034 ;; Tracked objects:
  6035 ;;		On entry : 0/0
  6036 ;;		On exit  : 0/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6039 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0
  6040 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0
  6041 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  6042 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0
  6043 ;;Total ram usage:        8 bytes
  6044 ;; Hardware stack levels used:    1
  6045 ;; Hardware stack levels required when called:    2
  6046 ;; This function calls:
  6047 ;;		Nothing
  6048 ;; This function is called by:
  6049 ;;		__doprnt
  6050 ;;		_utoa
  6051 ;; This function uses a non-reentrant model
  6052 ;;
  6053                           
  6054                           
  6055                           ;psect for function ___lwdiv
  6056  0A67                     ___lwdiv:	
  6057                           
  6058                           ;incstack = 0
  6059                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6060  0A67  0020               	movlb	0	; select bank0
  6061  0A68  01A6               	clrf	___lwdiv@quotient
  6062  0A69  01A7               	clrf	___lwdiv@quotient+1
  6063  0A6A  0820               	movf	___lwdiv@divisor,w
  6064  0A6B  0421               	iorwf	___lwdiv@divisor+1,w
  6065  0A6C  1903               	btfsc	3,2
  6066  0A6D  2A97               	goto	l4877
  6067  0A6E  01A5               	clrf	___lwdiv@counter
  6068  0A6F  0AA5               	incf	___lwdiv@counter,f
  6069  0A70                     l4865:	
  6070  0A70  1BA1               	btfsc	___lwdiv@divisor+1,7
  6071  0A71  2A7C               	goto	l4867
  6072  0A72  3001               	movlw	1
  6073  0A73                     u5275:	
  6074  0A73  35A0               	lslf	___lwdiv@divisor,f
  6075  0A74  0DA1               	rlf	___lwdiv@divisor+1,f
  6076  0A75  0B89               	decfsz	9,f
  6077  0A76  2A73               	goto	u5275
  6078  0A77  3001               	movlw	1
  6079  0A78  00A4               	movwf	??___lwdiv
  6080  0A79  0824               	movf	??___lwdiv,w
  6081  0A7A  07A5               	addwf	___lwdiv@counter,f
  6082  0A7B  2A70               	goto	l4865
  6083  0A7C                     l4867:	
  6084  0A7C  3001               	movlw	1
  6085  0A7D                     u5295:	
  6086  0A7D  35A6               	lslf	___lwdiv@quotient,f
  6087  0A7E  0DA7               	rlf	___lwdiv@quotient+1,f
  6088  0A7F  0B89               	decfsz	9,f
  6089  0A80  2A7D               	goto	u5295
  6090  0A81  0821               	movf	___lwdiv@divisor+1,w
  6091  0A82  0223               	subwf	___lwdiv@dividend+1,w
  6092  0A83  1D03               	skipz
  6093  0A84  2A87               	goto	u5305
  6094  0A85  0820               	movf	___lwdiv@divisor,w
  6095  0A86  0222               	subwf	___lwdiv@dividend,w
  6096  0A87                     u5305:	
  6097  0A87  1C03               	skipc
  6098  0A88  2A8E               	goto	l4873
  6099  0A89  0820               	movf	___lwdiv@divisor,w
  6100  0A8A  02A2               	subwf	___lwdiv@dividend,f
  6101  0A8B  0821               	movf	___lwdiv@divisor+1,w
  6102  0A8C  3BA3               	subwfb	___lwdiv@dividend+1,f
  6103  0A8D  1426               	bsf	___lwdiv@quotient,0
  6104  0A8E                     l4873:	
  6105  0A8E  3001               	movlw	1
  6106  0A8F                     u5315:	
  6107  0A8F  36A1               	lsrf	___lwdiv@divisor+1,f
  6108  0A90  0CA0               	rrf	___lwdiv@divisor,f
  6109  0A91  0B89               	decfsz	9,f
  6110  0A92  2A8F               	goto	u5315
  6111  0A93  3001               	movlw	1
  6112  0A94  02A5               	subwf	___lwdiv@counter,f
  6113  0A95  1D03               	btfss	3,2
  6114  0A96  2A7C               	goto	l4867
  6115  0A97                     l4877:	
  6116  0A97  0827               	movf	___lwdiv@quotient+1,w
  6117  0A98  00A1               	movwf	?___lwdiv+1
  6118  0A99  0826               	movf	___lwdiv@quotient,w
  6119  0A9A  00A0               	movwf	?___lwdiv
  6120  0A9B  0008               	return
  6121  0A9C                     __end_of___lwdiv:	
  6122                           
  6123                           	psect	text16
  6124  0B86                     __ptext16:	
  6125 ;; *************** function _hexadecimalToDecimal *****************
  6126 ;; Defined at:
  6127 ;;		line 132 in file "applicationcontrol.h"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;  hexVal          1    wreg     PTR unsigned char 
  6130 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), 
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;  hexVal          1   16[BANK0 ] PTR unsigned char 
  6133 ;;		 -> applianceControl@strL(3), applianceControl@strH(3), 
  6134 ;;  i               2   17[BANK0 ] int 
  6135 ;;  base            2   14[BANK0 ] int 
  6136 ;;  dec_val         2   12[BANK0 ] int 
  6137 ;;  len             2   10[BANK0 ] int 
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  2    6[BANK0 ] int 
  6140 ;; Registers used:
  6141 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6147 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  6148 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0
  6149 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  6150 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0
  6151 ;;Total ram usage:       13 bytes
  6152 ;; Hardware stack levels used:    1
  6153 ;; Hardware stack levels required when called:    3
  6154 ;; This function calls:
  6155 ;;		___wmul
  6156 ;;		_strlen
  6157 ;; This function is called by:
  6158 ;;		_applianceControl
  6159 ;; This function uses a non-reentrant model
  6160 ;;
  6161                           
  6162                           
  6163                           ;psect for function _hexadecimalToDecimal
  6164  0B86                     _hexadecimalToDecimal:	
  6165                           
  6166                           ;incstack = 0
  6167                           ; Regs used in _hexadecimalToDecimal: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6168                           ;hexadecimalToDecimal@hexVal stored from wreg
  6169  0B86  0020               	movlb	0	; select bank0
  6170  0B87  00B0               	movwf	hexadecimalToDecimal@hexVal
  6171                           
  6172                           ;applicationcontrol.h: 134: int len = strlen(hexVal);
  6173  0B88  0830               	movf	hexadecimalToDecimal@hexVal,w
  6174  0B89  00A0               	movwf	strlen@s
  6175  0B8A  3000               	movlw	0
  6176  0B8B  00A1               	movwf	strlen@s+1
  6177  0B8C  3188  2033  318B   	fcall	_strlen
  6178  0B8F  0020               	movlb	0	; select bank0
  6179  0B90  0821               	movf	?_strlen+1,w
  6180  0B91  00AB               	movwf	hexadecimalToDecimal@len+1
  6181  0B92  0820               	movf	?_strlen,w
  6182  0B93  00AA               	movwf	hexadecimalToDecimal@len
  6183                           
  6184                           ;applicationcontrol.h: 137: int base = 1;
  6185  0B94  3001               	movlw	1
  6186  0B95  00AE               	movwf	hexadecimalToDecimal@base
  6187  0B96  3000               	movlw	0
  6188  0B97  00AF               	movwf	hexadecimalToDecimal@base+1
  6189                           
  6190                           ;applicationcontrol.h: 139: int dec_val = 0;
  6191  0B98  01AC               	clrf	hexadecimalToDecimal@dec_val
  6192  0B99  01AD               	clrf	hexadecimalToDecimal@dec_val+1
  6193                           
  6194                           ;applicationcontrol.h: 142: for (int i=len-1; i>=0; i--)
  6195  0B9A  082A               	movf	hexadecimalToDecimal@len,w
  6196  0B9B  3EFF               	addlw	255
  6197  0B9C  00B1               	movwf	hexadecimalToDecimal@i
  6198  0B9D  30FF               	movlw	255
  6199  0B9E  3D2B               	addwfc	hexadecimalToDecimal@len+1,w
  6200  0B9F  00B2               	movwf	hexadecimalToDecimal@i+1
  6201  0BA0  1BB2               	btfsc	hexadecimalToDecimal@i+1,7
  6202  0BA1  2C03               	goto	l5125
  6203  0BA2                     l5105:	
  6204                           
  6205                           ;applicationcontrol.h: 143: {
  6206                           ;applicationcontrol.h: 147: if (hexVal[i]>='0' && hexVal[i]<='9')
  6207  0BA2  0831               	movf	hexadecimalToDecimal@i,w
  6208  0BA3  0730               	addwf	hexadecimalToDecimal@hexVal,w
  6209  0BA4  00A8               	movwf	??_hexadecimalToDecimal
  6210  0BA5  0828               	movf	??_hexadecimalToDecimal,w
  6211  0BA6  0086               	movwf	6
  6212  0BA7  0187               	clrf	7
  6213  0BA8  3030               	movlw	48
  6214  0BA9  0201               	subwf	1,w
  6215  0BAA  1C03               	skipc
  6216  0BAB  2BBF               	goto	l5113
  6217  0BAC  0831               	movf	hexadecimalToDecimal@i,w
  6218  0BAD  0730               	addwf	hexadecimalToDecimal@hexVal,w
  6219  0BAE  00A8               	movwf	??_hexadecimalToDecimal
  6220  0BAF  0828               	movf	??_hexadecimalToDecimal,w
  6221  0BB0  0086               	movwf	6
  6222  0BB1  0187               	clrf	7
  6223  0BB2  303A               	movlw	58
  6224  0BB3  0201               	subwf	1,w
  6225  0BB4  1803               	skipnc
  6226  0BB5  2BBF               	goto	l5113
  6227                           
  6228                           ;applicationcontrol.h: 148: {
  6229                           ;applicationcontrol.h: 149: dec_val += (hexVal[i] - 48)*base;
  6230  0BB6  0831               	movf	hexadecimalToDecimal@i,w
  6231  0BB7  0730               	addwf	hexadecimalToDecimal@hexVal,w
  6232  0BB8  00A8               	movwf	??_hexadecimalToDecimal
  6233  0BB9  0828               	movf	??_hexadecimalToDecimal,w
  6234  0BBA  0086               	movwf	6
  6235  0BBB  0187               	clrf	7
  6236  0BBC  0801               	movf	1,w
  6237  0BBD  3ED0               	addlw	208
  6238  0BBE  2BDB               	goto	L2
  6239  0BBF                     l5113:	
  6240                           ;applicationcontrol.h: 153: }
  6241                           
  6242                           ;applicationcontrol.h: 152: base = base * 16;
  6243                           
  6244                           
  6245                           ;applicationcontrol.h: 158: else if (hexVal[i]>='A' && hexVal[i]<='F')
  6246  0BBF  0831               	movf	hexadecimalToDecimal@i,w
  6247  0BC0  0730               	addwf	hexadecimalToDecimal@hexVal,w
  6248  0BC1  00A8               	movwf	??_hexadecimalToDecimal
  6249  0BC2  0828               	movf	??_hexadecimalToDecimal,w
  6250  0BC3  0086               	movwf	6
  6251  0BC4  0187               	clrf	7
  6252  0BC5  3041               	movlw	65
  6253  0BC6  0201               	subwf	1,w
  6254  0BC7  1C03               	skipc
  6255  0BC8  2BFD               	goto	l5121
  6256  0BC9  0831               	movf	hexadecimalToDecimal@i,w
  6257  0BCA  0730               	addwf	hexadecimalToDecimal@hexVal,w
  6258  0BCB  00A8               	movwf	??_hexadecimalToDecimal
  6259  0BCC  0828               	movf	??_hexadecimalToDecimal,w
  6260  0BCD  0086               	movwf	6
  6261  0BCE  0187               	clrf	7
  6262  0BCF  3047               	movlw	71
  6263  0BD0  0201               	subwf	1,w
  6264  0BD1  1803               	skipnc
  6265  0BD2  2BFD               	goto	l5121
  6266                           
  6267                           ;applicationcontrol.h: 159: {
  6268                           ;applicationcontrol.h: 160: dec_val += (hexVal[i] - 55)*base;
  6269  0BD3  0831               	movf	hexadecimalToDecimal@i,w
  6270  0BD4  0730               	addwf	hexadecimalToDecimal@hexVal,w
  6271  0BD5  00A8               	movwf	??_hexadecimalToDecimal
  6272  0BD6  0828               	movf	??_hexadecimalToDecimal,w
  6273  0BD7  0086               	movwf	6
  6274  0BD8  0187               	clrf	7
  6275  0BD9  0801               	movf	1,w
  6276  0BDA  3EC9               	addlw	201
  6277  0BDB                     L2:	
  6278  0BDB  00A0               	movwf	___wmul@multiplier
  6279  0BDC  30FF               	movlw	255
  6280  0BDD  1803               	skipnc
  6281  0BDE  3000               	movlw	0
  6282  0BDF  00A1               	movwf	___wmul@multiplier+1
  6283  0BE0  082F               	movf	hexadecimalToDecimal@base+1,w
  6284  0BE1  00A3               	movwf	___wmul@multiplicand+1
  6285  0BE2  082E               	movf	hexadecimalToDecimal@base,w
  6286  0BE3  00A2               	movwf	___wmul@multiplicand
  6287  0BE4  3197  27E4  318B   	fcall	___wmul
  6288  0BE7  0020               	movlb	0	; select bank0
  6289  0BE8  0820               	movf	?___wmul,w
  6290  0BE9  07AC               	addwf	hexadecimalToDecimal@dec_val,f
  6291  0BEA  0821               	movf	?___wmul+1,w
  6292  0BEB  3DAD               	addwfc	hexadecimalToDecimal@dec_val+1,f
  6293                           
  6294                           ;applicationcontrol.h: 163: base = base*16;
  6295  0BEC  082F               	movf	hexadecimalToDecimal@base+1,w
  6296  0BED  00A9               	movwf	??_hexadecimalToDecimal+1
  6297  0BEE  082E               	movf	hexadecimalToDecimal@base,w
  6298  0BEF  00A8               	movwf	??_hexadecimalToDecimal
  6299  0BF0  0EA8               	swapf	??_hexadecimalToDecimal,f
  6300  0BF1  0EA9               	swapf	??_hexadecimalToDecimal+1,f
  6301  0BF2  30F0               	movlw	240
  6302  0BF3  05A9               	andwf	??_hexadecimalToDecimal+1,f
  6303  0BF4  0828               	movf	??_hexadecimalToDecimal,w
  6304  0BF5  390F               	andlw	15
  6305  0BF6  04A9               	iorwf	??_hexadecimalToDecimal+1,f
  6306  0BF7  30F0               	movlw	240
  6307  0BF8  05A8               	andwf	??_hexadecimalToDecimal,f
  6308  0BF9  0828               	movf	??_hexadecimalToDecimal,w
  6309  0BFA  00AE               	movwf	hexadecimalToDecimal@base
  6310  0BFB  0829               	movf	??_hexadecimalToDecimal+1,w
  6311  0BFC  00AF               	movwf	hexadecimalToDecimal@base+1
  6312  0BFD                     l5121:	
  6313  0BFD  30FF               	movlw	255
  6314  0BFE  07B1               	addwf	hexadecimalToDecimal@i,f
  6315  0BFF  30FF               	movlw	255
  6316  0C00  3DB2               	addwfc	hexadecimalToDecimal@i+1,f
  6317  0C01  1FB2               	btfss	hexadecimalToDecimal@i+1,7
  6318  0C02  2BA2               	goto	l5105
  6319  0C03                     l5125:	
  6320                           
  6321                           ;applicationcontrol.h: 164: }
  6322                           ;applicationcontrol.h: 165: }
  6323                           ;applicationcontrol.h: 167: return dec_val;
  6324  0C03  082D               	movf	hexadecimalToDecimal@dec_val+1,w
  6325  0C04  00A7               	movwf	?_hexadecimalToDecimal+1
  6326  0C05  082C               	movf	hexadecimalToDecimal@dec_val,w
  6327  0C06  00A6               	movwf	?_hexadecimalToDecimal
  6328  0C07  0008               	return
  6329  0C08                     __end_of_hexadecimalToDecimal:	
  6330                           
  6331                           	psect	text17
  6332  0833                     __ptext17:	
  6333 ;; *************** function _strlen *****************
  6334 ;; Defined at:
  6335 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  6338 ;;		 -> mainReceivedDataBuffer(18), applianceControl@strL(3), applianceControl@strH(3), applianceControl@HexlevelBuffer(
      +5), 
  6339 ;;		 -> NULL(0), 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
  6342 ;;		 -> mainReceivedDataBuffer(18), applianceControl@strL(3), applianceControl@strH(3), applianceControl@HexlevelBuffer(
      +5), 
  6343 ;;		 -> NULL(0), 
  6344 ;; Return value:  Size  Location     Type
  6345 ;;                  2    0[BANK0 ] unsigned int 
  6346 ;; Registers used:
  6347 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6348 ;; Tracked objects:
  6349 ;;		On entry : 0/0
  6350 ;;		On exit  : 0/0
  6351 ;;		Unchanged: 0/0
  6352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6353 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  6354 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  6355 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  6356 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0
  6357 ;;Total ram usage:        6 bytes
  6358 ;; Hardware stack levels used:    1
  6359 ;; Hardware stack levels required when called:    2
  6360 ;; This function calls:
  6361 ;;		Nothing
  6362 ;; This function is called by:
  6363 ;;		_applianceControl
  6364 ;;		_hexadecimalToDecimal
  6365 ;;		_main
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369                           
  6370                           ;psect for function _strlen
  6371  0833                     _strlen:	
  6372                           
  6373                           ;incstack = 0
  6374                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  6375  0833  0020               	movlb	0	; select bank0
  6376  0834  0821               	movf	strlen@s+1,w
  6377  0835  00A5               	movwf	strlen@cp+1
  6378  0836  0820               	movf	strlen@s,w
  6379  0837  00A4               	movwf	strlen@cp
  6380  0838                     l4885:	
  6381  0838  0824               	movf	strlen@cp,w
  6382  0839  0086               	movwf	6
  6383  083A  0825               	movf	strlen@cp+1,w
  6384  083B  0087               	movwf	7
  6385  083C  0801               	movf	1,w
  6386  083D  1903               	btfsc	3,2
  6387  083E  2844               	goto	l4887
  6388  083F  3001               	movlw	1
  6389  0840  07A4               	addwf	strlen@cp,f
  6390  0841  3000               	movlw	0
  6391  0842  3DA5               	addwfc	strlen@cp+1,f
  6392  0843  2838               	goto	l4885
  6393  0844                     l4887:	
  6394  0844  0920               	comf	strlen@s,w
  6395  0845  00A2               	movwf	??_strlen
  6396  0846  0921               	comf	strlen@s+1,w
  6397  0847  00A3               	movwf	??_strlen+1
  6398  0848  0AA2               	incf	??_strlen,f
  6399  0849  1903               	skipnz
  6400  084A  0AA3               	incf	??_strlen+1,f
  6401  084B  0824               	movf	strlen@cp,w
  6402  084C  0722               	addwf	??_strlen,w
  6403  084D  00A0               	movwf	?_strlen
  6404  084E  0825               	movf	strlen@cp+1,w
  6405  084F  3D23               	addwfc	??_strlen+1,w
  6406  0850  00A1               	movwf	?_strlen+1
  6407  0851  0008               	return
  6408  0852                     __end_of_strlen:	
  6409                           
  6410                           	psect	text18
  6411  0793                     __ptext18:	
  6412 ;; *************** function _atoi *****************
  6413 ;; Defined at:
  6414 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;  s               1    wreg     PTR const unsigned char 
  6417 ;;		 -> applianceControl@dimmerSpeedStringBuffer(2), applianceControl@switchNumberStringBuffer(2), 
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  6420 ;;		 -> applianceControl@dimmerSpeedStringBuffer(2), applianceControl@switchNumberStringBuffer(2), 
  6421 ;;  a               2   11[BANK0 ] int 
  6422 ;;  sign            1   10[BANK0 ] unsigned char 
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  2    6[BANK0 ] int 
  6425 ;; Registers used:
  6426 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6432 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  6433 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0
  6434 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  6435 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0
  6436 ;;Total ram usage:        8 bytes
  6437 ;; Hardware stack levels used:    1
  6438 ;; Hardware stack levels required when called:    3
  6439 ;; This function calls:
  6440 ;;		___wmul
  6441 ;;		_isdigit
  6442 ;; This function is called by:
  6443 ;;		_applianceControl
  6444 ;;		_applicationControlRGB
  6445 ;; This function uses a non-reentrant model
  6446 ;;
  6447                           
  6448                           
  6449                           ;psect for function _atoi
  6450  0793                     _atoi:	
  6451                           
  6452                           ;incstack = 0
  6453                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6454                           ;atoi@s stored from wreg
  6455  0793  0020               	movlb	0	; select bank0
  6456  0794  00AD               	movwf	atoi@s
  6457  0795                     l5017:	
  6458  0795  082D               	movf	atoi@s,w
  6459  0796  0086               	movwf	6
  6460  0797  0187               	clrf	7
  6461  0798  3020               	movlw	32
  6462  0799  0601               	xorwf	1,w
  6463  079A  1D03               	btfss	3,2
  6464  079B  2FA1               	goto	l5019
  6465  079C                     l5015:	
  6466  079C  3001               	movlw	1
  6467  079D  00A8               	movwf	??_atoi
  6468  079E  0828               	movf	??_atoi,w
  6469  079F  07AD               	addwf	atoi@s,f
  6470  07A0  2F95               	goto	l5017
  6471  07A1                     l5019:	
  6472  07A1  082D               	movf	atoi@s,w
  6473  07A2  0086               	movwf	6
  6474  07A3  0187               	clrf	7
  6475  07A4  3009               	movlw	9
  6476  07A5  0601               	xorwf	1,w
  6477  07A6  1903               	btfsc	3,2
  6478  07A7  2F9C               	goto	l5015
  6479  07A8  01AB               	clrf	atoi@a
  6480  07A9  01AC               	clrf	atoi@a+1
  6481  07AA  01AA               	clrf	atoi@sign
  6482  07AB  082D               	movf	atoi@s,w
  6483  07AC  0086               	movwf	6
  6484  07AD  0187               	clrf	7
  6485  07AE  302D               	movlw	45
  6486  07AF  0601               	xorwf	1,w
  6487  07B0  1D03               	btfss	3,2
  6488  07B1  2FB7               	goto	l5027
  6489  07B2  3001               	movlw	1
  6490  07B3  00A8               	movwf	??_atoi
  6491  07B4  0828               	movf	??_atoi,w
  6492  07B5  07AA               	addwf	atoi@sign,f
  6493  07B6  2FBE               	goto	l5033
  6494  07B7                     l5027:	
  6495  07B7  082D               	movf	atoi@s,w
  6496  07B8  0086               	movwf	6
  6497  07B9  0187               	clrf	7
  6498  07BA  302B               	movlw	43
  6499  07BB  0601               	xorwf	1,w
  6500  07BC  1D03               	btfss	3,2
  6501  07BD  2FC2               	goto	l5035
  6502  07BE                     l5033:	
  6503  07BE  3001               	movlw	1
  6504  07BF  00A8               	movwf	??_atoi
  6505  07C0  0828               	movf	??_atoi,w
  6506  07C1  07AD               	addwf	atoi@s,f
  6507  07C2                     l5035:	
  6508  07C2  082D               	movf	atoi@s,w
  6509  07C3  0086               	movwf	6
  6510  07C4  0187               	clrf	7
  6511  07C5  0801               	movf	1,w
  6512  07C6  3197  272C  3187   	fcall	_isdigit
  6513  07C9  1C03               	btfss	3,0
  6514  07CA  2FE9               	goto	l5037
  6515  07CB  0020               	movlb	0	; select bank0
  6516  07CC  082C               	movf	atoi@a+1,w
  6517  07CD  00A1               	movwf	___wmul@multiplier+1
  6518  07CE  082B               	movf	atoi@a,w
  6519  07CF  00A0               	movwf	___wmul@multiplier
  6520  07D0  300A               	movlw	10
  6521  07D1  00A2               	movwf	___wmul@multiplicand
  6522  07D2  3000               	movlw	0
  6523  07D3  00A3               	movwf	___wmul@multiplicand+1
  6524  07D4  3197  27E4  3187   	fcall	___wmul
  6525  07D7  0020               	movlb	0	; select bank0
  6526  07D8  082D               	movf	atoi@s,w
  6527  07D9  0086               	movwf	6
  6528  07DA  0187               	clrf	7
  6529  07DB  0801               	movf	1,w
  6530  07DC  0720               	addwf	?___wmul,w
  6531  07DD  00A8               	movwf	??_atoi
  6532  07DE  0821               	movf	?___wmul+1,w
  6533  07DF  1803               	skipnc
  6534  07E0  0A21               	incf	?___wmul+1,w
  6535  07E1  00A9               	movwf	??_atoi+1
  6536  07E2  0828               	movf	??_atoi,w
  6537  07E3  3ED0               	addlw	208
  6538  07E4  00AB               	movwf	atoi@a
  6539  07E5  30FF               	movlw	255
  6540  07E6  3D29               	addwfc	??_atoi+1,w
  6541  07E7  00AC               	movwf	atoi@a+1
  6542  07E8  2FBE               	goto	l5033
  6543  07E9                     l5037:	
  6544  07E9  0020               	movlb	0	; select bank0
  6545  07EA  082A               	movf	atoi@sign,w
  6546  07EB  1903               	btfsc	3,2
  6547  07EC  2FF9               	goto	l5043
  6548  07ED  092B               	comf	atoi@a,w
  6549  07EE  00A8               	movwf	??_atoi
  6550  07EF  092C               	comf	atoi@a+1,w
  6551  07F0  00A9               	movwf	??_atoi+1
  6552  07F1  0AA8               	incf	??_atoi,f
  6553  07F2  1903               	skipnz
  6554  07F3  0AA9               	incf	??_atoi+1,f
  6555  07F4  0828               	movf	??_atoi,w
  6556  07F5  00A6               	movwf	?_atoi
  6557  07F6  0829               	movf	??_atoi+1,w
  6558  07F7  00A7               	movwf	?_atoi+1
  6559  07F8  0008               	return
  6560  07F9                     l5043:	
  6561  07F9  082C               	movf	atoi@a+1,w
  6562  07FA  00A7               	movwf	?_atoi+1
  6563  07FB  082B               	movf	atoi@a,w
  6564  07FC  00A6               	movwf	?_atoi
  6565  07FD  0008               	return
  6566  07FE                     __end_of_atoi:	
  6567                           
  6568                           	psect	text19
  6569  172C                     __ptext19:	
  6570 ;; *************** function _isdigit *****************
  6571 ;; Defined at:
  6572 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;  c               1    wreg     unsigned char 
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;  c               1    1[BANK0 ] unsigned char 
  6577 ;; Return value:  Size  Location     Type
  6578 ;;		None               void
  6579 ;; Registers used:
  6580 ;;		wreg, status,2, status,0
  6581 ;; Tracked objects:
  6582 ;;		On entry : 0/0
  6583 ;;		On exit  : 0/0
  6584 ;;		Unchanged: 0/0
  6585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  6587 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  6588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  6589 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0
  6590 ;;Total ram usage:        2 bytes
  6591 ;; Hardware stack levels used:    1
  6592 ;; Hardware stack levels required when called:    2
  6593 ;; This function calls:
  6594 ;;		Nothing
  6595 ;; This function is called by:
  6596 ;;		_atoi
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600                           
  6601                           ;psect for function _isdigit
  6602  172C                     _isdigit:	
  6603                           
  6604                           ;incstack = 0
  6605                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6606                           ;isdigit@c stored from wreg
  6607  172C  0020               	movlb	0	; select bank0
  6608  172D  00A1               	movwf	isdigit@c
  6609  172E  01A0               	clrf	_isdigit$1350
  6610  172F  303A               	movlw	58
  6611  1730  0221               	subwf	isdigit@c,w
  6612  1731  1803               	skipnc
  6613  1732  2F39               	goto	l4999
  6614  1733  3030               	movlw	48
  6615  1734  0221               	subwf	isdigit@c,w
  6616  1735  1C03               	skipc
  6617  1736  2F39               	goto	l4999
  6618  1737  01A0               	clrf	_isdigit$1350
  6619  1738  0AA0               	incf	_isdigit$1350,f
  6620  1739                     l4999:	
  6621  1739  0C20               	rrf	_isdigit$1350,w
  6622  173A  0008               	return
  6623  173B                     __end_of_isdigit:	
  6624                           
  6625                           	psect	text20
  6626  17E4                     __ptext20:	
  6627 ;; *************** function ___wmul *****************
  6628 ;; Defined at:
  6629 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6632 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6633 ;; Auto vars:     Size  Location     Type
  6634 ;;  product         2    4[BANK0 ] unsigned int 
  6635 ;; Return value:  Size  Location     Type
  6636 ;;                  2    0[BANK0 ] unsigned int 
  6637 ;; Registers used:
  6638 ;;		wreg, status,2, status,0
  6639 ;; Tracked objects:
  6640 ;;		On entry : 0/0
  6641 ;;		On exit  : 0/0
  6642 ;;		Unchanged: 0/0
  6643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6644 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0
  6645 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0
  6646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  6647 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0
  6648 ;;Total ram usage:        6 bytes
  6649 ;; Hardware stack levels used:    1
  6650 ;; Hardware stack levels required when called:    2
  6651 ;; This function calls:
  6652 ;;		Nothing
  6653 ;; This function is called by:
  6654 ;;		_hexadecimalToDecimal
  6655 ;;		_atoi
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           
  6660                           ;psect for function ___wmul
  6661  17E4                     ___wmul:	
  6662                           
  6663                           ;incstack = 0
  6664                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6665  17E4  0020               	movlb	0	; select bank0
  6666  17E5  01A4               	clrf	___wmul@product
  6667  17E6  01A5               	clrf	___wmul@product+1
  6668  17E7                     l4947:	
  6669  17E7  1C20               	btfss	___wmul@multiplier,0
  6670  17E8  2FED               	goto	l717
  6671  17E9  0822               	movf	___wmul@multiplicand,w
  6672  17EA  07A4               	addwf	___wmul@product,f
  6673  17EB  0823               	movf	___wmul@multiplicand+1,w
  6674  17EC  3DA5               	addwfc	___wmul@product+1,f
  6675  17ED                     l717:	
  6676  17ED  3001               	movlw	1
  6677  17EE                     u5435:	
  6678  17EE  35A2               	lslf	___wmul@multiplicand,f
  6679  17EF  0DA3               	rlf	___wmul@multiplicand+1,f
  6680  17F0  0B89               	decfsz	9,f
  6681  17F1  2FEE               	goto	u5435
  6682  17F2  3001               	movlw	1
  6683  17F3                     u5445:	
  6684  17F3  36A1               	lsrf	___wmul@multiplier+1,f
  6685  17F4  0CA0               	rrf	___wmul@multiplier,f
  6686  17F5  0B89               	decfsz	9,f
  6687  17F6  2FF3               	goto	u5445
  6688  17F7  0820               	movf	___wmul@multiplier,w
  6689  17F8  0421               	iorwf	___wmul@multiplier+1,w
  6690  17F9  1D03               	btfss	3,2
  6691  17FA  2FE7               	goto	l4947
  6692  17FB  0825               	movf	___wmul@product+1,w
  6693  17FC  00A1               	movwf	?___wmul+1
  6694  17FD  0824               	movf	___wmul@product,w
  6695  17FE  00A0               	movwf	?___wmul
  6696  17FF  0008               	return
  6697  1800                     __end_of___wmul:	
  6698                           
  6699                           	psect	text21
  6700  0C08                     __ptext21:	
  6701 ;; *************** function ___fttol *****************
  6702 ;; Defined at:
  6703 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;  f1              3   30[BANK0 ] float 
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;  lval            4   39[BANK0 ] unsigned long 
  6708 ;;  exp1            1   43[BANK0 ] unsigned char 
  6709 ;;  sign1           1   38[BANK0 ] unsigned char 
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  4   30[BANK0 ] long 
  6712 ;; Registers used:
  6713 ;;		wreg, status,2, status,0
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6719 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0
  6720 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0
  6721 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0
  6722 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0
  6723 ;;Total ram usage:       14 bytes
  6724 ;; Hardware stack levels used:    1
  6725 ;; Hardware stack levels required when called:    2
  6726 ;; This function calls:
  6727 ;;		Nothing
  6728 ;; This function is called by:
  6729 ;;		_applianceControl
  6730 ;;		_applicationControlRGB
  6731 ;;		_trunc
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           
  6736                           ;psect for function ___fttol
  6737  0C08                     ___fttol:	
  6738                           
  6739                           ;incstack = 0
  6740                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6741  0C08  0020               	movlb	0	; select bank0
  6742  0C09  083E               	movf	___fttol@f1,w
  6743  0C0A  00C2               	movwf	??___fttol
  6744  0C0B  083F               	movf	___fttol@f1+1,w
  6745  0C0C  00C3               	movwf	??___fttol+1
  6746  0C0D  0840               	movf	___fttol@f1+2,w
  6747  0C0E  00C4               	movwf	??___fttol+2
  6748  0C0F  1003               	clrc
  6749  0C10  0D43               	rlf	??___fttol+1,w
  6750  0C11  0D44               	rlf	??___fttol+2,w
  6751  0C12  00C5               	movwf	??___fttol+3
  6752  0C13  0845               	movf	??___fttol+3,w
  6753  0C14  00CB               	movwf	___fttol@exp1
  6754  0C15  084B               	movf	___fttol@exp1,w
  6755  0C16  1D03               	btfss	3,2
  6756  0C17  2C21               	goto	l5371
  6757  0C18  3000               	movlw	0
  6758  0C19  00C1               	movwf	?___fttol+3
  6759  0C1A  3000               	movlw	0
  6760  0C1B  00C0               	movwf	?___fttol+2
  6761  0C1C  3000               	movlw	0
  6762  0C1D  00BF               	movwf	?___fttol+1
  6763  0C1E  3000               	movlw	0
  6764  0C1F  00BE               	movwf	?___fttol
  6765  0C20  0008               	return
  6766  0C21                     l5371:	
  6767  0C21  083E               	movf	___fttol@f1,w
  6768  0C22  00C2               	movwf	??___fttol
  6769  0C23  083F               	movf	___fttol@f1+1,w
  6770  0C24  00C3               	movwf	??___fttol+1
  6771  0C25  0840               	movf	___fttol@f1+2,w
  6772  0C26  00C4               	movwf	??___fttol+2
  6773  0C27  3017               	movlw	23
  6774  0C28                     u6015:	
  6775  0C28  36C4               	lsrf	??___fttol+2,f
  6776  0C29  0CC3               	rrf	??___fttol+1,f
  6777  0C2A  0CC2               	rrf	??___fttol,f
  6778  0C2B  0B89               	decfsz	9,f
  6779  0C2C  2C28               	goto	u6015
  6780  0C2D  0842               	movf	??___fttol,w
  6781  0C2E  00C5               	movwf	??___fttol+3
  6782  0C2F  0845               	movf	??___fttol+3,w
  6783  0C30  00C6               	movwf	___fttol@sign1
  6784  0C31  17BF               	bsf	___fttol@f1+1,7
  6785  0C32  30FF               	movlw	255
  6786  0C33  05BE               	andwf	___fttol@f1,f
  6787  0C34  30FF               	movlw	255
  6788  0C35  05BF               	andwf	___fttol@f1+1,f
  6789  0C36  3000               	movlw	0
  6790  0C37  05C0               	andwf	___fttol@f1+2,f
  6791  0C38  083E               	movf	___fttol@f1,w
  6792  0C39  00C7               	movwf	___fttol@lval
  6793  0C3A  083F               	movf	___fttol@f1+1,w
  6794  0C3B  00C8               	movwf	___fttol@lval+1
  6795  0C3C  0840               	movf	___fttol@f1+2,w
  6796  0C3D  00C9               	movwf	___fttol@lval+2
  6797  0C3E  01CA               	clrf	___fttol@lval+3
  6798  0C3F  308E               	movlw	142
  6799  0C40  02CB               	subwf	___fttol@exp1,f
  6800  0C41  1FCB               	btfss	___fttol@exp1,7
  6801  0C42  2C5F               	goto	l5391
  6802  0C43  084B               	movf	___fttol@exp1,w
  6803  0C44  3A80               	xorlw	128
  6804  0C45  3E8F               	addlw	143
  6805  0C46  1803               	skipnc
  6806  0C47  2C51               	goto	l5389
  6807  0C48  3000               	movlw	0
  6808  0C49  00C1               	movwf	?___fttol+3
  6809  0C4A  3000               	movlw	0
  6810  0C4B  00C0               	movwf	?___fttol+2
  6811  0C4C  3000               	movlw	0
  6812  0C4D  00BF               	movwf	?___fttol+1
  6813  0C4E  3000               	movlw	0
  6814  0C4F  00BE               	movwf	?___fttol
  6815  0C50  0008               	return
  6816  0C51                     l5389:	
  6817  0C51  3001               	movlw	1
  6818  0C52                     u6045:	
  6819  0C52  36CA               	lsrf	___fttol@lval+3,f
  6820  0C53  0CC9               	rrf	___fttol@lval+2,f
  6821  0C54  0CC8               	rrf	___fttol@lval+1,f
  6822  0C55  0CC7               	rrf	___fttol@lval,f
  6823  0C56  0B89               	decfsz	9,f
  6824  0C57  2C52               	goto	u6045
  6825  0C58  3001               	movlw	1
  6826  0C59  00C2               	movwf	??___fttol
  6827  0C5A  0842               	movf	??___fttol,w
  6828  0C5B  07CB               	addwf	___fttol@exp1,f
  6829  0C5C  1903               	btfsc	3,2
  6830  0C5D  2C78               	goto	l5399
  6831  0C5E  2C51               	goto	l5389
  6832  0C5F                     l5391:	
  6833  0C5F  3018               	movlw	24
  6834  0C60  024B               	subwf	___fttol@exp1,w
  6835  0C61  1C03               	skipc
  6836  0C62  2C75               	goto	l984
  6837  0C63  3000               	movlw	0
  6838  0C64  00C1               	movwf	?___fttol+3
  6839  0C65  3000               	movlw	0
  6840  0C66  00C0               	movwf	?___fttol+2
  6841  0C67  3000               	movlw	0
  6842  0C68  00BF               	movwf	?___fttol+1
  6843  0C69  3000               	movlw	0
  6844  0C6A  00BE               	movwf	?___fttol
  6845  0C6B  0008               	return
  6846  0C6C                     l5397:	
  6847  0C6C  3001               	movlw	1
  6848  0C6D                     u6075:	
  6849  0C6D  35C7               	lslf	___fttol@lval,f
  6850  0C6E  0DC8               	rlf	___fttol@lval+1,f
  6851  0C6F  0DC9               	rlf	___fttol@lval+2,f
  6852  0C70  0DCA               	rlf	___fttol@lval+3,f
  6853  0C71  0B89               	decfsz	9,f
  6854  0C72  2C6D               	goto	u6075
  6855  0C73  3001               	movlw	1
  6856  0C74  02CB               	subwf	___fttol@exp1,f
  6857  0C75                     l984:	
  6858  0C75  084B               	movf	___fttol@exp1,w
  6859  0C76  1D03               	btfss	3,2
  6860  0C77  2C6C               	goto	l5397
  6861  0C78                     l5399:	
  6862  0C78  0846               	movf	___fttol@sign1,w
  6863  0C79  1903               	btfsc	3,2
  6864  0C7A  2C86               	goto	l5403
  6865  0C7B  09C7               	comf	___fttol@lval,f
  6866  0C7C  09C8               	comf	___fttol@lval+1,f
  6867  0C7D  09C9               	comf	___fttol@lval+2,f
  6868  0C7E  09CA               	comf	___fttol@lval+3,f
  6869  0C7F  0AC7               	incf	___fttol@lval,f
  6870  0C80  1903               	skipnz
  6871  0C81  0AC8               	incf	___fttol@lval+1,f
  6872  0C82  1903               	skipnz
  6873  0C83  0AC9               	incf	___fttol@lval+2,f
  6874  0C84  1903               	skipnz
  6875  0C85  0ACA               	incf	___fttol@lval+3,f
  6876  0C86                     l5403:	
  6877  0C86  084A               	movf	___fttol@lval+3,w
  6878  0C87  00C1               	movwf	?___fttol+3
  6879  0C88  0849               	movf	___fttol@lval+2,w
  6880  0C89  00C0               	movwf	?___fttol+2
  6881  0C8A  0848               	movf	___fttol@lval+1,w
  6882  0C8B  00BF               	movwf	?___fttol+1
  6883  0C8C  0847               	movf	___fttol@lval,w
  6884  0C8D  00BE               	movwf	?___fttol
  6885  0C8E  0008               	return
  6886  0C8F                     __end_of___fttol:	
  6887                           
  6888                           	psect	text22
  6889  06DF                     __ptext22:	
  6890 ;; *************** function ___ftmul *****************
  6891 ;; Defined at:
  6892 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  f1              3    8[BANK0 ] float 
  6895 ;;  f2              3   11[BANK0 ] float 
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;  f3_as_produc    3   19[BANK0 ] unsigned um
  6898 ;;  sign            1   23[BANK0 ] unsigned char 
  6899 ;;  cntr            1   22[BANK0 ] unsigned char 
  6900 ;;  exp             1   18[BANK0 ] unsigned char 
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  3    8[BANK0 ] float 
  6903 ;; Registers used:
  6904 ;;		wreg, status,2, status,0, pclath, cstack
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  6910 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0
  6911 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0
  6912 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0
  6913 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0
  6914 ;;Total ram usage:       16 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:    3
  6917 ;; This function calls:
  6918 ;;		___ftpack
  6919 ;; This function is called by:
  6920 ;;		_applianceControl
  6921 ;;		_applicationControlRGB
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925                           
  6926                           ;psect for function ___ftmul
  6927  06DF                     ___ftmul:	
  6928                           
  6929                           ;incstack = 0
  6930                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6931  06DF  0020               	movlb	0	; select bank0
  6932  06E0  0828               	movf	___ftmul@f1,w
  6933  06E1  00AE               	movwf	??___ftmul
  6934  06E2  0829               	movf	___ftmul@f1+1,w
  6935  06E3  00AF               	movwf	??___ftmul+1
  6936  06E4  082A               	movf	___ftmul@f1+2,w
  6937  06E5  00B0               	movwf	??___ftmul+2
  6938  06E6  1003               	clrc
  6939  06E7  0D2F               	rlf	??___ftmul+1,w
  6940  06E8  0D30               	rlf	??___ftmul+2,w
  6941  06E9  00B1               	movwf	??___ftmul+3
  6942  06EA  0831               	movf	??___ftmul+3,w
  6943  06EB  00B2               	movwf	___ftmul@exp
  6944  06EC  0832               	movf	___ftmul@exp,w
  6945  06ED  1D03               	btfss	3,2
  6946  06EE  2EF6               	goto	l5321
  6947  06EF  3000               	movlw	0
  6948  06F0  00A8               	movwf	?___ftmul
  6949  06F1  3000               	movlw	0
  6950  06F2  00A9               	movwf	?___ftmul+1
  6951  06F3  3000               	movlw	0
  6952  06F4  00AA               	movwf	?___ftmul+2
  6953  06F5  0008               	return
  6954  06F6                     l5321:	
  6955  06F6  082B               	movf	___ftmul@f2,w
  6956  06F7  00AE               	movwf	??___ftmul
  6957  06F8  082C               	movf	___ftmul@f2+1,w
  6958  06F9  00AF               	movwf	??___ftmul+1
  6959  06FA  082D               	movf	___ftmul@f2+2,w
  6960  06FB  00B0               	movwf	??___ftmul+2
  6961  06FC  1003               	clrc
  6962  06FD  0D2F               	rlf	??___ftmul+1,w
  6963  06FE  0D30               	rlf	??___ftmul+2,w
  6964  06FF  00B1               	movwf	??___ftmul+3
  6965  0700  0831               	movf	??___ftmul+3,w
  6966  0701  00B7               	movwf	___ftmul@sign
  6967  0702  0837               	movf	___ftmul@sign,w
  6968  0703  1D03               	btfss	3,2
  6969  0704  2F0C               	goto	l5327
  6970  0705  3000               	movlw	0
  6971  0706  00A8               	movwf	?___ftmul
  6972  0707  3000               	movlw	0
  6973  0708  00A9               	movwf	?___ftmul+1
  6974  0709  3000               	movlw	0
  6975  070A  00AA               	movwf	?___ftmul+2
  6976  070B  0008               	return
  6977  070C                     l5327:	
  6978  070C  0837               	movf	___ftmul@sign,w
  6979  070D  3E7B               	addlw	123
  6980  070E  00AE               	movwf	??___ftmul
  6981  070F  082E               	movf	??___ftmul,w
  6982  0710  07B2               	addwf	___ftmul@exp,f
  6983  0711  0828               	movf	___ftmul@f1,w
  6984  0712  00AE               	movwf	??___ftmul
  6985  0713  0829               	movf	___ftmul@f1+1,w
  6986  0714  00AF               	movwf	??___ftmul+1
  6987  0715  082A               	movf	___ftmul@f1+2,w
  6988  0716  00B0               	movwf	??___ftmul+2
  6989  0717  3010               	movlw	16
  6990  0718                     u5905:	
  6991  0718  36B0               	lsrf	??___ftmul+2,f
  6992  0719  0CAF               	rrf	??___ftmul+1,f
  6993  071A  0CAE               	rrf	??___ftmul,f
  6994  071B  0B89               	decfsz	9,f
  6995  071C  2F18               	goto	u5905
  6996  071D  082E               	movf	??___ftmul,w
  6997  071E  00B1               	movwf	??___ftmul+3
  6998  071F  0831               	movf	??___ftmul+3,w
  6999  0720  00B7               	movwf	___ftmul@sign
  7000  0721  082B               	movf	___ftmul@f2,w
  7001  0722  00AE               	movwf	??___ftmul
  7002  0723  082C               	movf	___ftmul@f2+1,w
  7003  0724  00AF               	movwf	??___ftmul+1
  7004  0725  082D               	movf	___ftmul@f2+2,w
  7005  0726  00B0               	movwf	??___ftmul+2
  7006  0727  3010               	movlw	16
  7007  0728                     u5915:	
  7008  0728  36B0               	lsrf	??___ftmul+2,f
  7009  0729  0CAF               	rrf	??___ftmul+1,f
  7010  072A  0CAE               	rrf	??___ftmul,f
  7011  072B  0B89               	decfsz	9,f
  7012  072C  2F28               	goto	u5915
  7013  072D  082E               	movf	??___ftmul,w
  7014  072E  00B1               	movwf	??___ftmul+3
  7015  072F  0831               	movf	??___ftmul+3,w
  7016  0730  06B7               	xorwf	___ftmul@sign,f
  7017  0731  3080               	movlw	128
  7018  0732  00AE               	movwf	??___ftmul
  7019  0733  082E               	movf	??___ftmul,w
  7020  0734  05B7               	andwf	___ftmul@sign,f
  7021  0735  17A9               	bsf	___ftmul@f1+1,7
  7022  0736  17AC               	bsf	___ftmul@f2+1,7
  7023  0737  30FF               	movlw	255
  7024  0738  05AB               	andwf	___ftmul@f2,f
  7025  0739  30FF               	movlw	255
  7026  073A  05AC               	andwf	___ftmul@f2+1,f
  7027  073B  3000               	movlw	0
  7028  073C  05AD               	andwf	___ftmul@f2+2,f
  7029  073D  3000               	movlw	0
  7030  073E  00B3               	movwf	___ftmul@f3_as_product
  7031  073F  3000               	movlw	0
  7032  0740  00B4               	movwf	___ftmul@f3_as_product+1
  7033  0741  3000               	movlw	0
  7034  0742  00B5               	movwf	___ftmul@f3_as_product+2
  7035  0743  3007               	movlw	7
  7036  0744  00AE               	movwf	??___ftmul
  7037  0745  082E               	movf	??___ftmul,w
  7038  0746  00B6               	movwf	___ftmul@cntr
  7039  0747                     l5339:	
  7040  0747  1C28               	btfss	___ftmul@f1,0
  7041  0748  2F4F               	goto	l5343
  7042  0749  082B               	movf	___ftmul@f2,w
  7043  074A  07B3               	addwf	___ftmul@f3_as_product,f
  7044  074B  082C               	movf	___ftmul@f2+1,w
  7045  074C  3DB4               	addwfc	___ftmul@f3_as_product+1,f
  7046  074D  082D               	movf	___ftmul@f2+2,w
  7047  074E  3DB5               	addwfc	___ftmul@f3_as_product+2,f
  7048  074F                     l5343:	
  7049  074F  3001               	movlw	1
  7050  0750                     u5935:	
  7051  0750  36AA               	lsrf	___ftmul@f1+2,f
  7052  0751  0CA9               	rrf	___ftmul@f1+1,f
  7053  0752  0CA8               	rrf	___ftmul@f1,f
  7054  0753  0B89               	decfsz	9,f
  7055  0754  2F50               	goto	u5935
  7056  0755  3001               	movlw	1
  7057  0756                     u5945:	
  7058  0756  35AB               	lslf	___ftmul@f2,f
  7059  0757  0DAC               	rlf	___ftmul@f2+1,f
  7060  0758  0DAD               	rlf	___ftmul@f2+2,f
  7061  0759  0B89               	decfsz	9,f
  7062  075A  2F56               	goto	u5945
  7063  075B  3001               	movlw	1
  7064  075C  02B6               	subwf	___ftmul@cntr,f
  7065  075D  1D03               	btfss	3,2
  7066  075E  2F47               	goto	l5339
  7067  075F  3009               	movlw	9
  7068  0760  00AE               	movwf	??___ftmul
  7069  0761  082E               	movf	??___ftmul,w
  7070  0762  00B6               	movwf	___ftmul@cntr
  7071  0763                     l5351:	
  7072  0763  1C28               	btfss	___ftmul@f1,0
  7073  0764  2F6B               	goto	l5355
  7074  0765  082B               	movf	___ftmul@f2,w
  7075  0766  07B3               	addwf	___ftmul@f3_as_product,f
  7076  0767  082C               	movf	___ftmul@f2+1,w
  7077  0768  3DB4               	addwfc	___ftmul@f3_as_product+1,f
  7078  0769  082D               	movf	___ftmul@f2+2,w
  7079  076A  3DB5               	addwfc	___ftmul@f3_as_product+2,f
  7080  076B                     l5355:	
  7081  076B  3001               	movlw	1
  7082  076C                     u5975:	
  7083  076C  36AA               	lsrf	___ftmul@f1+2,f
  7084  076D  0CA9               	rrf	___ftmul@f1+1,f
  7085  076E  0CA8               	rrf	___ftmul@f1,f
  7086  076F  0B89               	decfsz	9,f
  7087  0770  2F6C               	goto	u5975
  7088  0771  3001               	movlw	1
  7089  0772                     u5985:	
  7090  0772  36B5               	lsrf	___ftmul@f3_as_product+2,f
  7091  0773  0CB4               	rrf	___ftmul@f3_as_product+1,f
  7092  0774  0CB3               	rrf	___ftmul@f3_as_product,f
  7093  0775  0B89               	decfsz	9,f
  7094  0776  2F72               	goto	u5985
  7095  0777  3001               	movlw	1
  7096  0778  02B6               	subwf	___ftmul@cntr,f
  7097  0779  1D03               	btfss	3,2
  7098  077A  2F63               	goto	l5351
  7099  077B  0833               	movf	___ftmul@f3_as_product,w
  7100  077C  00A0               	movwf	___ftpack@arg
  7101  077D  0834               	movf	___ftmul@f3_as_product+1,w
  7102  077E  00A1               	movwf	___ftpack@arg+1
  7103  077F  0835               	movf	___ftmul@f3_as_product+2,w
  7104  0780  00A2               	movwf	___ftpack@arg+2
  7105  0781  0832               	movf	___ftmul@exp,w
  7106  0782  00AE               	movwf	??___ftmul
  7107  0783  082E               	movf	??___ftmul,w
  7108  0784  00A3               	movwf	___ftpack@exp
  7109  0785  0837               	movf	___ftmul@sign,w
  7110  0786  00AF               	movwf	??___ftmul+1
  7111  0787  082F               	movf	??___ftmul+1,w
  7112  0788  00A4               	movwf	___ftpack@sign
  7113  0789  318B  2321         	fcall	___ftpack
  7114  078B  0020               	movlb	0	; select bank0
  7115  078C  0820               	movf	?___ftpack,w
  7116  078D  00A8               	movwf	?___ftmul
  7117  078E  0821               	movf	?___ftpack+1,w
  7118  078F  00A9               	movwf	?___ftmul+1
  7119  0790  0822               	movf	?___ftpack+2,w
  7120  0791  00AA               	movwf	?___ftmul+2
  7121  0792  0008               	return
  7122  0793                     __end_of___ftmul:	
  7123                           
  7124                           	psect	text23
  7125  0C8F                     __ptext23:	
  7126 ;; *************** function ___ftdiv *****************
  7127 ;; Defined at:
  7128 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;  f2              3   14[BANK0 ] float 
  7131 ;;  f1              3   17[BANK0 ] float 
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;  f3              3   25[BANK0 ] float 
  7134 ;;  sign            1   29[BANK0 ] unsigned char 
  7135 ;;  exp             1   28[BANK0 ] unsigned char 
  7136 ;;  cntr            1   24[BANK0 ] unsigned char 
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  3   14[BANK0 ] float 
  7139 ;; Registers used:
  7140 ;;		wreg, status,2, status,0, pclath, cstack
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  7146 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0
  7147 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0
  7148 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0
  7149 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0
  7150 ;;Total ram usage:       16 bytes
  7151 ;; Hardware stack levels used:    1
  7152 ;; Hardware stack levels required when called:    3
  7153 ;; This function calls:
  7154 ;;		___ftpack
  7155 ;; This function is called by:
  7156 ;;		_applianceControl
  7157 ;; This function uses a non-reentrant model
  7158 ;;
  7159                           
  7160                           
  7161                           ;psect for function ___ftdiv
  7162  0C8F                     ___ftdiv:	
  7163                           
  7164                           ;incstack = 0
  7165                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7166  0C8F  0020               	movlb	0	; select bank0
  7167  0C90  0831               	movf	___ftdiv@f1,w
  7168  0C91  00B4               	movwf	??___ftdiv
  7169  0C92  0832               	movf	___ftdiv@f1+1,w
  7170  0C93  00B5               	movwf	??___ftdiv+1
  7171  0C94  0833               	movf	___ftdiv@f1+2,w
  7172  0C95  00B6               	movwf	??___ftdiv+2
  7173  0C96  1003               	clrc
  7174  0C97  0D35               	rlf	??___ftdiv+1,w
  7175  0C98  0D36               	rlf	??___ftdiv+2,w
  7176  0C99  00B7               	movwf	??___ftdiv+3
  7177  0C9A  0837               	movf	??___ftdiv+3,w
  7178  0C9B  00BC               	movwf	___ftdiv@exp
  7179  0C9C  083C               	movf	___ftdiv@exp,w
  7180  0C9D  1D03               	btfss	3,2
  7181  0C9E  2CA6               	goto	l5279
  7182  0C9F  3000               	movlw	0
  7183  0CA0  00AE               	movwf	?___ftdiv
  7184  0CA1  3000               	movlw	0
  7185  0CA2  00AF               	movwf	?___ftdiv+1
  7186  0CA3  3000               	movlw	0
  7187  0CA4  00B0               	movwf	?___ftdiv+2
  7188  0CA5  0008               	return
  7189  0CA6                     l5279:	
  7190  0CA6  082E               	movf	___ftdiv@f2,w
  7191  0CA7  00B4               	movwf	??___ftdiv
  7192  0CA8  082F               	movf	___ftdiv@f2+1,w
  7193  0CA9  00B5               	movwf	??___ftdiv+1
  7194  0CAA  0830               	movf	___ftdiv@f2+2,w
  7195  0CAB  00B6               	movwf	??___ftdiv+2
  7196  0CAC  1003               	clrc
  7197  0CAD  0D35               	rlf	??___ftdiv+1,w
  7198  0CAE  0D36               	rlf	??___ftdiv+2,w
  7199  0CAF  00B7               	movwf	??___ftdiv+3
  7200  0CB0  0837               	movf	??___ftdiv+3,w
  7201  0CB1  00BD               	movwf	___ftdiv@sign
  7202  0CB2  083D               	movf	___ftdiv@sign,w
  7203  0CB3  1D03               	btfss	3,2
  7204  0CB4  2CBC               	goto	l5285
  7205  0CB5  3000               	movlw	0
  7206  0CB6  00AE               	movwf	?___ftdiv
  7207  0CB7  3000               	movlw	0
  7208  0CB8  00AF               	movwf	?___ftdiv+1
  7209  0CB9  3000               	movlw	0
  7210  0CBA  00B0               	movwf	?___ftdiv+2
  7211  0CBB  0008               	return
  7212  0CBC                     l5285:	
  7213  0CBC  3000               	movlw	0
  7214  0CBD  00B9               	movwf	___ftdiv@f3
  7215  0CBE  3000               	movlw	0
  7216  0CBF  00BA               	movwf	___ftdiv@f3+1
  7217  0CC0  3000               	movlw	0
  7218  0CC1  00BB               	movwf	___ftdiv@f3+2
  7219  0CC2  3089               	movlw	137
  7220  0CC3  073D               	addwf	___ftdiv@sign,w
  7221  0CC4  00B4               	movwf	??___ftdiv
  7222  0CC5  0834               	movf	??___ftdiv,w
  7223  0CC6  02BC               	subwf	___ftdiv@exp,f
  7224  0CC7  0831               	movf	___ftdiv@f1,w
  7225  0CC8  00B4               	movwf	??___ftdiv
  7226  0CC9  0832               	movf	___ftdiv@f1+1,w
  7227  0CCA  00B5               	movwf	??___ftdiv+1
  7228  0CCB  0833               	movf	___ftdiv@f1+2,w
  7229  0CCC  00B6               	movwf	??___ftdiv+2
  7230  0CCD  3010               	movlw	16
  7231  0CCE                     u5825:	
  7232  0CCE  36B6               	lsrf	??___ftdiv+2,f
  7233  0CCF  0CB5               	rrf	??___ftdiv+1,f
  7234  0CD0  0CB4               	rrf	??___ftdiv,f
  7235  0CD1  0B89               	decfsz	9,f
  7236  0CD2  2CCE               	goto	u5825
  7237  0CD3  0834               	movf	??___ftdiv,w
  7238  0CD4  00B7               	movwf	??___ftdiv+3
  7239  0CD5  0837               	movf	??___ftdiv+3,w
  7240  0CD6  00BD               	movwf	___ftdiv@sign
  7241  0CD7  082E               	movf	___ftdiv@f2,w
  7242  0CD8  00B4               	movwf	??___ftdiv
  7243  0CD9  082F               	movf	___ftdiv@f2+1,w
  7244  0CDA  00B5               	movwf	??___ftdiv+1
  7245  0CDB  0830               	movf	___ftdiv@f2+2,w
  7246  0CDC  00B6               	movwf	??___ftdiv+2
  7247  0CDD  3010               	movlw	16
  7248  0CDE                     u5835:	
  7249  0CDE  36B6               	lsrf	??___ftdiv+2,f
  7250  0CDF  0CB5               	rrf	??___ftdiv+1,f
  7251  0CE0  0CB4               	rrf	??___ftdiv,f
  7252  0CE1  0B89               	decfsz	9,f
  7253  0CE2  2CDE               	goto	u5835
  7254  0CE3  0834               	movf	??___ftdiv,w
  7255  0CE4  00B7               	movwf	??___ftdiv+3
  7256  0CE5  0837               	movf	??___ftdiv+3,w
  7257  0CE6  06BD               	xorwf	___ftdiv@sign,f
  7258  0CE7  3080               	movlw	128
  7259  0CE8  00B4               	movwf	??___ftdiv
  7260  0CE9  0834               	movf	??___ftdiv,w
  7261  0CEA  05BD               	andwf	___ftdiv@sign,f
  7262  0CEB  17B2               	bsf	___ftdiv@f1+1,7
  7263  0CEC  30FF               	movlw	255
  7264  0CED  05B1               	andwf	___ftdiv@f1,f
  7265  0CEE  30FF               	movlw	255
  7266  0CEF  05B2               	andwf	___ftdiv@f1+1,f
  7267  0CF0  3000               	movlw	0
  7268  0CF1  05B3               	andwf	___ftdiv@f1+2,f
  7269  0CF2  17AF               	bsf	___ftdiv@f2+1,7
  7270  0CF3  30FF               	movlw	255
  7271  0CF4  05AE               	andwf	___ftdiv@f2,f
  7272  0CF5  30FF               	movlw	255
  7273  0CF6  05AF               	andwf	___ftdiv@f2+1,f
  7274  0CF7  3000               	movlw	0
  7275  0CF8  05B0               	andwf	___ftdiv@f2+2,f
  7276  0CF9  3018               	movlw	24
  7277  0CFA  00B4               	movwf	??___ftdiv
  7278  0CFB  0834               	movf	??___ftdiv,w
  7279  0CFC  00B8               	movwf	___ftdiv@cntr
  7280  0CFD                     l5299:	
  7281  0CFD  3001               	movlw	1
  7282  0CFE                     u5845:	
  7283  0CFE  35B9               	lslf	___ftdiv@f3,f
  7284  0CFF  0DBA               	rlf	___ftdiv@f3+1,f
  7285  0D00  0DBB               	rlf	___ftdiv@f3+2,f
  7286  0D01  0B89               	decfsz	9,f
  7287  0D02  2CFE               	goto	u5845
  7288  0D03  0830               	movf	___ftdiv@f2+2,w
  7289  0D04  0233               	subwf	___ftdiv@f1+2,w
  7290  0D05  1D03               	skipz
  7291  0D06  2D0D               	goto	u5855
  7292  0D07  082F               	movf	___ftdiv@f2+1,w
  7293  0D08  0232               	subwf	___ftdiv@f1+1,w
  7294  0D09  1D03               	skipz
  7295  0D0A  2D0D               	goto	u5855
  7296  0D0B  082E               	movf	___ftdiv@f2,w
  7297  0D0C  0231               	subwf	___ftdiv@f1,w
  7298  0D0D                     u5855:	
  7299  0D0D  1C03               	skipc
  7300  0D0E  2D16               	goto	l5307
  7301  0D0F  082E               	movf	___ftdiv@f2,w
  7302  0D10  02B1               	subwf	___ftdiv@f1,f
  7303  0D11  082F               	movf	___ftdiv@f2+1,w
  7304  0D12  3BB2               	subwfb	___ftdiv@f1+1,f
  7305  0D13  0830               	movf	___ftdiv@f2+2,w
  7306  0D14  3BB3               	subwfb	___ftdiv@f1+2,f
  7307  0D15  1439               	bsf	___ftdiv@f3,0
  7308  0D16                     l5307:	
  7309  0D16  3001               	movlw	1
  7310  0D17                     u5865:	
  7311  0D17  35B1               	lslf	___ftdiv@f1,f
  7312  0D18  0DB2               	rlf	___ftdiv@f1+1,f
  7313  0D19  0DB3               	rlf	___ftdiv@f1+2,f
  7314  0D1A  0B89               	decfsz	9,f
  7315  0D1B  2D17               	goto	u5865
  7316  0D1C  3001               	movlw	1
  7317  0D1D  02B8               	subwf	___ftdiv@cntr,f
  7318  0D1E  1D03               	btfss	3,2
  7319  0D1F  2CFD               	goto	l5299
  7320  0D20  0839               	movf	___ftdiv@f3,w
  7321  0D21  00A0               	movwf	___ftpack@arg
  7322  0D22  083A               	movf	___ftdiv@f3+1,w
  7323  0D23  00A1               	movwf	___ftpack@arg+1
  7324  0D24  083B               	movf	___ftdiv@f3+2,w
  7325  0D25  00A2               	movwf	___ftpack@arg+2
  7326  0D26  083C               	movf	___ftdiv@exp,w
  7327  0D27  00B4               	movwf	??___ftdiv
  7328  0D28  0834               	movf	??___ftdiv,w
  7329  0D29  00A3               	movwf	___ftpack@exp
  7330  0D2A  083D               	movf	___ftdiv@sign,w
  7331  0D2B  00B5               	movwf	??___ftdiv+1
  7332  0D2C  0835               	movf	??___ftdiv+1,w
  7333  0D2D  00A4               	movwf	___ftpack@sign
  7334  0D2E  318B  2321         	fcall	___ftpack
  7335  0D30  0020               	movlb	0	; select bank0
  7336  0D31  0820               	movf	?___ftpack,w
  7337  0D32  00AE               	movwf	?___ftdiv
  7338  0D33  0821               	movf	?___ftpack+1,w
  7339  0D34  00AF               	movwf	?___ftdiv+1
  7340  0D35  0822               	movf	?___ftpack+2,w
  7341  0D36  00B0               	movwf	?___ftdiv+2
  7342  0D37  0008               	return
  7343  0D38                     __end_of___ftdiv:	
  7344                           
  7345                           	psect	text24
  7346  0872                     __ptext24:	
  7347 ;; *************** function ___awtoft *****************
  7348 ;; Defined at:
  7349 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;  c               2    8[BANK0 ] int 
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;  sign            1   13[BANK0 ] unsigned char 
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  3    8[BANK0 ] float 
  7356 ;; Registers used:
  7357 ;;		wreg, status,2, status,0, pclath, cstack
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  7363 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0
  7364 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0
  7365 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  7366 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0
  7367 ;;Total ram usage:        6 bytes
  7368 ;; Hardware stack levels used:    1
  7369 ;; Hardware stack levels required when called:    3
  7370 ;; This function calls:
  7371 ;;		___ftpack
  7372 ;; This function is called by:
  7373 ;;		_applianceControl
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           
  7378                           ;psect for function ___awtoft
  7379  0872                     ___awtoft:	
  7380                           
  7381                           ;incstack = 0
  7382                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7383  0872  0020               	movlb	0	; select bank0
  7384  0873  01AD               	clrf	___awtoft@sign
  7385  0874  1FA9               	btfss	___awtoft@c+1,7
  7386  0875  287D               	goto	l5269
  7387  0876  09A8               	comf	___awtoft@c,f
  7388  0877  09A9               	comf	___awtoft@c+1,f
  7389  0878  0AA8               	incf	___awtoft@c,f
  7390  0879  1903               	skipnz
  7391  087A  0AA9               	incf	___awtoft@c+1,f
  7392  087B  01AD               	clrf	___awtoft@sign
  7393  087C  0AAD               	incf	___awtoft@sign,f
  7394  087D                     l5269:	
  7395  087D  0828               	movf	___awtoft@c,w
  7396  087E  00A0               	movwf	___ftpack@arg
  7397  087F  0829               	movf	___awtoft@c+1,w
  7398  0880  00A1               	movwf	___ftpack@arg+1
  7399  0881  01A2               	clrf	___ftpack@arg+2
  7400  0882  308E               	movlw	142
  7401  0883  00AB               	movwf	??___awtoft
  7402  0884  082B               	movf	??___awtoft,w
  7403  0885  00A3               	movwf	___ftpack@exp
  7404  0886  082D               	movf	___awtoft@sign,w
  7405  0887  00AC               	movwf	??___awtoft+1
  7406  0888  082C               	movf	??___awtoft+1,w
  7407  0889  00A4               	movwf	___ftpack@sign
  7408  088A  318B  2321         	fcall	___ftpack
  7409  088C  0020               	movlb	0	; select bank0
  7410  088D  0820               	movf	?___ftpack,w
  7411  088E  00A8               	movwf	?___awtoft
  7412  088F  0821               	movf	?___ftpack+1,w
  7413  0890  00A9               	movwf	?___awtoft+1
  7414  0891  0822               	movf	?___ftpack+2,w
  7415  0892  00AA               	movwf	?___awtoft+2
  7416  0893  0008               	return
  7417  0894                     __end_of___awtoft:	
  7418                           
  7419                           	psect	text25
  7420  0B21                     __ptext25:	
  7421 ;; *************** function ___ftpack *****************
  7422 ;; Defined at:
  7423 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  7424 ;; Parameters:    Size  Location     Type
  7425 ;;  arg             3    0[BANK0 ] unsigned um
  7426 ;;  exp             1    3[BANK0 ] unsigned char 
  7427 ;;  sign            1    4[BANK0 ] unsigned char 
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;		None
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  3    0[BANK0 ] float 
  7432 ;; Registers used:
  7433 ;;		wreg, status,2, status,0
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  7439 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0
  7440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  7441 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0
  7442 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0
  7443 ;;Total ram usage:        8 bytes
  7444 ;; Hardware stack levels used:    1
  7445 ;; Hardware stack levels required when called:    2
  7446 ;; This function calls:
  7447 ;;		Nothing
  7448 ;; This function is called by:
  7449 ;;		___awtoft
  7450 ;;		___ftdiv
  7451 ;;		___ftmul
  7452 ;;		___altoft
  7453 ;;		___ftadd
  7454 ;;		___lwtoft
  7455 ;; This function uses a non-reentrant model
  7456 ;;
  7457                           
  7458                           
  7459                           ;psect for function ___ftpack
  7460  0B21                     ___ftpack:	
  7461                           
  7462                           ;incstack = 0
  7463                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7464  0B21  0020               	movlb	0	; select bank0
  7465  0B22  0823               	movf	___ftpack@exp,w
  7466  0B23  1903               	btfsc	3,2
  7467  0B24  2B2A               	goto	l4963
  7468  0B25  0822               	movf	___ftpack@arg+2,w
  7469  0B26  0421               	iorwf	___ftpack@arg+1,w
  7470  0B27  0420               	iorwf	___ftpack@arg,w
  7471  0B28  1D03               	skipz
  7472  0B29  2B3B               	goto	l4969
  7473  0B2A                     l4963:	
  7474  0B2A  3000               	movlw	0
  7475  0B2B  00A0               	movwf	?___ftpack
  7476  0B2C  3000               	movlw	0
  7477  0B2D  00A1               	movwf	?___ftpack+1
  7478  0B2E  3000               	movlw	0
  7479  0B2F  00A2               	movwf	?___ftpack+2
  7480  0B30  0008               	return
  7481  0B31                     l4967:	
  7482  0B31  3001               	movlw	1
  7483  0B32  00A5               	movwf	??___ftpack
  7484  0B33  0825               	movf	??___ftpack,w
  7485  0B34  07A3               	addwf	___ftpack@exp,f
  7486  0B35  3001               	movlw	1
  7487  0B36                     u5485:	
  7488  0B36  36A2               	lsrf	___ftpack@arg+2,f
  7489  0B37  0CA1               	rrf	___ftpack@arg+1,f
  7490  0B38  0CA0               	rrf	___ftpack@arg,f
  7491  0B39  0B89               	decfsz	9,f
  7492  0B3A  2B36               	goto	u5485
  7493  0B3B                     l4969:	
  7494  0B3B  30FE               	movlw	254
  7495  0B3C  0522               	andwf	___ftpack@arg+2,w
  7496  0B3D  1903               	btfsc	3,2
  7497  0B3E  2B54               	goto	l893
  7498  0B3F  2B31               	goto	l4967
  7499  0B40                     l4971:	
  7500  0B40  3001               	movlw	1
  7501  0B41  00A5               	movwf	??___ftpack
  7502  0B42  0825               	movf	??___ftpack,w
  7503  0B43  07A3               	addwf	___ftpack@exp,f
  7504  0B44  3001               	movlw	1
  7505  0B45  07A0               	addwf	___ftpack@arg,f
  7506  0B46  3000               	movlw	0
  7507  0B47  1803               	skipnc
  7508  0B48  3001               	movlw	1
  7509  0B49  07A1               	addwf	___ftpack@arg+1,f
  7510  0B4A  3000               	movlw	0
  7511  0B4B  1803               	skipnc
  7512  0B4C  3001               	movlw	1
  7513  0B4D  07A2               	addwf	___ftpack@arg+2,f
  7514  0B4E  3001               	movlw	1
  7515  0B4F                     u5505:	
  7516  0B4F  36A2               	lsrf	___ftpack@arg+2,f
  7517  0B50  0CA1               	rrf	___ftpack@arg+1,f
  7518  0B51  0CA0               	rrf	___ftpack@arg,f
  7519  0B52  0B89               	decfsz	9,f
  7520  0B53  2B4F               	goto	u5505
  7521  0B54                     l893:	
  7522  0B54  30FF               	movlw	255
  7523  0B55  0522               	andwf	___ftpack@arg+2,w
  7524  0B56  1903               	btfsc	3,2
  7525  0B57  2B61               	goto	l4979
  7526  0B58  2B40               	goto	l4971
  7527  0B59                     l4977:	
  7528  0B59  3001               	movlw	1
  7529  0B5A  02A3               	subwf	___ftpack@exp,f
  7530  0B5B  3001               	movlw	1
  7531  0B5C                     u5525:	
  7532  0B5C  35A0               	lslf	___ftpack@arg,f
  7533  0B5D  0DA1               	rlf	___ftpack@arg+1,f
  7534  0B5E  0DA2               	rlf	___ftpack@arg+2,f
  7535  0B5F  0B89               	decfsz	9,f
  7536  0B60  2B5C               	goto	u5525
  7537  0B61                     l4979:	
  7538  0B61  1BA1               	btfsc	___ftpack@arg+1,7
  7539  0B62  2B67               	goto	l900
  7540  0B63  3002               	movlw	2
  7541  0B64  0223               	subwf	___ftpack@exp,w
  7542  0B65  1803               	skipnc
  7543  0B66  2B59               	goto	l4977
  7544  0B67                     l900:	
  7545  0B67  1823               	btfsc	___ftpack@exp,0
  7546  0B68  2B6F               	goto	l901
  7547  0B69  30FF               	movlw	255
  7548  0B6A  05A0               	andwf	___ftpack@arg,f
  7549  0B6B  307F               	movlw	127
  7550  0B6C  05A1               	andwf	___ftpack@arg+1,f
  7551  0B6D  30FF               	movlw	255
  7552  0B6E  05A2               	andwf	___ftpack@arg+2,f
  7553  0B6F                     l901:	
  7554  0B6F  1003               	clrc
  7555  0B70  0CA3               	rrf	___ftpack@exp,f
  7556  0B71  0823               	movf	___ftpack@exp,w
  7557  0B72  00A5               	movwf	??___ftpack
  7558  0B73  01A6               	clrf	??___ftpack+1
  7559  0B74  01A7               	clrf	??___ftpack+2
  7560  0B75  3010               	movlw	16
  7561  0B76                     u5565:	
  7562  0B76  35A5               	lslf	??___ftpack,f
  7563  0B77  0DA6               	rlf	??___ftpack+1,f
  7564  0B78  0DA7               	rlf	??___ftpack+2,f
  7565  0B79  0B89               	decfsz	9,f
  7566  0B7A  2B76               	goto	u5565
  7567  0B7B  0825               	movf	??___ftpack,w
  7568  0B7C  04A0               	iorwf	___ftpack@arg,f
  7569  0B7D  0826               	movf	??___ftpack+1,w
  7570  0B7E  04A1               	iorwf	___ftpack@arg+1,f
  7571  0B7F  0827               	movf	??___ftpack+2,w
  7572  0B80  04A2               	iorwf	___ftpack@arg+2,f
  7573  0B81  0824               	movf	___ftpack@sign,w
  7574  0B82  1903               	btfsc	3,2
  7575  0B83  0008               	return
  7576  0B84  17A2               	bsf	___ftpack@arg+2,7
  7577  0B85  0008               	return
  7578  0B86                     __end_of___ftpack:	
  7579                           
  7580                           	psect	text26
  7581  0894                     __ptext26:	
  7582 ;; *************** function _allPeripheralInit *****************
  7583 ;; Defined at:
  7584 ;;		line 910 in file "main.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;		None
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;		None
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  1    wreg      void 
  7591 ;; Registers used:
  7592 ;;		wreg, status,2, status,0, pclath, cstack
  7593 ;; Tracked objects:
  7594 ;;		On entry : 0/0
  7595 ;;		On exit  : 0/0
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  7598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  7599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  7600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  7601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  7602 ;;Total ram usage:        0 bytes
  7603 ;; Hardware stack levels used:    1
  7604 ;; Hardware stack levels required when called:    3
  7605 ;; This function calls:
  7606 ;;		_CCP10_Initialize
  7607 ;;		_CCP7_Initialize
  7608 ;;		_CCP8_Initialize
  7609 ;;		_CCP9_Initialize
  7610 ;;		_EUSART_Initialize
  7611 ;;		_TMR10_Initialize
  7612 ;;		_TMR1_Initialize
  7613 ;;		_TMR2_Initialize
  7614 ;;		_TMR3_Initialize
  7615 ;;		_TMR4_Initialize
  7616 ;;		_TMR5_Initialize
  7617 ;;		_TMR6_Initialize
  7618 ;;		_TMR8_Initialize
  7619 ;; This function is called by:
  7620 ;;		_main
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           
  7624                           
  7625                           ;psect for function _allPeripheralInit
  7626  0894                     _allPeripheralInit:	
  7627                           
  7628                           ;main.c: 911: EUSART_Initialize();
  7629                           
  7630                           ;incstack = 0
  7631                           ; Regs used in _allPeripheralInit: [wreg+status,2+status,0+pclath+cstack]
  7632  0894  3197  279B  3188   	fcall	_EUSART_Initialize
  7633                           
  7634                           ;main.c: 912: TMR1_Initialize();
  7635  0897  3196  26FC  3188   	fcall	_TMR1_Initialize
  7636                           
  7637                           ;main.c: 913: TMR2_Initialize();
  7638  089A  3196  26E8  3188   	fcall	_TMR2_Initialize
  7639                           
  7640                           ;main.c: 914: TMR3_Initialize();
  7641  089D  3197  2712  3188   	fcall	_TMR3_Initialize
  7642                           
  7643                           ;main.c: 915: TMR4_Initialize();
  7644  08A0  3197  2707  3188   	fcall	_TMR4_Initialize
  7645                           
  7646                           ;main.c: 916: TMR5_Initialize();
  7647  08A3  3196  26F2  3188   	fcall	_TMR5_Initialize
  7648                           
  7649                           ;main.c: 917: TMR6_Initialize();
  7650  08A6  3196  26A5  3188   	fcall	_TMR6_Initialize
  7651                           
  7652                           ;main.c: 919: TMR8_Initialize();
  7653  08A9  3196  26AE  3188   	fcall	_TMR8_Initialize
  7654                           
  7655                           ;main.c: 920: TMR10_Initialize();
  7656  08AC  3196  269C  3188   	fcall	_TMR10_Initialize
  7657                           
  7658                           ;main.c: 921: CCP9_Initialize();
  7659  08AF  3196  26DE  3188   	fcall	_CCP9_Initialize
  7660                           
  7661                           ;main.c: 922: CCP8_Initialize();
  7662  08B2  3196  26D4  3188   	fcall	_CCP8_Initialize
  7663                           
  7664                           ;main.c: 923: CCP7_Initialize();
  7665  08B5  3196  26CA  3188   	fcall	_CCP7_Initialize
  7666                           
  7667                           ;main.c: 924: CCP10_Initialize();
  7668  08B8  3196  26C0         	fcall	_CCP10_Initialize
  7669  08BA  0008               	return
  7670  08BB                     __end_of_allPeripheralInit:	
  7671                           
  7672                           	psect	text27
  7673  16AE                     __ptext27:	
  7674 ;; *************** function _TMR8_Initialize *****************
  7675 ;; Defined at:
  7676 ;;		line 1120 in file "main.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;		None
  7679 ;; Auto vars:     Size  Location     Type
  7680 ;;		None
  7681 ;; Return value:  Size  Location     Type
  7682 ;;                  1    wreg      void 
  7683 ;; Registers used:
  7684 ;;		wreg, status,2
  7685 ;; Tracked objects:
  7686 ;;		On entry : 0/0
  7687 ;;		On exit  : 0/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  7690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  7691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  7692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  7693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  7694 ;;Total ram usage:        0 bytes
  7695 ;; Hardware stack levels used:    1
  7696 ;; Hardware stack levels required when called:    2
  7697 ;; This function calls:
  7698 ;;		Nothing
  7699 ;; This function is called by:
  7700 ;;		_allPeripheralInit
  7701 ;; This function uses a non-reentrant model
  7702 ;;
  7703                           
  7704                           
  7705                           ;psect for function _TMR8_Initialize
  7706  16AE                     _TMR8_Initialize:	
  7707                           
  7708                           ;main.c: 1125: T8CON = 0x08;
  7709                           
  7710                           ;incstack = 0
  7711                           ; Regs used in _TMR8_Initialize: [wreg+status,2]
  7712  16AE  3008               	movlw	8
  7713  16AF  002B               	movlb	11	; select bank11
  7714  16B0  0097               	movwf	23	;volatile
  7715                           
  7716                           ;main.c: 1131: TMR8 = 0x00;
  7717  16B1  0195               	clrf	21	;volatile
  7718                           
  7719                           ;main.c: 1134: PIR2bits.TMR8IF = 0;
  7720  16B2  0020               	movlb	0	; select bank0
  7721  16B3  1092               	bcf	18,1	;volatile
  7722                           
  7723                           ;main.c: 1137: PIE2bits.TMR8IE = 1;
  7724  16B4  0021               	movlb	1	; select bank1
  7725  16B5  1492               	bsf	18,1	;volatile
  7726  16B6  0008               	return
  7727  16B7                     __end_of_TMR8_Initialize:	
  7728                           
  7729                           	psect	text28
  7730  16A5                     __ptext28:	
  7731 ;; *************** function _TMR6_Initialize *****************
  7732 ;; Defined at:
  7733 ;;		line 1101 in file "main.c"
  7734 ;; Parameters:    Size  Location     Type
  7735 ;;		None
  7736 ;; Auto vars:     Size  Location     Type
  7737 ;;		None
  7738 ;; Return value:  Size  Location     Type
  7739 ;;                  1    wreg      void 
  7740 ;; Registers used:
  7741 ;;		wreg, status,2
  7742 ;; Tracked objects:
  7743 ;;		On entry : 0/0
  7744 ;;		On exit  : 0/0
  7745 ;;		Unchanged: 0/0
  7746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  7747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  7748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  7749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  7750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  7751 ;;Total ram usage:        0 bytes
  7752 ;; Hardware stack levels used:    1
  7753 ;; Hardware stack levels required when called:    2
  7754 ;; This function calls:
  7755 ;;		Nothing
  7756 ;; This function is called by:
  7757 ;;		_allPeripheralInit
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           
  7761                           
  7762                           ;psect for function _TMR6_Initialize
  7763  16A5                     _TMR6_Initialize:	
  7764                           
  7765                           ;main.c: 1106: T6CON = 0x08;
  7766                           
  7767                           ;incstack = 0
  7768                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
  7769  16A5  3008               	movlw	8
  7770  16A6  0028               	movlb	8	; select bank8
  7771  16A7  009E               	movwf	30	;volatile
  7772                           
  7773                           ;main.c: 1112: TMR6 = 0x00;
  7774  16A8  019C               	clrf	28	;volatile
  7775                           
  7776                           ;main.c: 1115: PIR3bits.TMR6IF = 0;
  7777  16A9  0020               	movlb	0	; select bank0
  7778  16AA  1193               	bcf	19,3	;volatile
  7779                           
  7780                           ;main.c: 1118: PIE3bits.TMR6IE = 1;
  7781  16AB  0021               	movlb	1	; select bank1
  7782  16AC  1593               	bsf	19,3	;volatile
  7783  16AD  0008               	return
  7784  16AE                     __end_of_TMR6_Initialize:	
  7785                           
  7786                           	psect	text29
  7787  16F2                     __ptext29:	
  7788 ;; *************** function _TMR5_Initialize *****************
  7789 ;; Defined at:
  7790 ;;		line 1029 in file "main.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;		None
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;		None
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  1    wreg      void 
  7797 ;; Registers used:
  7798 ;;		status,2
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  7804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  7805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  7806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  7807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  7808 ;;Total ram usage:        0 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; Hardware stack levels required when called:    2
  7811 ;; This function calls:
  7812 ;;		Nothing
  7813 ;; This function is called by:
  7814 ;;		_allPeripheralInit
  7815 ;; This function uses a non-reentrant model
  7816 ;;
  7817                           
  7818                           
  7819                           ;psect for function _TMR5_Initialize
  7820  16F2                     _TMR5_Initialize:	
  7821                           
  7822                           ;main.c: 1034: T5CON = 0x00;
  7823                           
  7824                           ;incstack = 0
  7825                           ; Regs used in _TMR5_Initialize: [status,2]
  7826  16F2  0028               	movlb	8	; select bank8
  7827  16F3  019A               	clrf	26	;volatile
  7828                           
  7829                           ;main.c: 1037: T5GCON = 0x00;
  7830  16F4  019B               	clrf	27	;volatile
  7831                           
  7832                           ;main.c: 1040: TMR5H = 0x00;
  7833  16F5  0199               	clrf	25	;volatile
  7834                           
  7835                           ;main.c: 1043: TMR5L = 0x00;
  7836  16F6  0198               	clrf	24	;volatile
  7837                           
  7838                           ;main.c: 1046: PIR3bits.TMR5IF = 0;
  7839  16F7  0020               	movlb	0	; select bank0
  7840  16F8  1113               	bcf	19,2	;volatile
  7841                           
  7842                           ;main.c: 1049: PIE3bits.TMR5IE = 1;
  7843  16F9  0021               	movlb	1	; select bank1
  7844  16FA  1513               	bsf	19,2	;volatile
  7845  16FB  0008               	return
  7846  16FC                     __end_of_TMR5_Initialize:	
  7847                           
  7848                           	psect	text30
  7849  1707                     __ptext30:	
  7850 ;; *************** function _TMR4_Initialize *****************
  7851 ;; Defined at:
  7852 ;;		line 1077 in file "main.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;		None
  7855 ;; Auto vars:     Size  Location     Type
  7856 ;;		None
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  1    wreg      void 
  7859 ;; Registers used:
  7860 ;;		wreg, status,2
  7861 ;; Tracked objects:
  7862 ;;		On entry : 0/0
  7863 ;;		On exit  : 0/0
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  7866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  7867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  7868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  7869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  7870 ;;Total ram usage:        0 bytes
  7871 ;; Hardware stack levels used:    1
  7872 ;; Hardware stack levels required when called:    2
  7873 ;; This function calls:
  7874 ;;		Nothing
  7875 ;; This function is called by:
  7876 ;;		_allPeripheralInit
  7877 ;; This function uses a non-reentrant model
  7878 ;;
  7879                           
  7880                           
  7881                           ;psect for function _TMR4_Initialize
  7882  1707                     _TMR4_Initialize:	
  7883                           
  7884                           ;main.c: 1082: T4CON = 0x08;
  7885                           
  7886                           ;incstack = 0
  7887                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
  7888  1707  3008               	movlw	8
  7889  1708  0028               	movlb	8	; select bank8
  7890  1709  0097               	movwf	23	;volatile
  7891                           
  7892                           ;main.c: 1088: TMR4 = 0x00;
  7893  170A  0195               	clrf	21	;volatile
  7894                           
  7895                           ;main.c: 1091: PIR3bits.TMR4IF = 0;
  7896  170B  0020               	movlb	0	; select bank0
  7897  170C  1093               	bcf	19,1	;volatile
  7898                           
  7899                           ;main.c: 1094: PIE3bits.TMR4IE = 1;
  7900  170D  0021               	movlb	1	; select bank1
  7901  170E  1493               	bsf	19,1	;volatile
  7902                           
  7903                           ;main.c: 1095: GIE = 1;
  7904  170F  178B               	bsf	11,7	;volatile
  7905                           
  7906                           ;main.c: 1098: PEIE = 1;
  7907  1710  170B               	bsf	11,6	;volatile
  7908  1711  0008               	return
  7909  1712                     __end_of_TMR4_Initialize:	
  7910                           
  7911                           	psect	text31
  7912  1712                     __ptext31:	
  7913 ;; *************** function _TMR3_Initialize *****************
  7914 ;; Defined at:
  7915 ;;		line 999 in file "main.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;		None
  7918 ;; Auto vars:     Size  Location     Type
  7919 ;;		None
  7920 ;; Return value:  Size  Location     Type
  7921 ;;                  1    wreg      void 
  7922 ;; Registers used:
  7923 ;;		status,2
  7924 ;; Tracked objects:
  7925 ;;		On entry : 0/0
  7926 ;;		On exit  : 0/0
  7927 ;;		Unchanged: 0/0
  7928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  7929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  7930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  7931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  7932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  7933 ;;Total ram usage:        0 bytes
  7934 ;; Hardware stack levels used:    1
  7935 ;; Hardware stack levels required when called:    2
  7936 ;; This function calls:
  7937 ;;		Nothing
  7938 ;; This function is called by:
  7939 ;;		_allPeripheralInit
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           
  7944                           ;psect for function _TMR3_Initialize
  7945  1712                     _TMR3_Initialize:	
  7946                           
  7947                           ;main.c: 1002: T3CON = 0x00;
  7948                           
  7949                           ;incstack = 0
  7950                           ; Regs used in _TMR3_Initialize: [status,2]
  7951  1712  0028               	movlb	8	; select bank8
  7952  1713  0193               	clrf	19	;volatile
  7953                           
  7954                           ;main.c: 1005: T3GCON = 0x00;
  7955  1714  0194               	clrf	20	;volatile
  7956                           
  7957                           ;main.c: 1008: TMR3H = 0x00;
  7958  1715  0192               	clrf	18	;volatile
  7959                           
  7960                           ;main.c: 1011: TMR3L = 0x00;
  7961  1716  0191               	clrf	17	;volatile
  7962                           
  7963                           ;main.c: 1014: PIR3bits.TMR3IF = 0;
  7964  1717  0020               	movlb	0	; select bank0
  7965  1718  1013               	bcf	19,0	;volatile
  7966                           
  7967                           ;main.c: 1017: PIE3bits.TMR3IE = 1;
  7968  1719  0021               	movlb	1	; select bank1
  7969  171A  1413               	bsf	19,0	;volatile
  7970                           
  7971                           ;main.c: 1023: GIE = 1;
  7972  171B  178B               	bsf	11,7	;volatile
  7973                           
  7974                           ;main.c: 1026: PEIE = 1;
  7975  171C  170B               	bsf	11,6	;volatile
  7976  171D  0008               	return
  7977  171E                     __end_of_TMR3_Initialize:	
  7978                           
  7979                           	psect	text32
  7980  16E8                     __ptext32:	
  7981 ;; *************** function _TMR2_Initialize *****************
  7982 ;; Defined at:
  7983 ;;		line 1052 in file "main.c"
  7984 ;; Parameters:    Size  Location     Type
  7985 ;;		None
  7986 ;; Auto vars:     Size  Location     Type
  7987 ;;		None
  7988 ;; Return value:  Size  Location     Type
  7989 ;;                  1    wreg      void 
  7990 ;; Registers used:
  7991 ;;		wreg, status,2
  7992 ;; Tracked objects:
  7993 ;;		On entry : 0/0
  7994 ;;		On exit  : 0/0
  7995 ;;		Unchanged: 0/0
  7996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  7997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  7998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  7999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  8000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  8001 ;;Total ram usage:        0 bytes
  8002 ;; Hardware stack levels used:    1
  8003 ;; Hardware stack levels required when called:    2
  8004 ;; This function calls:
  8005 ;;		Nothing
  8006 ;; This function is called by:
  8007 ;;		_allPeripheralInit
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           
  8012                           ;psect for function _TMR2_Initialize
  8013  16E8                     _TMR2_Initialize:	
  8014                           
  8015                           ;main.c: 1057: T2CON = 0x08;
  8016                           
  8017                           ;incstack = 0
  8018                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8019  16E8  3008               	movlw	8
  8020  16E9  0020               	movlb	0	; select bank0
  8021  16EA  009C               	movwf	28	;volatile
  8022                           
  8023                           ;main.c: 1063: TMR2 = 0x00;
  8024  16EB  019A               	clrf	26	;volatile
  8025                           
  8026                           ;main.c: 1066: PIR1bits.TMR2IF = 0;
  8027  16EC  1091               	bcf	17,1	;volatile
  8028                           
  8029                           ;main.c: 1069: PIE1bits.TMR2IE = 1;
  8030  16ED  0021               	movlb	1	; select bank1
  8031  16EE  1491               	bsf	17,1	;volatile
  8032                           
  8033                           ;main.c: 1070: GIE = 1;
  8034  16EF  178B               	bsf	11,7	;volatile
  8035                           
  8036                           ;main.c: 1073: PEIE = 1;
  8037  16F0  170B               	bsf	11,6	;volatile
  8038  16F1  0008               	return
  8039  16F2                     __end_of_TMR2_Initialize:	
  8040                           
  8041                           	psect	text33
  8042  16FC                     __ptext33:	
  8043 ;; *************** function _TMR1_Initialize *****************
  8044 ;; Defined at:
  8045 ;;		line 968 in file "main.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;		None
  8048 ;; Auto vars:     Size  Location     Type
  8049 ;;		None
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  1    wreg      void 
  8052 ;; Registers used:
  8053 ;;		status,2
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  8059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  8060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  8061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  8062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  8063 ;;Total ram usage:        0 bytes
  8064 ;; Hardware stack levels used:    1
  8065 ;; Hardware stack levels required when called:    2
  8066 ;; This function calls:
  8067 ;;		Nothing
  8068 ;; This function is called by:
  8069 ;;		_allPeripheralInit
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           
  8074                           ;psect for function _TMR1_Initialize
  8075  16FC                     _TMR1_Initialize:	
  8076                           
  8077                           ;main.c: 971: T1CON = 0x00;
  8078                           
  8079                           ;incstack = 0
  8080                           ; Regs used in _TMR1_Initialize: [status,2]
  8081  16FC  0020               	movlb	0	; select bank0
  8082  16FD  0198               	clrf	24	;volatile
  8083                           
  8084                           ;main.c: 974: T1GCON = 0x00;
  8085  16FE  0199               	clrf	25	;volatile
  8086                           
  8087                           ;main.c: 977: TMR1H = 0x00;
  8088  16FF  0197               	clrf	23	;volatile
  8089                           
  8090                           ;main.c: 980: TMR1L = 0x00;
  8091  1700  0196               	clrf	22	;volatile
  8092                           
  8093                           ;main.c: 983: PIR1bits.TMR1IF = 0;
  8094  1701  1011               	bcf	17,0	;volatile
  8095                           
  8096                           ;main.c: 986: PIE1bits.TMR1IE = 1;
  8097  1702  0021               	movlb	1	; select bank1
  8098  1703  1411               	bsf	17,0	;volatile
  8099                           
  8100                           ;main.c: 992: GIE = 1;
  8101  1704  178B               	bsf	11,7	;volatile
  8102                           
  8103                           ;main.c: 995: PEIE = 1;
  8104  1705  170B               	bsf	11,6	;volatile
  8105  1706  0008               	return
  8106  1707                     __end_of_TMR1_Initialize:	
  8107                           
  8108                           	psect	text34
  8109  169C                     __ptext34:	
  8110 ;; *************** function _TMR10_Initialize *****************
  8111 ;; Defined at:
  8112 ;;		line 1139 in file "main.c"
  8113 ;; Parameters:    Size  Location     Type
  8114 ;;		None
  8115 ;; Auto vars:     Size  Location     Type
  8116 ;;		None
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  1    wreg      void 
  8119 ;; Registers used:
  8120 ;;		wreg, status,2
  8121 ;; Tracked objects:
  8122 ;;		On entry : 0/0
  8123 ;;		On exit  : 0/0
  8124 ;;		Unchanged: 0/0
  8125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  8126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  8127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  8128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  8129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  8130 ;;Total ram usage:        0 bytes
  8131 ;; Hardware stack levels used:    1
  8132 ;; Hardware stack levels required when called:    2
  8133 ;; This function calls:
  8134 ;;		Nothing
  8135 ;; This function is called by:
  8136 ;;		_allPeripheralInit
  8137 ;; This function uses a non-reentrant model
  8138 ;;
  8139                           
  8140                           
  8141                           ;psect for function _TMR10_Initialize
  8142  169C                     _TMR10_Initialize:	
  8143                           
  8144                           ;main.c: 1144: T10CON = 0x08;
  8145                           
  8146                           ;incstack = 0
  8147                           ; Regs used in _TMR10_Initialize: [wreg+status,2]
  8148  169C  3008               	movlw	8
  8149  169D  002B               	movlb	11	; select bank11
  8150  169E  009E               	movwf	30	;volatile
  8151                           
  8152                           ;main.c: 1150: TMR10 = 0x00;
  8153  169F  019C               	clrf	28	;volatile
  8154                           
  8155                           ;main.c: 1153: PIR2bits.TMR10IF = 0;
  8156  16A0  0020               	movlb	0	; select bank0
  8157  16A1  1112               	bcf	18,2	;volatile
  8158                           
  8159                           ;main.c: 1156: PIE2bits.TMR10IE = 1;
  8160  16A2  0021               	movlb	1	; select bank1
  8161  16A3  1512               	bsf	18,2	;volatile
  8162  16A4  0008               	return
  8163  16A5                     __end_of_TMR10_Initialize:	
  8164                           
  8165                           	psect	text35
  8166  179B                     __ptext35:	
  8167 ;; *************** function _EUSART_Initialize *****************
  8168 ;; Defined at:
  8169 ;;		line 930 in file "main.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;		None
  8172 ;; Auto vars:     Size  Location     Type
  8173 ;;		None
  8174 ;; Return value:  Size  Location     Type
  8175 ;;                  1    wreg      void 
  8176 ;; Registers used:
  8177 ;;		wreg
  8178 ;; Tracked objects:
  8179 ;;		On entry : 0/0
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  8183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  8184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  8185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  8186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  8187 ;;Total ram usage:        0 bytes
  8188 ;; Hardware stack levels used:    1
  8189 ;; Hardware stack levels required when called:    2
  8190 ;; This function calls:
  8191 ;;		Nothing
  8192 ;; This function is called by:
  8193 ;;		_allPeripheralInit
  8194 ;; This function uses a non-reentrant model
  8195 ;;
  8196                           
  8197                           
  8198                           ;psect for function _EUSART_Initialize
  8199  179B                     _EUSART_Initialize:	
  8200                           
  8201                           ;main.c: 931: PIE1bits.RC1IE = 0;
  8202                           
  8203                           ;incstack = 0
  8204                           ; Regs used in _EUSART_Initialize: [wreg]
  8205  179B  0021               	movlb	1	; select bank1
  8206  179C  1291               	bcf	17,5	;volatile
  8207                           
  8208                           ;main.c: 932: PIE1bits.TX1IE = 0;
  8209  179D  1211               	bcf	17,4	;volatile
  8210                           
  8211                           ;main.c: 937: BAUD1CON = 0x0A;
  8212  179E  300A               	movlw	10
  8213  179F  0023               	movlb	3	; select bank3
  8214  17A0  009F               	movwf	31	;volatile
  8215                           
  8216                           ;main.c: 940: RC1STA = 0x90;
  8217  17A1  3090               	movlw	144
  8218  17A2  009D               	movwf	29	;volatile
  8219                           
  8220                           ;main.c: 943: TX1STA = 0x24;
  8221  17A3  3024               	movlw	36
  8222  17A4  009E               	movwf	30	;volatile
  8223                           
  8224                           ;main.c: 948: SP1BRGL = 0xA0;
  8225  17A5  30A0               	movlw	160
  8226  17A6  009B               	movwf	27	;volatile
  8227                           
  8228                           ;main.c: 950: SP1BRGH = 0x01;
  8229  17A7  3001               	movlw	1
  8230  17A8  009C               	movwf	28	;volatile
  8231                           
  8232                           ;main.c: 953: GIE = 1;
  8233  17A9  178B               	bsf	11,7	;volatile
  8234                           
  8235                           ;main.c: 956: PEIE = 1;
  8236  17AA  170B               	bsf	11,6	;volatile
  8237                           
  8238                           ;main.c: 959: PIE1bits.RC1IE = 1;
  8239  17AB  0021               	movlb	1	; select bank1
  8240  17AC  1691               	bsf	17,5	;volatile
  8241                           
  8242                           ;main.c: 962: TX1STAbits.TXEN = 1;
  8243  17AD  0023               	movlb	3	; select bank3
  8244  17AE  169E               	bsf	30,5	;volatile
  8245                           
  8246                           ;main.c: 965: RC1STAbits.SPEN = 1;
  8247  17AF  179D               	bsf	29,7	;volatile
  8248  17B0  0008               	return
  8249  17B1                     __end_of_EUSART_Initialize:	
  8250                           
  8251                           	psect	text36
  8252  16DE                     __ptext36:	
  8253 ;; *************** function _CCP9_Initialize *****************
  8254 ;; Defined at:
  8255 ;;		line 1158 in file "main.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;		None
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;		None
  8260 ;; Return value:  Size  Location     Type
  8261 ;;                  1    wreg      void 
  8262 ;; Registers used:
  8263 ;;		wreg, status,2
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  8269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  8270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  8271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  8272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  8273 ;;Total ram usage:        0 bytes
  8274 ;; Hardware stack levels used:    1
  8275 ;; Hardware stack levels required when called:    2
  8276 ;; This function calls:
  8277 ;;		Nothing
  8278 ;; This function is called by:
  8279 ;;		_allPeripheralInit
  8280 ;; This function uses a non-reentrant model
  8281 ;;
  8282                           
  8283                           
  8284                           ;psect for function _CCP9_Initialize
  8285  16DE                     _CCP9_Initialize:	
  8286                           
  8287                           ;main.c: 1162: CCP9CON = 0x84;
  8288                           
  8289                           ;incstack = 0
  8290                           ; Regs used in _CCP9_Initialize: [wreg+status,2]
  8291  16DE  3084               	movlw	132
  8292  16DF  002C               	movlb	12	; select bank12
  8293  16E0  009C               	movwf	28	;volatile
  8294                           
  8295                           ;main.c: 1165: CCPR9H = 0x00;
  8296  16E1  019B               	clrf	27	;volatile
  8297                           
  8298                           ;main.c: 1168: CCPR9L = 0x00;
  8299  16E2  019A               	clrf	26	;volatile
  8300                           
  8301                           ;main.c: 1174: PIR4bits.CCP9IF = 0;
  8302  16E3  0020               	movlb	0	; select bank0
  8303  16E4  1314               	bcf	20,6	;volatile
  8304                           
  8305                           ;main.c: 1177: PIE4bits.CCP9IE = 1;
  8306  16E5  0021               	movlb	1	; select bank1
  8307  16E6  1714               	bsf	20,6	;volatile
  8308  16E7  0008               	return
  8309  16E8                     __end_of_CCP9_Initialize:	
  8310                           
  8311                           	psect	text37
  8312  16D4                     __ptext37:	
  8313 ;; *************** function _CCP8_Initialize *****************
  8314 ;; Defined at:
  8315 ;;		line 1221 in file "main.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;		None
  8318 ;; Auto vars:     Size  Location     Type
  8319 ;;		None
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  1    wreg      void 
  8322 ;; Registers used:
  8323 ;;		wreg, status,2
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  8329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  8330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  8331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  8332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  8333 ;;Total ram usage:        0 bytes
  8334 ;; Hardware stack levels used:    1
  8335 ;; Hardware stack levels required when called:    2
  8336 ;; This function calls:
  8337 ;;		Nothing
  8338 ;; This function is called by:
  8339 ;;		_allPeripheralInit
  8340 ;; This function uses a non-reentrant model
  8341 ;;
  8342                           
  8343                           
  8344                           ;psect for function _CCP8_Initialize
  8345  16D4                     _CCP8_Initialize:	
  8346                           
  8347                           ;main.c: 1225: CCP9CON = 0x84;
  8348                           
  8349                           ;incstack = 0
  8350                           ; Regs used in _CCP8_Initialize: [wreg+status,2]
  8351  16D4  3084               	movlw	132
  8352  16D5  002C               	movlb	12	; select bank12
  8353  16D6  009C               	movwf	28	;volatile
  8354                           
  8355                           ;main.c: 1228: CCPR8H = 0x00;
  8356  16D7  0198               	clrf	24	;volatile
  8357                           
  8358                           ;main.c: 1231: CCPR8L = 0x00;
  8359  16D8  0197               	clrf	23	;volatile
  8360                           
  8361                           ;main.c: 1237: PIR4bits.CCP8IF = 0;
  8362  16D9  0020               	movlb	0	; select bank0
  8363  16DA  1194               	bcf	20,3	;volatile
  8364                           
  8365                           ;main.c: 1240: PIE4bits.CCP8IE = 1;
  8366  16DB  0021               	movlb	1	; select bank1
  8367  16DC  1594               	bsf	20,3	;volatile
  8368  16DD  0008               	return
  8369  16DE                     __end_of_CCP8_Initialize:	
  8370                           
  8371                           	psect	text38
  8372  16CA                     __ptext38:	
  8373 ;; *************** function _CCP7_Initialize *****************
  8374 ;; Defined at:
  8375 ;;		line 1200 in file "main.c"
  8376 ;; Parameters:    Size  Location     Type
  8377 ;;		None
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;		None
  8380 ;; Return value:  Size  Location     Type
  8381 ;;                  1    wreg      void 
  8382 ;; Registers used:
  8383 ;;		wreg, status,2
  8384 ;; Tracked objects:
  8385 ;;		On entry : 0/0
  8386 ;;		On exit  : 0/0
  8387 ;;		Unchanged: 0/0
  8388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  8389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  8390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  8391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  8392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  8393 ;;Total ram usage:        0 bytes
  8394 ;; Hardware stack levels used:    1
  8395 ;; Hardware stack levels required when called:    2
  8396 ;; This function calls:
  8397 ;;		Nothing
  8398 ;; This function is called by:
  8399 ;;		_allPeripheralInit
  8400 ;; This function uses a non-reentrant model
  8401 ;;
  8402                           
  8403                           
  8404                           ;psect for function _CCP7_Initialize
  8405  16CA                     _CCP7_Initialize:	
  8406                           
  8407                           ;main.c: 1204: CCP7CON = 0x84;
  8408                           
  8409                           ;incstack = 0
  8410                           ; Regs used in _CCP7_Initialize: [wreg+status,2]
  8411  16CA  3084               	movlw	132
  8412  16CB  002C               	movlb	12	; select bank12
  8413  16CC  0096               	movwf	22	;volatile
  8414                           
  8415                           ;main.c: 1207: CCPR7H = 0x00;
  8416  16CD  0195               	clrf	21	;volatile
  8417                           
  8418                           ;main.c: 1210: CCPR7L = 0x00;
  8419  16CE  0194               	clrf	20	;volatile
  8420                           
  8421                           ;main.c: 1216: PIR4bits.CCP7IF = 0;
  8422  16CF  0020               	movlb	0	; select bank0
  8423  16D0  1114               	bcf	20,2	;volatile
  8424                           
  8425                           ;main.c: 1219: PIE4bits.CCP7IE = 1;
  8426  16D1  0021               	movlb	1	; select bank1
  8427  16D2  1514               	bsf	20,2	;volatile
  8428  16D3  0008               	return
  8429  16D4                     __end_of_CCP7_Initialize:	
  8430                           
  8431                           	psect	text39
  8432  16C0                     __ptext39:	
  8433 ;; *************** function _CCP10_Initialize *****************
  8434 ;; Defined at:
  8435 ;;		line 1179 in file "main.c"
  8436 ;; Parameters:    Size  Location     Type
  8437 ;;		None
  8438 ;; Auto vars:     Size  Location     Type
  8439 ;;		None
  8440 ;; Return value:  Size  Location     Type
  8441 ;;                  1    wreg      void 
  8442 ;; Registers used:
  8443 ;;		wreg, status,2
  8444 ;; Tracked objects:
  8445 ;;		On entry : 0/0
  8446 ;;		On exit  : 0/0
  8447 ;;		Unchanged: 0/0
  8448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  8449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  8450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  8451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  8452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  8453 ;;Total ram usage:        0 bytes
  8454 ;; Hardware stack levels used:    1
  8455 ;; Hardware stack levels required when called:    2
  8456 ;; This function calls:
  8457 ;;		Nothing
  8458 ;; This function is called by:
  8459 ;;		_allPeripheralInit
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463                           
  8464                           ;psect for function _CCP10_Initialize
  8465  16C0                     _CCP10_Initialize:	
  8466                           
  8467                           ;main.c: 1183: CCP10CON = 0x84;
  8468                           
  8469                           ;incstack = 0
  8470                           ; Regs used in _CCP10_Initialize: [wreg+status,2]
  8471  16C0  3084               	movlw	132
  8472  16C1  002C               	movlb	12	; select bank12
  8473  16C2  009F               	movwf	31	;volatile
  8474                           
  8475                           ;main.c: 1186: CCPR10H = 0x00;
  8476  16C3  019E               	clrf	30	;volatile
  8477                           
  8478                           ;main.c: 1189: CCPR10L = 0x00;
  8479  16C4  019D               	clrf	29	;volatile
  8480                           
  8481                           ;main.c: 1195: PIR4bits.CCP10IF = 0;
  8482  16C5  0020               	movlb	0	; select bank0
  8483  16C6  1394               	bcf	20,7	;volatile
  8484                           
  8485                           ;main.c: 1198: PIE4bits.CCP10IE = 1;
  8486  16C7  0021               	movlb	1	; select bank1
  8487  16C8  1794               	bsf	20,7	;volatile
  8488  16C9  0008               	return
  8489  16CA                     __end_of_CCP10_Initialize:	
  8490                           
  8491                           	psect	text40
  8492  174C                     __ptext40:	
  8493 ;; *************** function _TransmissionIndicationLedBlinking *****************
  8494 ;; Defined at:
  8495 ;;		line 1263 in file "main.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;		None
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;		None
  8500 ;; Return value:  Size  Location     Type
  8501 ;;                  1    wreg      void 
  8502 ;; Registers used:
  8503 ;;		wreg
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  8509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  8510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  8511 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  8512 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0
  8513 ;;Total ram usage:        2 bytes
  8514 ;; Hardware stack levels used:    1
  8515 ;; Hardware stack levels required when called:    2
  8516 ;; This function calls:
  8517 ;;		Nothing
  8518 ;; This function is called by:
  8519 ;;		_main
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523                           
  8524                           ;psect for function _TransmissionIndicationLedBlinking
  8525  174C                     _TransmissionIndicationLedBlinking:	
  8526                           
  8527                           ;main.c: 1264: PORTFbits.RF0 = 0;
  8528                           
  8529                           ;incstack = 0
  8530                           ; Regs used in _TransmissionIndicationLedBlinking: [wreg]
  8531  174C  0025               	movlb	5	; select bank5
  8532  174D  100C               	bcf	12,0	;volatile
  8533                           
  8534                           ;main.c: 1265: _delay((unsigned long)((100)*(16000000/4000.0)));
  8535  174E  3003               	movlw	3
  8536  174F  0020               	movlb	0	; select bank0
  8537  1750  00A1               	movwf	??_TransmissionIndicationLedBlinking+1
  8538  1751  3008               	movlw	8
  8539  1752  00A0               	movwf	??_TransmissionIndicationLedBlinking
  8540  1753  3077               	movlw	119
  8541  1754                     u8787:	
  8542  1754  0B89               	decfsz	9,f
  8543  1755  2F54               	goto	u8787
  8544  1756  0BA0               	decfsz	??_TransmissionIndicationLedBlinking,f
  8545  1757  2F54               	goto	u8787
  8546  1758  0BA1               	decfsz	??_TransmissionIndicationLedBlinking+1,f
  8547  1759  2F54               	goto	u8787
  8548                           
  8549                           ;main.c: 1266: PORTFbits.RF0 = 1;
  8550  175A  0025               	movlb	5	; select bank5
  8551  175B  140C               	bsf	12,0	;volatile
  8552  175C  0008               	return
  8553  175D                     __end_of_TransmissionIndicationLedBlinking:	
  8554                           
  8555                           	psect	text41
  8556  0A34                     __ptext41:	
  8557 ;; *************** function _SwitchOnStatustToGatway *****************
  8558 ;; Defined at:
  8559 ;;		line 1291 in file "main.c"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;  SwitchOnNumb    2    0[BANK0 ] const int 
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;		None
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  1    wreg      void 
  8566 ;; Registers used:
  8567 ;;		wreg, status,2, status,0
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  8573 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  8574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  8575 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  8576 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  8577 ;;Total ram usage:        3 bytes
  8578 ;; Hardware stack levels used:    1
  8579 ;; Hardware stack levels required when called:    2
  8580 ;; This function calls:
  8581 ;;		Nothing
  8582 ;; This function is called by:
  8583 ;;		_main
  8584 ;; This function uses a non-reentrant model
  8585 ;;
  8586                           
  8587                           
  8588                           ;psect for function _SwitchOnStatustToGatway
  8589  0A34                     _SwitchOnStatustToGatway:	
  8590                           
  8591                           ;main.c: 1293: TX1REG = 'R';_delay((unsigned long)((1)*(16000000/4000.0)));
  8592                           
  8593                           ;incstack = 0
  8594                           ; Regs used in _SwitchOnStatustToGatway: [wreg+status,2+status,0]
  8595  0A34  3052               	movlw	82
  8596  0A35  0023               	movlb	3	; select bank3
  8597  0A36  009A               	movwf	26	;volatile
  8598  0A37  3006               	movlw	6
  8599  0A38  0020               	movlb	0	; select bank0
  8600  0A39  00A2               	movwf	??_SwitchOnStatustToGatway
  8601  0A3A  3030               	movlw	48
  8602  0A3B                     u8797:	
  8603  0A3B  0B89               	decfsz	9,f
  8604  0A3C  2A3B               	goto	u8797
  8605  0A3D  0BA2               	decfsz	??_SwitchOnStatustToGatway,f
  8606  0A3E  2A3B               	goto	u8797
  8607  0A3F  0000               	nop
  8608                           
  8609                           ;main.c: 1294: TX1REG = '1';_delay((unsigned long)((1)*(16000000/4000.0)));
  8610  0A40  3031               	movlw	49
  8611  0A41  0023               	movlb	3	; select bank3
  8612  0A42  009A               	movwf	26	;volatile
  8613  0A43  3006               	movlw	6
  8614  0A44  0020               	movlb	0	; select bank0
  8615  0A45  00A2               	movwf	??_SwitchOnStatustToGatway
  8616  0A46  3030               	movlw	48
  8617  0A47                     u8807:	
  8618  0A47  0B89               	decfsz	9,f
  8619  0A48  2A47               	goto	u8807
  8620  0A49  0BA2               	decfsz	??_SwitchOnStatustToGatway,f
  8621  0A4A  2A47               	goto	u8807
  8622  0A4B  0000               	nop
  8623                           
  8624                           ;main.c: 1295: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  8625  0A4C  3030               	movlw	48
  8626  0A4D  0023               	movlb	3	; select bank3
  8627  0A4E  009A               	movwf	26	;volatile
  8628  0A4F  3006               	movlw	6
  8629  0A50  0020               	movlb	0	; select bank0
  8630  0A51  00A2               	movwf	??_SwitchOnStatustToGatway
  8631  0A52  3030               	movlw	48
  8632  0A53                     u8817:	
  8633  0A53  0B89               	decfsz	9,f
  8634  0A54  2A53               	goto	u8817
  8635  0A55  0BA2               	decfsz	??_SwitchOnStatustToGatway,f
  8636  0A56  2A53               	goto	u8817
  8637  0A57  0000               	nop
  8638                           
  8639                           ;main.c: 1296: TX1REG = SwitchOnNumber+'0';_delay((unsigned long)((1)*(16000000/4000.0))
      +                          );
  8640  0A58  0020               	movlb	0	; select bank0
  8641  0A59  0820               	movf	SwitchOnStatustToGatway@SwitchOnNumber,w
  8642  0A5A  3E30               	addlw	48
  8643  0A5B  0023               	movlb	3	; select bank3
  8644  0A5C  009A               	movwf	26	;volatile
  8645  0A5D  3006               	movlw	6
  8646  0A5E  0020               	movlb	0	; select bank0
  8647  0A5F  00A2               	movwf	??_SwitchOnStatustToGatway
  8648  0A60  3030               	movlw	48
  8649  0A61                     u8827:	
  8650  0A61  0B89               	decfsz	9,f
  8651  0A62  2A61               	goto	u8827
  8652  0A63  0BA2               	decfsz	??_SwitchOnStatustToGatway,f
  8653  0A64  2A61               	goto	u8827
  8654  0A65  0000               	nop
  8655  0A66  0008               	return
  8656  0A67                     __end_of_SwitchOnStatustToGatway:	
  8657                           
  8658                           	psect	text42
  8659  0A01                     __ptext42:	
  8660 ;; *************** function _SwitchOffStatustToGatway *****************
  8661 ;; Defined at:
  8662 ;;		line 1284 in file "main.c"
  8663 ;; Parameters:    Size  Location     Type
  8664 ;;  SwitchOffNum    2    0[BANK0 ] const int 
  8665 ;; Auto vars:     Size  Location     Type
  8666 ;;		None
  8667 ;; Return value:  Size  Location     Type
  8668 ;;                  1    wreg      void 
  8669 ;; Registers used:
  8670 ;;		wreg, status,2, status,0
  8671 ;; Tracked objects:
  8672 ;;		On entry : 0/0
  8673 ;;		On exit  : 0/0
  8674 ;;		Unchanged: 0/0
  8675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  8676 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0
  8677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  8678 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0
  8679 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0
  8680 ;;Total ram usage:        3 bytes
  8681 ;; Hardware stack levels used:    1
  8682 ;; Hardware stack levels required when called:    2
  8683 ;; This function calls:
  8684 ;;		Nothing
  8685 ;; This function is called by:
  8686 ;;		_main
  8687 ;; This function uses a non-reentrant model
  8688 ;;
  8689                           
  8690                           
  8691                           ;psect for function _SwitchOffStatustToGatway
  8692  0A01                     _SwitchOffStatustToGatway:	
  8693                           
  8694                           ;main.c: 1286: TX1REG = 'R';_delay((unsigned long)((1)*(16000000/4000.0)));
  8695                           
  8696                           ;incstack = 0
  8697                           ; Regs used in _SwitchOffStatustToGatway: [wreg+status,2+status,0]
  8698  0A01  3052               	movlw	82
  8699  0A02  0023               	movlb	3	; select bank3
  8700  0A03  009A               	movwf	26	;volatile
  8701  0A04  3006               	movlw	6
  8702  0A05  0020               	movlb	0	; select bank0
  8703  0A06  00A2               	movwf	??_SwitchOffStatustToGatway
  8704  0A07  3030               	movlw	48
  8705  0A08                     u8837:	
  8706  0A08  0B89               	decfsz	9,f
  8707  0A09  2A08               	goto	u8837
  8708  0A0A  0BA2               	decfsz	??_SwitchOffStatustToGatway,f
  8709  0A0B  2A08               	goto	u8837
  8710  0A0C  0000               	nop
  8711                           
  8712                           ;main.c: 1287: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  8713  0A0D  3030               	movlw	48
  8714  0A0E  0023               	movlb	3	; select bank3
  8715  0A0F  009A               	movwf	26	;volatile
  8716  0A10  3006               	movlw	6
  8717  0A11  0020               	movlb	0	; select bank0
  8718  0A12  00A2               	movwf	??_SwitchOffStatustToGatway
  8719  0A13  3030               	movlw	48
  8720  0A14                     u8847:	
  8721  0A14  0B89               	decfsz	9,f
  8722  0A15  2A14               	goto	u8847
  8723  0A16  0BA2               	decfsz	??_SwitchOffStatustToGatway,f
  8724  0A17  2A14               	goto	u8847
  8725  0A18  0000               	nop
  8726                           
  8727                           ;main.c: 1288: TX1REG = '0';_delay((unsigned long)((1)*(16000000/4000.0)));
  8728  0A19  3030               	movlw	48
  8729  0A1A  0023               	movlb	3	; select bank3
  8730  0A1B  009A               	movwf	26	;volatile
  8731  0A1C  3006               	movlw	6
  8732  0A1D  0020               	movlb	0	; select bank0
  8733  0A1E  00A2               	movwf	??_SwitchOffStatustToGatway
  8734  0A1F  3030               	movlw	48
  8735  0A20                     u8857:	
  8736  0A20  0B89               	decfsz	9,f
  8737  0A21  2A20               	goto	u8857
  8738  0A22  0BA2               	decfsz	??_SwitchOffStatustToGatway,f
  8739  0A23  2A20               	goto	u8857
  8740  0A24  0000               	nop
  8741                           
  8742                           ;main.c: 1289: TX1REG = SwitchOffNumber+'0';_delay((unsigned long)((1)*(16000000/4000.0)
      +                          ));
  8743  0A25  0020               	movlb	0	; select bank0
  8744  0A26  0820               	movf	SwitchOffStatustToGatway@SwitchOffNumber,w
  8745  0A27  3E30               	addlw	48
  8746  0A28  0023               	movlb	3	; select bank3
  8747  0A29  009A               	movwf	26	;volatile
  8748  0A2A  3006               	movlw	6
  8749  0A2B  0020               	movlb	0	; select bank0
  8750  0A2C  00A2               	movwf	??_SwitchOffStatustToGatway
  8751  0A2D  3030               	movlw	48
  8752  0A2E                     u8867:	
  8753  0A2E  0B89               	decfsz	9,f
  8754  0A2F  2A2E               	goto	u8867
  8755  0A30  0BA2               	decfsz	??_SwitchOffStatustToGatway,f
  8756  0A31  2A2E               	goto	u8867
  8757  0A32  0000               	nop
  8758  0A33  0008               	return
  8759  0A34                     __end_of_SwitchOffStatustToGatway:	
  8760                           
  8761                           	psect	text43
  8762  173B                     __ptext43:	
  8763 ;; *************** function _ReceivingIndicationLedBlinking *****************
  8764 ;; Defined at:
  8765 ;;		line 1268 in file "main.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;		None
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;		None
  8770 ;; Return value:  Size  Location     Type
  8771 ;;                  1    wreg      void 
  8772 ;; Registers used:
  8773 ;;		wreg
  8774 ;; Tracked objects:
  8775 ;;		On entry : 0/0
  8776 ;;		On exit  : 0/0
  8777 ;;		Unchanged: 0/0
  8778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  8779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  8780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  8781 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0
  8782 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0
  8783 ;;Total ram usage:        2 bytes
  8784 ;; Hardware stack levels used:    1
  8785 ;; Hardware stack levels required when called:    2
  8786 ;; This function calls:
  8787 ;;		Nothing
  8788 ;; This function is called by:
  8789 ;;		_main
  8790 ;; This function uses a non-reentrant model
  8791 ;;
  8792                           
  8793                           
  8794                           ;psect for function _ReceivingIndicationLedBlinking
  8795  173B                     _ReceivingIndicationLedBlinking:	
  8796                           
  8797                           ;main.c: 1269: PORTFbits.RF1 = 0;
  8798                           
  8799                           ;incstack = 0
  8800                           ; Regs used in _ReceivingIndicationLedBlinking: [wreg]
  8801  173B  0025               	movlb	5	; select bank5
  8802  173C  108C               	bcf	12,1	;volatile
  8803                           
  8804                           ;main.c: 1270: _delay((unsigned long)((100)*(16000000/4000.0)));
  8805  173D  3003               	movlw	3
  8806  173E  0020               	movlb	0	; select bank0
  8807  173F  00A1               	movwf	??_ReceivingIndicationLedBlinking+1
  8808  1740  3008               	movlw	8
  8809  1741  00A0               	movwf	??_ReceivingIndicationLedBlinking
  8810  1742  3077               	movlw	119
  8811  1743                     u8877:	
  8812  1743  0B89               	decfsz	9,f
  8813  1744  2F43               	goto	u8877
  8814  1745  0BA0               	decfsz	??_ReceivingIndicationLedBlinking,f
  8815  1746  2F43               	goto	u8877
  8816  1747  0BA1               	decfsz	??_ReceivingIndicationLedBlinking+1,f
  8817  1748  2F43               	goto	u8877
  8818                           
  8819                           ;main.c: 1271: PORTFbits.RF1 = 1;
  8820  1749  0025               	movlb	5	; select bank5
  8821  174A  148C               	bsf	12,1	;volatile
  8822  174B  0008               	return
  8823  174C                     __end_of_ReceivingIndicationLedBlinking:	
  8824                           
  8825                           	psect	text44
  8826  08E5                     __ptext44:	
  8827 ;; *************** function _GPIO_pin_Initialize *****************
  8828 ;; Defined at:
  8829 ;;		line 860 in file "main.c"
  8830 ;; Parameters:    Size  Location     Type
  8831 ;;		None
  8832 ;; Auto vars:     Size  Location     Type
  8833 ;;		None
  8834 ;; Return value:  Size  Location     Type
  8835 ;;                  1    wreg      void 
  8836 ;; Registers used:
  8837 ;;		status,2, status,0, pclath, cstack
  8838 ;; Tracked objects:
  8839 ;;		On entry : 0/0
  8840 ;;		On exit  : 0/0
  8841 ;;		Unchanged: 0/0
  8842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  8843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  8844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  8845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  8846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  8847 ;;Total ram usage:        0 bytes
  8848 ;; Hardware stack levels used:    1
  8849 ;; Hardware stack levels required when called:    3
  8850 ;; This function calls:
  8851 ;;		_clearAllPorts
  8852 ;;		_pinINIT_extra
  8853 ;; This function is called by:
  8854 ;;		_main
  8855 ;; This function uses a non-reentrant model
  8856 ;;
  8857                           
  8858                           
  8859                           ;psect for function _GPIO_pin_Initialize
  8860  08E5                     _GPIO_pin_Initialize:	
  8861                           
  8862                           ;main.c: 861: clearAllPorts();
  8863                           
  8864                           ;incstack = 0
  8865                           ; Regs used in _GPIO_pin_Initialize: [status,2+status,0+pclath+cstack]
  8866  08E5  3197  275D  3188   	fcall	_clearAllPorts
  8867                           
  8868                           ;main.c: 862: pinINIT_extra();
  8869  08E8  3197  2786  3188   	fcall	_pinINIT_extra
  8870                           
  8871                           ;main.c: 863: TRISDbits.TRISD6 = 1;
  8872  08EB  0021               	movlb	1	; select bank1
  8873  08EC  170F               	bsf	15,6	;volatile
  8874                           
  8875                           ;main.c: 864: TRISDbits.TRISD7 = 1;
  8876  08ED  178F               	bsf	15,7	;volatile
  8877                           
  8878                           ;main.c: 865: TRISBbits.TRISB0 = 1;
  8879  08EE  140D               	bsf	13,0	;volatile
  8880                           
  8881                           ;main.c: 866: TRISBbits.TRISB1 = 1;
  8882  08EF  148D               	bsf	13,1	;volatile
  8883                           
  8884                           ;main.c: 867: TRISBbits.TRISB2 = 1;
  8885  08F0  150D               	bsf	13,2	;volatile
  8886                           
  8887                           ;main.c: 868: TRISBbits.TRISB3 = 1;
  8888  08F1  158D               	bsf	13,3	;volatile
  8889                           
  8890                           ;main.c: 869: TRISBbits.TRISB4 = 1;
  8891  08F2  160D               	bsf	13,4	;volatile
  8892                           
  8893                           ;main.c: 870: TRISBbits.TRISB5 = 1;
  8894  08F3  168D               	bsf	13,5	;volatile
  8895                           
  8896                           ;main.c: 871: TRISDbits.TRISD5 = 1;
  8897  08F4  168F               	bsf	15,5	;volatile
  8898                           
  8899                           ;main.c: 875: TRISEbits.TRISE0 = 0;
  8900  08F5  1010               	bcf	16,0	;volatile
  8901                           
  8902                           ;main.c: 876: TRISEbits.TRISE1 = 0;
  8903  08F6  1090               	bcf	16,1	;volatile
  8904                           
  8905                           ;main.c: 877: TRISGbits.TRISG0 = 0;
  8906  08F7  0026               	movlb	6	; select bank6
  8907  08F8  100D               	bcf	13,0	;volatile
  8908                           
  8909                           ;main.c: 878: TRISGbits.TRISG3 = 0;
  8910  08F9  118D               	bcf	13,3	;volatile
  8911                           
  8912                           ;main.c: 879: TRISGbits.TRISG4 = 0;
  8913  08FA  120D               	bcf	13,4	;volatile
  8914                           
  8915                           ;main.c: 880: TRISFbits.TRISF6 = 0;
  8916  08FB  130C               	bcf	12,6	;volatile
  8917                           
  8918                           ;main.c: 881: TRISFbits.TRISF5 = 0;
  8919  08FC  128C               	bcf	12,5	;volatile
  8920                           
  8921                           ;main.c: 882: TRISFbits.TRISF4 = 0;
  8922  08FD  120C               	bcf	12,4	;volatile
  8923                           
  8924                           ;main.c: 883: TRISFbits.TRISF3 = 0;
  8925  08FE  118C               	bcf	12,3	;volatile
  8926                           
  8927                           ;main.c: 886: TRISEbits.TRISE3 = 1;
  8928  08FF  0021               	movlb	1	; select bank1
  8929  0900  1590               	bsf	16,3	;volatile
  8930                           
  8931                           ;main.c: 887: TRISEbits.TRISE3 = 1;
  8932  0901  1590               	bsf	16,3	;volatile
  8933                           
  8934                           ;main.c: 888: TRISEbits.TRISE5 = 1;
  8935  0902  1690               	bsf	16,5	;volatile
  8936                           
  8937                           ;main.c: 889: TRISEbits.TRISE4 = 1;
  8938  0903  1610               	bsf	16,4	;volatile
  8939                           
  8940                           ;main.c: 890: TRISFbits.TRISF0 = 0;
  8941  0904  0026               	movlb	6	; select bank6
  8942  0905  100C               	bcf	12,0	;volatile
  8943                           
  8944                           ;main.c: 891: TRISFbits.TRISF1 = 0;
  8945  0906  108C               	bcf	12,1	;volatile
  8946                           
  8947                           ;main.c: 892: TRISFbits.TRISF2 = 0;
  8948  0907  110C               	bcf	12,2	;volatile
  8949                           
  8950                           ;main.c: 895: TRISDbits.TRISD4 = 0;
  8951  0908  0021               	movlb	1	; select bank1
  8952  0909  120F               	bcf	15,4	;volatile
  8953                           
  8954                           ;main.c: 896: TRISDbits.TRISD3 = 0;
  8955  090A  118F               	bcf	15,3	;volatile
  8956                           
  8957                           ;main.c: 897: TRISDbits.TRISD2 = 0;
  8958  090B  110F               	bcf	15,2	;volatile
  8959                           
  8960                           ;main.c: 901: TRISCbits.TRISC6 = 0;
  8961  090C  130E               	bcf	14,6	;volatile
  8962                           
  8963                           ;main.c: 902: TRISCbits.TRISC7 = 1;
  8964  090D  178E               	bsf	14,7	;volatile
  8965                           
  8966                           ;main.c: 904: clearAllPorts();
  8967  090E  3197  275D         	fcall	_clearAllPorts
  8968  0910  0008               	return
  8969  0911                     __end_of_GPIO_pin_Initialize:	
  8970                           
  8971                           	psect	text45
  8972  1786                     __ptext45:	
  8973 ;; *************** function _pinINIT_extra *****************
  8974 ;; Defined at:
  8975 ;;		line 1323 in file "main.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;		None
  8978 ;; Auto vars:     Size  Location     Type
  8979 ;;		None
  8980 ;; Return value:  Size  Location     Type
  8981 ;;                  1    wreg      void 
  8982 ;; Registers used:
  8983 ;;		status,2
  8984 ;; Tracked objects:
  8985 ;;		On entry : 0/0
  8986 ;;		On exit  : 0/0
  8987 ;;		Unchanged: 0/0
  8988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  8989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  8990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  8991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  8992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  8993 ;;Total ram usage:        0 bytes
  8994 ;; Hardware stack levels used:    1
  8995 ;; Hardware stack levels required when called:    2
  8996 ;; This function calls:
  8997 ;;		Nothing
  8998 ;; This function is called by:
  8999 ;;		_GPIO_pin_Initialize
  9000 ;; This function uses a non-reentrant model
  9001 ;;
  9002                           
  9003                           
  9004                           ;psect for function _pinINIT_extra
  9005  1786                     _pinINIT_extra:	
  9006                           
  9007                           ;main.c: 1324: ANSELG=0x00; WPUG = 0;
  9008                           
  9009                           ;incstack = 0
  9010                           ; Regs used in _pinINIT_extra: [status,2]
  9011  1786  0028               	movlb	8	; select bank8
  9012  1787  018D               	clrf	13	;volatile
  9013  1788  0029               	movlb	9	; select bank9
  9014  1789  018D               	clrf	13	;volatile
  9015                           
  9016                           ;main.c: 1326: ANSELF=0x00;
  9017  178A  0028               	movlb	8	; select bank8
  9018  178B  018C               	clrf	12	;volatile
  9019                           
  9020                           ;main.c: 1328: ANSELE=0x00; WPUE=0x00;
  9021  178C  0023               	movlb	3	; select bank3
  9022  178D  0190               	clrf	16	;volatile
  9023  178E  0024               	movlb	4	; select bank4
  9024  178F  0190               	clrf	16	;volatile
  9025                           
  9026                           ;main.c: 1330: ANSELD=0x00; WPUD=0x00;
  9027  1790  0023               	movlb	3	; select bank3
  9028  1791  018F               	clrf	15	;volatile
  9029  1792  0024               	movlb	4	; select bank4
  9030  1793  018F               	clrf	15	;volatile
  9031                           
  9032                           ;main.c: 1332: ANSELB=0x00; WPUB=0x00;
  9033  1794  0023               	movlb	3	; select bank3
  9034  1795  018D               	clrf	13	;volatile
  9035  1796  0024               	movlb	4	; select bank4
  9036  1797  018D               	clrf	13	;volatile
  9037                           
  9038                           ;main.c: 1334: ANSELA=0x00;
  9039  1798  0023               	movlb	3	; select bank3
  9040  1799  018C               	clrf	12	;volatile
  9041  179A  0008               	return
  9042  179B                     __end_of_pinINIT_extra:	
  9043                           
  9044                           	psect	text46
  9045  175D                     __ptext46:	
  9046 ;; *************** function _clearAllPorts *****************
  9047 ;; Defined at:
  9048 ;;		line 1340 in file "main.c"
  9049 ;; Parameters:    Size  Location     Type
  9050 ;;		None
  9051 ;; Auto vars:     Size  Location     Type
  9052 ;;		None
  9053 ;; Return value:  Size  Location     Type
  9054 ;;                  1    wreg      void 
  9055 ;; Registers used:
  9056 ;;		None
  9057 ;; Tracked objects:
  9058 ;;		On entry : 0/0
  9059 ;;		On exit  : 0/0
  9060 ;;		Unchanged: 0/0
  9061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  9062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  9063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  9064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0
  9065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0
  9066 ;;Total ram usage:        0 bytes
  9067 ;; Hardware stack levels used:    1
  9068 ;; Hardware stack levels required when called:    2
  9069 ;; This function calls:
  9070 ;;		Nothing
  9071 ;; This function is called by:
  9072 ;;		_GPIO_pin_Initialize
  9073 ;; This function uses a non-reentrant model
  9074 ;;
  9075                           
  9076                           
  9077                           ;psect for function _clearAllPorts
  9078  175D                     _clearAllPorts:	
  9079                           
  9080                           ;main.c: 1344: PORTEbits.RE0=0;
  9081                           
  9082                           ;incstack = 0
  9083                           ; Regs used in _clearAllPorts: []
  9084  175D  0020               	movlb	0	; select bank0
  9085  175E  1010               	bcf	16,0	;volatile
  9086                           
  9087                           ;main.c: 1345: PORTEbits.RE1=0;
  9088  175F  1090               	bcf	16,1	;volatile
  9089                           
  9090                           ;main.c: 1346: PORTGbits.RG0=0;
  9091  1760  0025               	movlb	5	; select bank5
  9092  1761  100D               	bcf	13,0	;volatile
  9093                           
  9094                           ;main.c: 1347: PORTGbits.RG3=0;
  9095  1762  118D               	bcf	13,3	;volatile
  9096                           
  9097                           ;main.c: 1348: PORTGbits.RG4=0;
  9098  1763  120D               	bcf	13,4	;volatile
  9099                           
  9100                           ;main.c: 1349: PORTFbits.RF6=0;
  9101  1764  130C               	bcf	12,6	;volatile
  9102                           
  9103                           ;main.c: 1350: PORTFbits.RF5=0;
  9104  1765  128C               	bcf	12,5	;volatile
  9105                           
  9106                           ;main.c: 1351: PORTFbits.RF4=0;
  9107  1766  120C               	bcf	12,4	;volatile
  9108                           
  9109                           ;main.c: 1352: PORTFbits.RF0 = 1;
  9110  1767  140C               	bsf	12,0	;volatile
  9111                           
  9112                           ;main.c: 1353: PORTFbits.RF1 = 1;
  9113  1768  148C               	bsf	12,1	;volatile
  9114                           
  9115                           ;main.c: 1354: PORTFbits.RF2 = 1;
  9116  1769  150C               	bsf	12,2	;volatile
  9117                           
  9118                           ;main.c: 1356: PORTDbits.RD4=0;
  9119  176A  0020               	movlb	0	; select bank0
  9120  176B  120F               	bcf	15,4	;volatile
  9121                           
  9122                           ;main.c: 1357: PORTDbits.RD3=0;
  9123  176C  118F               	bcf	15,3	;volatile
  9124                           
  9125                           ;main.c: 1358: PORTDbits.RD2=0;
  9126  176D  110F               	bcf	15,2	;volatile
  9127                           
  9128                           ;main.c: 1359: PORTFbits.RF3 = 0;
  9129  176E  0025               	movlb	5	; select bank5
  9130  176F  118C               	bcf	12,3	;volatile
  9131  1770  0008               	return
  9132  1771                     __end_of_clearAllPorts:	
  9133                           
  9134                           	psect	intentry
  9135  0004                     __pintentry:	
  9136 ;; *************** function _isr *****************
  9137 ;; Defined at:
  9138 ;;		line 315 in file "main.c"
  9139 ;; Parameters:    Size  Location     Type
  9140 ;;		None
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;		None
  9143 ;; Return value:  Size  Location     Type
  9144 ;;                  1    wreg      void 
  9145 ;; Registers used:
  9146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9147 ;; Tracked objects:
  9148 ;;		On entry : 0/0
  9149 ;;		On exit  : 0/0
  9150 ;;		Unchanged: 0/0
  9151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  9152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0
  9153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  9154 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0
  9155 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0
  9156 ;;Total ram usage:        2 bytes
  9157 ;; Hardware stack levels used:    1
  9158 ;; Hardware stack levels required when called:    1
  9159 ;; This function calls:
  9160 ;;		_errorsISR
  9161 ;; This function is called by:
  9162 ;;		Interrupt level 1
  9163 ;; This function uses a non-reentrant model
  9164 ;;
  9165                           
  9166  0004                     _isr:	
  9167                           
  9168                           ;incstack = 0
  9169  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9170                           
  9171                           ; Regs used in _isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9172  0005  3180               	pagesel	$
  9173  0006  0020               	movlb	0	; select bank0
  9174  0007  087F               	movf	127,w
  9175  0008  00F9               	movwf	??_isr+1
  9176                           
  9177                           ;main.c: 318: if(RC1IF){
  9178  0009  1E91               	btfss	17,5	;volatile
  9179  000A  2865               	goto	i1l4199
  9180                           
  9181                           ;main.c: 319: if(RC1STAbits.OERR){
  9182  000B  0023               	movlb	3	; select bank3
  9183  000C  1C9D               	btfss	29,1	;volatile
  9184  000D  2817               	goto	i1l4169
  9185                           
  9186                           ;main.c: 320: RC1STAbits.CREN = 0;
  9187  000E  121D               	bcf	29,4	;volatile
  9188                           
  9189                           ;main.c: 321: RC1STAbits.CREN = 1;
  9190  000F  161D               	bsf	29,4	;volatile
  9191                           
  9192                           ;main.c: 322: errorsISR("EROV");
  9193  0010  3025               	movlw	low (STR_12| (0+32768))
  9194  0011  00F5               	movwf	errorsISR@errNum
  9195  0012  3098               	movlw	high (STR_12| (0+32768))
  9196  0013  00F6               	movwf	errorsISR@errNum+1
  9197  0014  3197  2771  3180   	fcall	_errorsISR
  9198  0017                     i1l4169:	
  9199                           
  9200                           ;main.c: 323: }
  9201                           ;main.c: 325: mainReceivedDataBuffer[mainReceivedDataPosition]=RC1REG;
  9202  0017  0023               	movlb	3	; select bank3
  9203  0018  0819               	movf	25,w	;volatile
  9204  0019  00F8               	movwf	??_isr
  9205  001A  0021               	movlb	1	; select bank1
  9206  001B  0857               	movf	_mainReceivedDataPosition^(0+128),w
  9207  001C  3EBD               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  9208  001D  0086               	movwf	6
  9209  001E  3001               	movlw	1	; select bank3/4
  9210  001F  0087               	movwf	7
  9211  0020  0878               	movf	??_isr,w
  9212  0021  0081               	movwf	1
  9213                           
  9214                           ;main.c: 330: if(mainReceivedDataBuffer[0]=='%'){
  9215  0022  3025               	movlw	37
  9216  0023  0023               	movlb	3	; select bank3
  9217  0024  063D               	xorwf	_mainReceivedDataBuffer^(0+384),w
  9218  0025  1D03               	btfss	3,2
  9219  0026  2838               	goto	i1l4181
  9220                           
  9221                           ;main.c: 331: mainReceivedDataPosition++;
  9222  0027  3001               	movlw	1
  9223  0028  0021               	movlb	1	; select bank1
  9224  0029  07D7               	addwf	_mainReceivedDataPosition^(0+128),f
  9225  002A  3000               	movlw	0
  9226  002B  3DD8               	addwfc	(_mainReceivedDataPosition+1)^(0+128),f
  9227                           
  9228                           ;main.c: 332: if(mainReceivedDataPosition>15){
  9229  002C  0858               	movf	(_mainReceivedDataPosition+1)^(0+128),w
  9230  002D  3A80               	xorlw	128
  9231  002E  00F8               	movwf	??_isr
  9232  002F  3080               	movlw	128
  9233  0030  0278               	subwf	??_isr,w
  9234  0031  1D03               	skipz
  9235  0032  2835               	goto	u410_25
  9236  0033  3010               	movlw	16
  9237  0034  0257               	subwf	_mainReceivedDataPosition^(0+128),w
  9238  0035                     u410_25:	
  9239  0035  1C03               	skipc
  9240  0036  2865               	goto	i1l4199
  9241  0037  284E               	goto	i1l4189
  9242  0038                     i1l4181:	
  9243                           ;main.c: 336: }
  9244                           ;main.c: 337: }
  9245                           
  9246                           ;main.c: 335: RC1IF=0;
  9247                           
  9248                           ;main.c: 334: mainReceivedDataPosition=0;
  9249                           
  9250                           ;main.c: 333: mainDataReceived=1;
  9251                           
  9252                           
  9253                           ;main.c: 338: else if((mainReceivedDataBuffer[0]=='R') && mainReceivedDataBuffer[0] != (
      +                          0))
  9254  0038  3052               	movlw	82
  9255  0039  0023               	movlb	3	; select bank3
  9256  003A  063D               	xorwf	_mainReceivedDataBuffer^(0+384),w
  9257  003B  1D03               	btfss	3,2
  9258  003C  2859               	goto	i1l498
  9259  003D  083D               	movf	_mainReceivedDataBuffer^(0+384),w
  9260  003E  1903               	btfsc	3,2
  9261  003F  2859               	goto	i1l498
  9262                           
  9263                           ;main.c: 339: {
  9264                           ;main.c: 340: mainReceivedDataPosition++;
  9265  0040  3001               	movlw	1
  9266  0041  0021               	movlb	1	; select bank1
  9267  0042  07D7               	addwf	_mainReceivedDataPosition^(0+128),f
  9268  0043  3000               	movlw	0
  9269  0044  3DD8               	addwfc	(_mainReceivedDataPosition+1)^(0+128),f
  9270                           
  9271                           ;main.c: 341: if(mainReceivedDataBuffer[mainReceivedDataPosition] == '|'){
  9272  0045  0857               	movf	_mainReceivedDataPosition^(0+128),w
  9273  0046  3EBD               	addlw	(low (_mainReceivedDataBuffer| (0+256)))& (0+255)
  9274  0047  0086               	movwf	6
  9275  0048  3001               	movlw	1	; select bank3/4
  9276  0049  0087               	movwf	7
  9277  004A  307C               	movlw	124
  9278  004B  0601               	xorwf	1,w
  9279  004C  1D03               	btfss	3,2
  9280  004D  2865               	goto	i1l4199
  9281  004E                     i1l4189:	
  9282                           
  9283                           ;main.c: 342: mainDataReceived=1;
  9284  004E  3001               	movlw	1
  9285  004F  0022               	movlb	2	; select bank2
  9286  0050  00DA               	movwf	_mainDataReceived^(0+256)
  9287  0051  3000               	movlw	0
  9288  0052  00DB               	movwf	(_mainDataReceived^(0+256)+1)
  9289                           
  9290                           ;main.c: 343: mainReceivedDataPosition=0;
  9291  0053  0021               	movlb	1	; select bank1
  9292  0054  01D7               	clrf	_mainReceivedDataPosition^(0+128)
  9293  0055  01D8               	clrf	(_mainReceivedDataPosition+1)^(0+128)
  9294                           
  9295                           ;main.c: 344: RC1IF=0;
  9296  0056  0020               	movlb	0	; select bank0
  9297  0057  1291               	bcf	17,5	;volatile
  9298                           
  9299                           ;main.c: 345: }
  9300                           ;main.c: 346: }
  9301  0058  2865               	goto	i1l4199
  9302  0059                     i1l498:	
  9303                           
  9304                           ;main.c: 347: else{
  9305                           ;main.c: 348: RC1STAbits.CREN = 0;
  9306  0059  121D               	bcf	29,4	;volatile
  9307                           
  9308                           ;main.c: 349: RC1STAbits.CREN = 1;
  9309  005A  161D               	bsf	29,4	;volatile
  9310                           
  9311                           ;main.c: 350: mainReceivedDataPosition=0;
  9312  005B  0021               	movlb	1	; select bank1
  9313  005C  01D7               	clrf	_mainReceivedDataPosition^(0+128)
  9314  005D  01D8               	clrf	(_mainReceivedDataPosition+1)^(0+128)
  9315                           
  9316                           ;main.c: 351: errorsISR("ERRX");
  9317  005E  302A               	movlw	low (STR_13| (0+32768))
  9318  005F  00F5               	movwf	errorsISR@errNum
  9319  0060  3098               	movlw	high (STR_13| (0+32768))
  9320  0061  00F6               	movwf	errorsISR@errNum+1
  9321  0062  3197  2771  3180   	fcall	_errorsISR
  9322  0065                     i1l4199:	
  9323                           
  9324                           ;main.c: 352: }
  9325                           ;main.c: 353: }
  9326                           ;main.c: 358: if(PIE1bits.TMR2IE==1 && PIR1bits.TMR2IF==1)
  9327  0065  0021               	movlb	1	; select bank1
  9328  0066  1C91               	btfss	17,1	;volatile
  9329  0067  2870               	goto	i1l501
  9330  0068  0020               	movlb	0	; select bank0
  9331  0069  1C91               	btfss	17,1	;volatile
  9332  006A  2870               	goto	i1l501
  9333                           
  9334                           ;main.c: 359: {
  9335                           ;main.c: 362: PIR1bits.TMR2IF=0;
  9336  006B  1091               	bcf	17,1	;volatile
  9337                           
  9338                           ;main.c: 363: PORTFbits.RF3=1;
  9339  006C  0025               	movlb	5	; select bank5
  9340  006D  158C               	bsf	12,3	;volatile
  9341                           
  9342                           ;main.c: 364: T2CONbits.TMR2ON=0;
  9343  006E  0020               	movlb	0	; select bank0
  9344  006F  111C               	bcf	28,2	;volatile
  9345  0070                     i1l501:	
  9346                           
  9347                           ;main.c: 365: }
  9348                           ;main.c: 367: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF==1)
  9349  0070  0021               	movlb	1	; select bank1
  9350  0071  1C11               	btfss	17,0	;volatile
  9351  0072  287E               	goto	i1l4213
  9352  0073  0020               	movlb	0	; select bank0
  9353  0074  1C11               	btfss	17,0	;volatile
  9354  0075  287E               	goto	i1l4213
  9355                           
  9356                           ;main.c: 368: {
  9357                           ;main.c: 370: PIR1bits.TMR1IF=0;
  9358  0076  1011               	bcf	17,0	;volatile
  9359                           
  9360                           ;main.c: 371: T1CONbits.TMR1ON = 0;
  9361  0077  1018               	bcf	24,0	;volatile
  9362                           
  9363                           ;main.c: 372: PORTFbits.RF3=0;
  9364  0078  0025               	movlb	5	; select bank5
  9365  0079  118C               	bcf	12,3	;volatile
  9366                           
  9367                           ;main.c: 373: PR2=0x9F;
  9368  007A  309F               	movlw	159
  9369  007B  0020               	movlb	0	; select bank0
  9370  007C  009B               	movwf	27	;volatile
  9371                           
  9372                           ;main.c: 374: T2CONbits.TMR2ON=1;
  9373  007D  151C               	bsf	28,2	;volatile
  9374  007E                     i1l4213:	
  9375                           
  9376                           ;main.c: 376: }
  9377                           ;main.c: 421: if(PIR4bits.CCP8IF==1 || PIR4bits.CCP7IF == 1 || PIR4bits.CCP9IF==1 || PIR
      +                          4bits.CCP10IF==1){
  9378  007E  0020               	movlb	0	; select bank0
  9379  007F  1D94               	btfss	20,3	;volatile
  9380  0080  1914               	btfsc	20,2	;volatile
  9381  0081  2886               	goto	i1l505
  9382  0082  1B14               	btfsc	20,6	;volatile
  9383  0083  2886               	goto	i1l505
  9384  0084  1F94               	btfss	20,7	;volatile
  9385  0085  2897               	goto	i1l509
  9386  0086                     i1l505:	
  9387                           
  9388                           ;main.c: 422: if(CCP10IF){
  9389  0086  1B94               	btfsc	20,7	;volatile
  9390                           
  9391                           ;main.c: 423: if(CCP10IF == 1){
  9392  0087  1F94               	btfss	20,7	;volatile
  9393  0088  2897               	goto	i1l509
  9394                           
  9395                           ;main.c: 424: CCP10IF=0;
  9396  0089  1394               	bcf	20,7	;volatile
  9397                           
  9398                           ;main.c: 425: if(start_PWM_Generation_For_DIMMER == 1)
  9399  008A  0022               	movlb	2	; select bank2
  9400  008B  0354               	decf	_start_PWM_Generation_For_DIMMER^(0+256),w
  9401  008C  0455               	iorwf	(_start_PWM_Generation_For_DIMMER+1)^(0+256),w
  9402  008D  1D03               	btfss	3,2
  9403  008E  2892               	goto	i1l508
  9404                           
  9405                           ;main.c: 426: TMR1H = Timer1H;
  9406  008F  084C               	movf	_Timer1H^(0+256),w
  9407  0090  0020               	movlb	0	; select bank0
  9408  0091  0097               	movwf	23	;volatile
  9409  0092                     i1l508:	
  9410                           
  9411                           ;main.c: 427: TMR1L = Timer1L;
  9412  0092  0022               	movlb	2	; select bank2
  9413  0093  084A               	movf	_Timer1L^(0+256),w
  9414  0094  0020               	movlb	0	; select bank0
  9415  0095  0096               	movwf	22	;volatile
  9416                           
  9417                           ;main.c: 428: T1CONbits.TMR1ON = 1;
  9418  0096  1418               	bsf	24,0	;volatile
  9419  0097                     i1l509:	
  9420  0097  0879               	movf	??_isr+1,w
  9421  0098  00FF               	movwf	127
  9422  0099  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9423  009A  0009               	retfie
  9424  009B                     __end_of_isr:	
  9425                           
  9426                           	psect	text48
  9427  1771                     __ptext48:	
  9428 ;; *************** function _errorsISR *****************
  9429 ;; Defined at:
  9430 ;;		line 1242 in file "main.c"
  9431 ;; Parameters:    Size  Location     Type
  9432 ;;  errNum          2    0[COMMON] PTR const unsigned char 
  9433 ;;		 -> STR_13(5), STR_12(5), 
  9434 ;; Auto vars:     Size  Location     Type
  9435 ;;		None
  9436 ;; Return value:  Size  Location     Type
  9437 ;;                  1    wreg      void 
  9438 ;; Registers used:
  9439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  9440 ;; Tracked objects:
  9441 ;;		On entry : 0/0
  9442 ;;		On exit  : 0/0
  9443 ;;		Unchanged: 0/0
  9444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9
  9445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0
  9446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0
  9447 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0
  9448 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0
  9449 ;;Total ram usage:        3 bytes
  9450 ;; Hardware stack levels used:    1
  9451 ;; This function calls:
  9452 ;;		Nothing
  9453 ;; This function is called by:
  9454 ;;		_isr
  9455 ;; This function uses a non-reentrant model
  9456 ;;
  9457                           
  9458                           
  9459                           ;psect for function _errorsISR
  9460  1771                     _errorsISR:	
  9461  1771                     i1l3655:	
  9462                           ;main.c: 1244: while(*errNum != (0))
  9463                           
  9464                           ;incstack = 0
  9465                           ; Regs used in _errorsISR: [wreg-fsr0h+status,2+status,0+pclath]
  9466                           
  9467  1771  0875               	movf	errorsISR@errNum,w
  9468  1772  0084               	movwf	4
  9469  1773  0876               	movf	errorsISR@errNum+1,w
  9470  1774  0085               	movwf	5
  9471  1775  0012               	moviw fsr0++
  9472  1776  1903               	btfsc	3,2
  9473  1777  0008               	return
  9474  1778                     i1l631:	
  9475                           ;main.c: 1245: {
  9476                           ;main.c: 1246: while (!TX1STAbits.TRMT);
  9477                           
  9478  1778  0023               	movlb	3	; select bank3
  9479  1779  1C9E               	btfss	30,1	;volatile
  9480  177A  2F78               	goto	i1l631
  9481                           
  9482                           ;main.c: 1247: TX1REG = *errNum;
  9483  177B  0875               	movf	errorsISR@errNum,w
  9484  177C  0084               	movwf	4
  9485  177D  0876               	movf	errorsISR@errNum+1,w
  9486  177E  0085               	movwf	5
  9487  177F  0800               	movf	0,w	;code access
  9488  1780  009A               	movwf	26	;volatile
  9489                           
  9490                           ;main.c: 1248: *errNum++;
  9491  1781  3001               	movlw	1
  9492  1782  07F5               	addwf	errorsISR@errNum,f
  9493  1783  3000               	movlw	0
  9494  1784  3DF6               	addwfc	errorsISR@errNum+1,f
  9495  1785  2F71               	goto	i1l3655
  9496  1786                     __end_of_errorsISR:	
  9497  007E                     btemp	set	126	;btemp
  9498  007E                     int$flags	set	126
  9499  007E                     wtemp0	set	126


Data Sizes:
    Strings     50
    Constant    8
    Data        133
    BSS         176
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     64      74
    BANK1            80     53      80
    BANK2            80      0      80
    BANK3            80     10      79
    BANK4            80      0      60
    BANK5            80      0      58
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            32      0       0

Pointer List with Targets:

    StopBitString	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    FinalframebitString	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_16(CODE[2]), STR_14(CODE[2]), 

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_16(CODE[2]), STR_14(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(1) Largest target is 18
		 -> mainReceivedDataBuffer(BANK3[18]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_16(CODE[2]), STR_14(CODE[2]), NULL(NULL[0]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_16(CODE[2]), STR_14(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(1) Largest target is 18
		 -> mainReceivedDataBuffer(BANK3[18]), NULL(NULL[0]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_16(CODE[2]), STR_14(CODE[2]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 18
		 -> mainReceivedDataBuffer(BANK3[18]), NULL(NULL[0]), 

    strtok@s1	PTR unsigned char  size(1) Largest target is 18
		 -> mainReceivedDataBuffer(BANK3[18]), NULL(NULL[0]), 

    strncpy@from	PTR const unsigned char  size(1) Largest target is 5
		 -> applianceControl@HexlevelBuffer(BANK1[5]), 

    strncpy@to	PTR unsigned char  size(1) Largest target is 3
		 -> applianceControl@strL(BANK1[3]), applianceControl@strH(BANK1[3]), 

    strncpy@cp	PTR unsigned char  size(1) Largest target is 3
		 -> applianceControl@strL(BANK1[3]), applianceControl@strH(BANK1[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 18
		 -> mainReceivedDataBuffer(BANK3[18]), applianceControl@strL(BANK1[3]), applianceControl@strH(BANK1[3]), applianceControl@HexlevelBuffer(BANK1[5]), 
		 -> NULL(NULL[0]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 18
		 -> mainReceivedDataBuffer(BANK3[18]), applianceControl@strL(BANK1[3]), applianceControl@strH(BANK1[3]), applianceControl@HexlevelBuffer(BANK1[5]), 
		 -> NULL(NULL[0]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_15(CODE[4]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 18
		 -> mainReceivedDataBuffer(BANK3[18]), NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 5
		 -> applianceControl@HexlevelBuffer(BANK1[5]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 5
		 -> applianceControl@HexlevelBuffer(BANK1[5]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_2(CODE[2]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 5
		 -> applianceControl@HexlevelBuffer(BANK1[5]), NULL(NULL[0]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 2
		 -> ConvertIntegertoStringBlueColorBuffer(BANK2[2]), ConvertIntegertoStringGreenColorBuffer(BANK2[2]), ConvertIntegertoStringRedColorBuffer(BANK2[2]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 2
		 -> applianceControl@dimmerSpeedStringBuffer(BANK1[2]), applianceControl@switchNumberStringBuffer(BANK1[2]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[2]), STR_1(CODE[3]), 

    S1175__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), Absolute function(), 

    S1175__prbuf$ptr	PTR unsigned char  size(1) Largest target is 5
		 -> applianceControl@HexlevelBuffer(BANK1[5]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 5
		 -> applianceControl@HexlevelBuffer(BANK1[5]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 4
		 -> sprintf@pb(BANK0[3]), printf@pb(BANK0[3]), 

    sendAcknowledgment@currentStateBuffer	PTR unsigned char  size(1) Largest target is 58
		 -> sendFinalBufferToGAteway(BANK4[46]), currentStateBuffer(BANK5[58]), 

    errorsMain@errNum	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_17(CODE[5]), 

    errorsISR@errNum	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_13(CODE[5]), STR_12(CODE[5]), 

    AllColorIntensityString	PTR unsigned char  size(1) Largest target is 18
		 -> mainReceivedDataBuffer(BANK3[18]), NULL(NULL[0]), 

    ChildLockString	PTR unsigned char  size(1) Largest target is 2
		 -> ChildLockbuffer(BANK2[2]), NULL(NULL[0]), 

    BlueColorIntensityString	PTR unsigned char  size(1) Largest target is 18
		 -> mainReceivedDataBuffer(BANK3[18]), NULL(NULL[0]), 

    GreenColorIntensityString	PTR unsigned char  size(1) Largest target is 18
		 -> mainReceivedDataBuffer(BANK3[18]), NULL(NULL[0]), 

    RedColorIntensityString	PTR unsigned char  size(1) Largest target is 18
		 -> mainReceivedDataBuffer(BANK3[18]), NULL(NULL[0]), 

    SwitchStatusString	PTR unsigned char  size(1) Largest target is 2
		 -> switchstatusbuffer(BANK2[2]), NULL(NULL[0]), 

    AcknowledgementString	PTR unsigned char  size(1) Largest target is 18
		 -> mainReceivedDataBuffer(BANK3[18]), NULL(NULL[0]), 

    SwitchNumberString	PTR unsigned char  size(1) Largest target is 3
		 -> switchNumberBuffer(BANK3[3]), NULL(NULL[0]), 

    ModuleNameString	PTR unsigned char  size(1) Largest target is 18
		 -> mainReceivedDataBuffer(BANK3[18]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 18
		 -> mainReceivedDataBuffer(BANK3[18]), NULL(NULL[0]), 

    token	PTR unsigned char  size(1) Largest target is 18
		 -> mainReceivedDataBuffer(BANK3[18]), NULL(NULL[0]), 

    ConvertmaindataReceiveIntoString	PTR unsigned char  size(1) Largest target is 18
		 -> mainReceivedDataBuffer(BANK3[18]), NULL(NULL[0]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 2
		 -> ConvertIntegertoStringBlueColorBuffer(BANK2[2]), ConvertIntegertoStringGreenColorBuffer(BANK2[2]), ConvertIntegertoStringRedColorBuffer(BANK2[2]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 46
		 -> sendFinalBufferToGAteway(BANK4[46]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 46
		 -> sendFinalBufferToGAteway(BANK4[46]), 

    hexadecimalToDecimal@hexVal	PTR unsigned char  size(1) Largest target is 3
		 -> applianceControl@strL(BANK1[3]), applianceControl@strH(BANK1[3]), 

    sp__strncpy	PTR unsigned char  size(1) Largest target is 3
		 -> applianceControl@strL(BANK1[3]), applianceControl@strH(BANK1[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_errorsISR

Critical Paths under _main in BANK0

    _main->_applianceControl
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _applianceControl->___fttol
    _sprintf->__doprnt
    _printf->__doprnt
    __doprnt->___lwdiv
    _hexadecimalToDecimal->___wmul
    _hexadecimalToDecimal->_strlen
    _atoi->___wmul
    ___fttol->___ftdiv
    ___ftmul->___ftpack
    ___ftdiv->___awtoft
    ___awtoft->___ftpack

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_applianceControl

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   28752
                                             58 BANK0      6     6      0
                                              0 BANK3     10    10      0
                _GPIO_pin_Initialize
     _ReceivingIndicationLedBlinking
           _SwitchOffStatustToGatway
            _SwitchOnStatustToGatway
  _TransmissionIndicationLedBlinking
                  _allPeripheralInit
                   _applianceControl
             _copyReceivedDataBuffer
                         _errorsMain
                             _strcmp
                             _strlen
                             _strtok
 ---------------------------------------------------------------------------------
 (1) _strtok                                               6     4      2    1855
                                             14 BANK0      6     4      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (2) _strspn                                               7     5      2     675
                                              7 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strcspn                                              7     5      2     675
                                              7 BANK0      7     5      2
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strchr                                               7     3      4     432
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               5     3      2     243
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _errorsMain                                           3     1      2     142
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _copyReceivedDataBuffer                               3     3      0     164
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _applianceControl                                    67    61      6   23108
                                             44 BANK0     14     8      6
                                              0 BANK1     53    53      0
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                               _atoi
               _hexadecimalToDecimal
                             _printf
                 _sendAcknowledgment
                            _sprintf
                             _strlen
                            _strncpy
 ---------------------------------------------------------------------------------
 (2) _strncpy                                              6     3      3     576
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             12     6      6    2783
                                             22 BANK0     12     6      6
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) _sendAcknowledgment                                   4     4      0     137
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _printf                                               7     5      2    2647
                                             22 BANK0      7     5      2
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) __doprnt                                             22    19      3    2291
                                              8 BANK0     14    11      3
                   Absolute function *
                            ___lwdiv
                              _putch *
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     0      1     108
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     639
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (2) _hexadecimalToDecimal                                13    11      2    1694
                                              6 BANK0     13    11      2
                             ___wmul
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               6     4      2     352
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2    1361
                                              6 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     598
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     740
                                             30 BANK0     14    10      4
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    3544
                                              8 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3168
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2650
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2440
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _allPeripheralInit                                    0     0      0       0
                   _CCP10_Initialize
                    _CCP7_Initialize
                    _CCP8_Initialize
                    _CCP9_Initialize
                  _EUSART_Initialize
                   _TMR10_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR8_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR10_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP9_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP10_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TransmissionIndicationLedBlinking                    2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SwitchOnStatustToGatway                              3     1      2     724
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _SwitchOffStatustToGatway                             3     1      2     724
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _ReceivingIndicationLedBlinking                       2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_pin_Initialize                                  0     0      0       0
                      _clearAllPorts
                      _pinINIT_extra
 ---------------------------------------------------------------------------------
 (2) _pinINIT_extra                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clearAllPorts                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0     173
                                              3 COMMON     2     2      0
                          _errorsISR
 ---------------------------------------------------------------------------------
 (6) _errorsISR                                            3     1      2     173
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_pin_Initialize
     _clearAllPorts
     _pinINIT_extra
   _ReceivingIndicationLedBlinking
   _SwitchOffStatustToGatway
   _SwitchOnStatustToGatway
   _TransmissionIndicationLedBlinking
   _allPeripheralInit
     _CCP10_Initialize
     _CCP7_Initialize
     _CCP8_Initialize
     _CCP9_Initialize
     _EUSART_Initialize
     _TMR10_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
     _TMR5_Initialize
     _TMR6_Initialize
     _TMR8_Initialize
   _applianceControl
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _atoi
       ___wmul
       _isdigit
     _hexadecimalToDecimal
       ___wmul
       _strlen
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         _putch *
     _sendAcknowledgment
     _sprintf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         _putch *
     _strlen
     _strncpy
   _copyReceivedDataBuffer
   _errorsMain
   _strcmp
   _strlen
   _strtok
     _strcspn
       _strchr
     _strspn
       _strchr

 _isr (ROOT)
   _errorsISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     1B9       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     40      4A       6       92.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     35      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      A      4F      12       98.8%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      3C      14       75.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      3A      16       72.5%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            20      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               20      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
DATA                 0      0     1B9      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Feb 08 17:44:23 2019

                 _IntegerGreenColorIntensity 0070                   __size_of_allPeripheralInit 0027  
                                          pc 0002                                  __CFG_CP$OFF 0000  
                                         _M1 0130                                           _M2 012E  
                                         _M3 012C                                           _M4 012A  
                                         _M5 0128                                           _M6 0126  
                                         _M7 0124                                           _M8 0122  
                                         _M9 0120                      hexadecimalToDecimal@len 002A  
                        ___wmul@multiplicand 0022                 applianceControl@integerSpeed 00CB  
                                        l434 0FC2                                          l542 033F  
                                        l439 0FFF                                          l640 17B9  
                                        l900 0B67                                          l901 0B6F  
                                        l717 17ED                                          l653 0856  
                                        l655 085D                                          l576 05C8  
                                        l578 05F2                                          l893 0B54  
                                        l984 0C75                                          _GIE 005F  
              applianceControl@clockPerCycle 00B4                                          _PR2 001B  
      _ConvertIntegertoStringBlueColorBuffer 0165                     hexadecimalToDecimal@base 002E  
                           _ModuleNameBuffer 01CF                    __size_of_applianceControl 02C8  
                                        _isr 0004                              _TMR2_Initialize 16E8  
                               __CFG_BORV$LO 0000                                          wreg 0009  
                               __CFG_FOSC$HS 0000                             _ModuleNameString 0067  
                                       S7363 1000                                         S7357 1012  
                               __CFG_LVP$OFF 0000                                 ___ftdiv@cntr 0038  
                               ___ftdiv@sign 003D                                         l1230 17CA  
                                       l5015 079C                                         l5033 07BE  
                                       l5017 0795                                         l5121 0BFD  
                                       l5113 0BBF                                         l5105 0BA2  
                                       l5043 07F9                                         l5035 07C2  
                                       l5027 07B7                                         l5019 07A1  
                                       l5037 07E9                                         l5125 0C03  
                                       l5321 06F6                                         l5073 0935  
                                       l7001 03B1                                         l5307 0D16  
                                       l5403 0C86                                         l5067 0917  
                                       l5411 09AC                                         l5069 092D  
                                       l5421 0974                                         l7101 049D  
                                       l7021 03DE                                         l7005 03B9  
                                       l5351 0763                                         l5343 074F  
                                       l5327 070C                                         l5423 097C  
                                       l5415 09CA                                         l5409 09A4  
                                       l7113 04BC                                         l7033 03FD  
                                       l7017 03D8                                         l5355 076B  
                                       l5339 0747                                         l5371 0C21  
                                       l5427 099A                                         l5269 087D  
                                       l5285 0CBC                                         l7213 05A6  
                                       l7133 04E9                                         l7117 04C2  
                                       l7053 042A                                         l7037 0405  
                                       l5279 0CA6                                         l5391 0C5F  
                                       l7231 05D0                                         l7209 05A0  
                                       l7161 052D                                         l7145 0508  
                                       l7129 04E1                                         l7081 0470  
                                       l7065 0449                                         l7049 0424  
                                       l5299 0CFD                                         l5651 0ADF  
                                       l5397 0C6C                                         l5389 0C51  
                                       l7181 055A                                         l7165 0535  
                                       l7149 050E                                         l7085 0476  
                                       l7069 0451                                         l5399 0C78  
                                       l4873 0A8E                                         l4865 0A70  
                                       l6625 0626                                         l7361 0FF2  
                                       l5681 08BE                                         l5673 0B1E  
                                       l5665 0AFB                                         l5657 0AE4  
                                       l7193 0579                                         l7177 0554  
                                       l7097 0495                                         l4971 0B40  
                                       l4963 0B2A                                         l4947 17E7  
                                       l4867 0A7C                                         l6643 0663  
                                       l6635 0651                                         l6803 0FDD  
                                       l5683 08C6                                         l5675 0B1F  
                                       l7355 02F5                                         ?_isr 0075  
                                       l4885 0838                                         l4877 0A97  
                                       l6629 0639                                         l7197 0581  
                                       l4967 0B31                                         l4887 0844  
                                       l6663 0686                                         l7359 0FE3  
                                       l6807 0FEC                                         l5687 08DF  
                                       l6911 0298                                         l6903 026A  
                                       l4977 0B59                                         l4969 0B3B  
                                       l6649 0682                                         l6665 05FB  
                                       l5697 17B1                                         l6825 0140  
                                       l4979 0B61                                         l6659 06C9  
                                       l6667 06DC                                         l6907 0281  
                                       l6843 0188                                         l6781 0F79  
                                       l6925 02D2                                         l6917 02AA  
                                       l6933 02EF                                         l6861 01BB  
                                       l4999 1739                                         l6791 0FA1  
                                       l6783 0F81                                         l6927 02D8  
                                       l6871 01E0                                         l6935 0302  
                                       l6793 0FA9                                         l6785 0F89  
                                       l6881 020D                                         l6865 01CE  
                                       l6937 0307                                         l6795 0FB1  
                                       l6787 0F91                                         l6883 0214  
                                       l6955 0342                                         l6797 0FB9  
                                       l6789 0F99                                         l6973 036D  
                                       l6949 0321                                         l6799 0FC5  
                                       l6879 0206                                         l6985 038C  
                                       l6969 0365                                         l6897 024C  
                                       l6889 0226                                         l6899 0253  
                                       l6989 0392                                         STR_1 1833  
                                       STR_2 1836                                         STR_3 1838  
                                       STR_5 1819                                         u6015 0C28  
                                       u5305 0A87                                         u5315 0A8F  
                                       _PEIE 005E                                         u6045 0C52  
                                       u5505 0B4F                                         u6075 0C6D  
                                       u5435 17EE                                         u5275 0A73  
                                       u6155 09E1                                         u5525 0B5C  
                                       u5445 17F3                                         u8005 02A8  
                                       u5295 0A7D                                         u8015 02D0  
                                       u8035 031F                                         u5565 0B76  
                                       u5485 0B36                                         u8045 033D  
                                       u5825 0CCE                                         u5905 0718  
                                       u5835 0CDE                                         u5915 0728  
                                       u5845 0CFE                                         u5855 0D0D  
                                       u5935 0750                                         u5865 0D17  
                                       u5945 0756                                         u5975 076C  
                                       u5985 0772                                         u7825 0678  
                                       u8807 0A47                                         u8817 0A53  
                                       u8827 0A61                                         u8837 0A08  
                                       u7965 01DE                                         u8847 0A14  
                                       u7975 0204                                         u8857 0A20  
                                       u7985 0224                                         u8777 010F  
                                       u8867 0A2E                                         u8787 1754  
                                       u7995 024A                                         u8877 1743  
                                       u8797 0A3B                                         _TMR2 001A  
                                       _TMR4 0415                                         _TMR6 041C  
                                       _TMR8 0595                                         _WPUB 020D  
                                       _WPUD 020F                                         _WPUE 0210  
                                       _WPUG 048D                                 __CFG_WRT$OFF 0000  
                                       _atoi 0793                                         _main 0109  
                               ___ftpack@arg 0020                                 ___ftpack@exp 0023  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
                                       btemp 007E                      _copy_parentalLockBuffer 01A0  
                                       start 009B                                __CFG_IESO$OFF 0000  
                            _TMR3_Initialize 1712               applianceControl@HexlevelBuffer 00A8  
                     __size_of_pinINIT_extra 0015                                 ___ftmul@cntr 0036  
                               ___ftmul@sign 0037                                 ___fttol@exp1 004B  
                               ___fttol@lval 0047                                        ??_isr 0078  
        applianceControl@charParentalControl 0050                    __size_of_CCP10_Initialize 000A  
                                      ?_atoi 0026                                        ?_main 0075  
                                      STR_12 1825                                        STR_13 182A  
                                      STR_14 1838                                        STR_15 182F  
                                      STR_16 1838                                        STR_17 1820  
                              __CFG_WDTE$OFF 0000                                        STR_18 1808  
                            __end_of___ftdiv 0D38                              __end_of___ftmul 0793  
                                      _T1CON 0018                              __end_of___fttol 0C8F  
                                      _T2CON 001C                                        _T3CON 0413  
                                      _RC1IF 008D                                        _T4CON 0417  
                    _AllColorIntensityString 0063                                        _T5CON 041A  
                                      _T6CON 041E                                        _T8CON 0597  
                            __end_of___lwdiv 0A9C                                        i1l501 0070  
                                      i1l505 0086                                        i1l508 0092  
                                      i1l509 0097                                        i1l631 1778  
              applianceControl@CompleteClock 00AD                                        i1l498 0059  
                                      _TMR10 059C                                        _TMR1H 0017  
                                      _TMR3H 0412                                        _TMR1L 0016  
                                      _TMR3L 0411                                        _TMR5H 0419  
                                      _TMR5L 0418                    applianceControl@remainder 00A2  
                            __end_of__doprnt 06DF                       ??_hexadecimalToDecimal 0028  
                            _TMR4_Initialize 1707                              _charSwitchState 016F  
                             __CFG_FCMEN$OFF 0000                                ___awtoft@sign 002D  
                            _CCP7_Initialize 16CA                                        _errno 01D2  
                            __end_of_isdigit 173B                                ___ftpack@sign 0024  
                                      atoi@a 002B                                        atoi@s 002D  
                                      _token 0068                                        _putch 07FE  
                                      main@j 01E7                                        main@k 01E9  
                    __end_of_TMR1_Initialize 1707                               __CFG_BOREN$OFF 0000  
                                      pclath 000A         _ConvertIntegertoStringRedColorBuffer 0169  
              _RedColorIntensityStringLength 013C                                        status 0003  
                                      wtemp0 007E                              __end_of_sprintf 0833  
                            __end_of_strcspn 099F                              __end_of_strncpy 0940  
                      __end_of_clearAllPorts 1771                          _GPIO_pin_Initialize 08E5  
                            _TMR5_Initialize 16F2                               __CFG_MCLRE$OFF 0000  
                            __initialization 009D                      ?_copyReceivedDataBuffer 0075  
                               __end_of_atoi 07FE                                 __end_of_main 05F9  
                            _CCP8_Initialize 16D4                                   _ErrorNames 01B8  
                    __end_of_TMR2_Initialize 16F2                               __CFG_LPBOR$OFF 0000  
                      _GreenLedSwitchCounter 01D8                                       ??_atoi 0028  
                                     ??_main 005A                                ___fttol@sign1 0046  
                   _BlueColorIntensityBuffer 00D9                         ?_GPIO_pin_Initialize 0075  
  __end_of_TransmissionIndicationLedBlinking 175D   __size_of_TransmissionIndicationLedBlinking 0011  
        ??_TransmissionIndicationLedBlinking 0020           ?_TransmissionIndicationLedBlinking 0075  
          _TransmissionIndicationLedBlinking 174C                           _switchstatusbuffer 0163  
                              _pinINIT_extra 1786                              _TMR6_Initialize 16A5  
                   _BlueColorIntensityString 0064                              _CCP9_Initialize 16DE  
                                     _T10CON 059E                                       _CCPR7H 0615  
                                     _CCPR8H 0618                                       _CCPR9H 061B  
                                     _CCPR7L 0614                                       _CCPR8L 0617  
                                     _CCPR9L 061A                             __end_of___awtoft 0894  
                                     _ANSELA 018C                                       ?_putch 0020  
                                     _ANSELB 018D                                       _ANSELD 018F  
                                     _ANSELE 0190                                       _ANSELF 040C  
                           __end_of___ftpack 0B86                                       _ANSELG 040D  
                                     _T1GCON 0019                                       _T3GCON 0414  
                                     _T5GCON 041B                                       _RC1REG 0199  
                        _RedLedSwitchCounter 01DA                                       _RC1STA 019D  
                                     i1l4213 007E                      __end_of_TMR3_Initialize 171E  
                                     i1l4181 0038                                       i1l4169 0017  
                                     i1l4189 004E                                       i1l3655 1771  
                                     i1l4199 0065                                       u410_25 0035  
                                     _TX1REG 019A                                       _TX1STA 019E  
                             __CFG_PWRTE$OFF 0000               __end_of_copyReceivedDataBuffer 0A01  
                __size_of_sendAcknowledgment 0020                          _FinalFramebitBuffer 00E4  
                                     ___wmul 17E4                                    ??___ftdiv 0034  
                                  ??___ftmul 002E                                    ??___fttol 0042  
                                  ??___lwdiv 0024                                    ??__doprnt 002B  
                    __end_of_TMR4_Initialize 1712                                 __doprnt@flag 002F  
                                     _printf 0800                                 __doprnt@prec 0033  
                                     _strchr 17CA                                       _strcmp 08BB  
                                     _strlen 0833                      __end_of_CCP7_Initialize 16D4  
                                     _strtok 0AD6                                       _strspn 099F  
                      ??_GPIO_pin_Initialize 0020                        ___ftmul@f3_as_product 0033  
                   _mainReceivedDataPosition 00D7                             _applianceControl 0D38  
                                  ??_isdigit 0020                               ?_pinINIT_extra 0075  
                            _TMR8_Initialize 16AE                                       putch@c 0020  
                                  ??_sprintf 003C                                    ??_strcspn 0029  
                 ??_SwitchOffStatustToGatway 0022                                    ??_strncpy 0023  
                           ?_TMR1_Initialize 0075                      __end_of_TMR5_Initialize 16FC  
                    __end_of__initialization 0105                      __end_of_CCP8_Initialize 16DE  
                                 ___ftdiv@f1 0031                                   ___ftdiv@f2 002E  
                                 ___ftdiv@f3 0039                                   ___awtoft@c 0028  
                                 ___ftmul@f1 0028                                   ___ftmul@f2 002B  
                                 ___fttol@f1 003E                               __pcstackCOMMON 0075  
           __size_of_SwitchOnStatustToGatway 0033                    __size_of_TMR10_Initialize 0009  
                               __pidataBANK1 16B7                                 __pidataBANK2 168B  
                               __pidataBANK3 0940                                 __pidataBANK4 171E  
                               __pidataBANK5 0A9C                                __end_of_putch 07FF  
                           ?_TMR2_Initialize 0075                             _CCP10_Initialize 16C0  
                    __end_of_TMR6_Initialize 16AE                      __end_of_CCP9_Initialize 16E8  
                                 __doprnt@ap 002A                                   __doprnt@pb 0034  
                                    ??_putch 0021                                   __pbssBANK0 0060  
                                 __pbssBANK1 00D5                                   __pbssBANK2 0120  
                                 __pbssBANK3 01CF                                   __pbssBANK4 0220  
                           ?_TMR3_Initialize 0075                              __CFG_VCAPEN$OFF 0000  
                         __size_of_errorsISR 0015               _BlueColorIntensityStringLength 0138  
                                 __pmaintext 0109                          _IntegerSwitchNumber 0134  
                                    ?___wmul 0020                                   __pintentry 0004  
                                    _CCP10IF 00A7                   sendAcknowledgment@Tx_count 0021  
                                    _CCP7CON 0616                                      _CCP9CON 061C  
                                    _CCPR10H 061E                                      _CCPR10L 061D  
                           ?_TMR4_Initialize 0075                                    ?___awtoft 0028  
                    __end_of_TMR8_Initialize 16B7                                    ?___ftpack 0020  
                                    ?_printf 0036                            _FrameLegthCounter 015C  
                            ??_pinINIT_extra 0020                                      ?_strchr 0020  
                                    ?_strcmp 0020                                      ?_strlen 0020  
                                    ?_strtok 002E                                      ?_strspn 0027  
                           ?_CCP7_Initialize 0075             _start_PWM_Generation_For_BlueLed 014E  
                                    _SP1BRGH 019C                                      _SP1BRGL 019B  
            _start_PWM_Generation_For_DIMMER 0154                             ?_TMR5_Initialize 0075  
            _GreenColorIntensityStringLength 013A              _start_PWM_Generation_For_RedLed 0152  
applianceControl@currentStateBufferPositions 00D1                             ?_CCP8_Initialize 0075  
           applianceControl@chDimmerSpeedLSB 004F             applianceControl@chDimmerSpeedMSB 004E  
                                    _Timer1H 014C                                      _Timer3H 0148  
                                    _Timer1L 014A                                      _Timer3L 0146  
                                    _Timer5H 0144                                      _Timer5L 0142  
                                    _Timer8H 0140                                      _Timer8L 013E  
                                    ___ftdiv 0C8F                              __size_of___wmul 001C  
                                    ___ftmul 06DF                                      ___fttol 0C08  
                   _sendFinalBufferToGAteway 0220                                      ___lwdiv 0A67  
                                    __doprnt 05F9                              __CFG_STVREN$OFF 0000  
                                 ??___awtoft 002B                                   ??___ftpack 0025  
                           ?_TMR6_Initialize 0075                                   _errorsMain 17B1  
                                    __ptext1 0AD6                                      __ptext2 099F  
                                    __ptext3 096F                                      __ptext4 17CA  
                                    __ptext5 08BB                                      __ptext6 17B1  
                                    __ptext7 09CF                                      __ptext8 0D38  
                                    __ptext9 0911                              __size_of_printf 0016  
                            __size_of_strchr 001A                              __size_of_strcmp 002A  
                            __size_of_strlen 001F                            __end_of_hexpowers 1808  
                                  _T1CONbits 0018                             ?_CCP9_Initialize 0075  
                            __size_of_strtok 004B                              __size_of_strspn 0030  
                                  _T2CONbits 001C                                      _isdigit 172C  
                               __size_of_isr 0097                            __end_of_errorsISR 1786  
                    _RedColorIntensityBuffer 00DD                __size_of_hexadecimalToDecimal 0082  
       sendAcknowledgment@currentStateBuffer 0023             __end_of_SwitchOffStatustToGatway 0A34  
                  _IntergerRedColorIntensity 0072                                      main@man 01ED  
                                    _sprintf 0816                                      clrloop0 1691  
                                    _strcspn 096F                                      _strncpy 0911  
                       end_of_initialization 0105                      _RedColorIntensityString 0066  
                                    init_ram 1696                                      initloop 1697  
                          _EUSART_Initialize 179B                            _levelofDimmer_LSB 00EE  
                          _levelofDimmer_MSB 00EF                     __end_of_applianceControl 1000  
         applianceControl@integerSwitchState 00D3                      _SwitchOnStatustToGatway 0A34  
                         ?_EUSART_Initialize 0075                             _TMR10_Initialize 169C  
                                    printf@f 0036                                      strcmp@r 0023  
                                    strlen@s 0020                          ??_EUSART_Initialize 0020  
                           ?_TMR8_Initialize 0075                                      strspn@i 002B  
                                  _PORTBbits 000D                                    _PORTDbits 000F  
                                  _PORTEbits 0010                                    _PORTFbits 028C  
                                  _PORTGbits 028D       __end_of_ReceivingIndicationLedBlinking 174C  
    __size_of_ReceivingIndicationLedBlinking 0011               _ReceivingIndicationLedBlinking 173B  
                     __size_of_clearAllPorts 0014                                    _TRISBbits 008D  
                                  _TRISCbits 008E                                    _TRISDbits 008F  
                                  _TRISEbits 0090                                    _TRISFbits 030C  
                                  _TRISGbits 030D                            _levelofRedLed_LSB 00EA  
                          _levelofRedLed_MSB 00EB                                   main@k_1031 01EB  
                       _IntergerSwitchStatus 00D5      SwitchOffStatustToGatway@SwitchOffNumber 0020  
                   __end_of_CCP10_Initialize 16CA                    __end_of_EUSART_Initialize 17B1  
                                ___ftdiv@exp 003C     applianceControl@switchNumberStringBuffer 00C6  
                 __end_of_sendAcknowledgment 0872                                  ___ftmul@exp 0032  
                __end_of_GPIO_pin_Initialize 0911                               __end_of___wmul 1800  
                     _mainReceivedDataBuffer 01BD       _ConvertIntegertoStringGreenColorBuffer 0167  
                        _FinalframebitString 00E0         applianceControl@ConvertStringIntoInt 00A0  
                                ?_errorsMain 0020                                _charchildLock 00E7  
                        _Finalframebitbuffer 01DC                               __end_of_printf 0816  
                             __end_of_strchr 17E4                               __end_of_strcmp 08E5  
                             __end_of_strlen 0852                               __end_of_strtok 0B21  
                             __end_of_strspn 09CF                          start_initialization 009D  
                         _SwitchNumberBuffer 015E                                  __end_of_isr 009B  
                      applianceControl@F3974 016D                        applianceControl@F3976 016B  
                         _SwitchNumberString 00E3                    ??_SwitchOnStatustToGatway 0022  
                      applianceControl@Pulse 00B7                        _AcknowledgementString 00E2  
                      applianceControl@start 00A4                    _GreenColorIntensityBuffer 00DB  
                              _clearAllPorts 175D                     __size_of_TMR1_Initialize 000B  
    copyReceivedDataBuffer@dataBufferCounter 0021                                     ??___wmul 0024  
          __size_of_SwitchOffStatustToGatway 0033                    _GreenColorIntensityString 0065  
                  ?_SwitchOffStatustToGatway 0020                                  __doprnt@idx 0030  
                                __doprnt@val 0031                                  __pdataBANK1 00E7  
                                __pdataBANK2 016B                                  __pdataBANK3 01A0  
                                __pdataBANK4 024E                                  __pdataBANK5 02A0  
                                   ??_printf 0038                                     ??_strchr 0024  
                                   ??_strcmp 0022                                     ??_strlen 0022  
                                   ??_strtok 0030                                     ??_strspn 0029  
                          __size_of___awtoft 0022                            __size_of___ftpack 0065  
                           _mainDataReceived 015A                                  __pbssCOMMON 0070  
                                  ___latbits 0002                                __pcstackBANK0 0020  
                              __pcstackBANK1 00A0                                __pcstackBANK3 01E5  
                   __size_of_TMR2_Initialize 000A                         _mainReceivedDataFlag 0158  
                               _isdigit$1350 0020                     ??_copyReceivedDataBuffer 0020  
                 __size_of_EUSART_Initialize 0016    applianceControl@ConvertIntToTimeInMilisec 00C8  
                                  __doprnt@c 0035                                    __doprnt@f 0028  
                        __size_of_errorsMain 0019                               ?_clearAllPorts 0075  
                           ___lwdiv@dividend 0022                              errorsISR@errNum 0075  
                   __size_of_TMR3_Initialize 000C                             errorsMain@errNum 0020  
                                   ?___ftdiv 002E                                     ?___ftmul 0028  
                                   ?___fttol 003E                                     ?___lwdiv 0020  
                            _ChildLockBuffer 00E5                                     ?__doprnt 0028  
            __end_of_SwitchOnStatustToGatway 0A67                                    __pswtext1 1012  
                                  __pswtext2 1000                                     _CCP10CON 061F  
                           _IntegerChildLock 0132                              _ChildLockString 0074  
                                   _BAUD1CON 019F                        __end_of_pinINIT_extra 179B  
                                   ?_isdigit 0075                              _ChildLockbuffer 0161  
              _AllColorIntensityStringLength 01DE                     __size_of_TMR4_Initialize 000B  
                                  _hexpowers 1800          applianceControl@charFinalFrameState 0051  
                   __end_of_TMR10_Initialize 16A5                             ___lwdiv@quotient 0026  
                                   ?_sprintf 0036                                    _errorsISR 1771  
                                   ?_strcspn 0027                                     ?_strncpy 0020  
                   __size_of_CCP7_Initialize 000A                               __size_of_putch 0001  
    applianceControl@dimmerSpeedStringBuffer 00CD                               ___wmul@product 0024  
                                  clear_ram0 1690                                  strncpy@from 0020  
                                   _PIE1bits 0091                                     _PIE2bits 0092  
                                strncpy@size 0021                                     _PIE3bits 0093  
                                   _PIE4bits 0094            _start_PWM_Generation_For_GreenLed 0150  
                         _SwitchStatusBuffer 00E6                            ?_applianceControl 004C  
                hexadecimalToDecimal@dec_val 002C                                     _PIR1bits 0011  
               __end_of_hexadecimalToDecimal 0C08                                     _PIR2bits 0012  
                                   _PIR3bits 0013                                     _PIR4bits 0014  
                   __size_of_TMR5_Initialize 000A                           ??_applianceControl 0052  
                         _SwitchStatusString 00E1                     __size_of_CCP8_Initialize 000A  
                          ??_TMR1_Initialize 0020                        hexadecimalToDecimal@i 0031  
                          ___wmul@multiplier 0020        SwitchOnStatustToGatway@SwitchOnNumber 0020  
              applianceControl@charSwitchLSB 004C                applianceControl@charSwitchMSB 00C5  
                   __size_of_TMR6_Initialize 0009                                   ?_errorsISR 0075  
                   __size_of_CCP9_Initialize 000A              __size_of_copyReceivedDataBuffer 0032  
                          ??_TMR2_Initialize 0020                            ?_CCP10_Initialize 0075  
                            ??_clearAllPorts 0020             ??_ReceivingIndicationLedBlinking 0020  
            ?_ReceivingIndicationLedBlinking 0075                  _mainDataReceiveStringLength 01E0  
                         ??_CCP10_Initialize 0020                         applianceControl@deno 00B1  
                       applianceControl@strH 00BF                         applianceControl@strL 00C2  
                           __size_of___ftdiv 00A9                             __size_of___ftmul 00B4  
                           __size_of___fttol 0087                            _allPeripheralInit 0894  
                           __size_of___lwdiv 0035                                     ___awtoft 0872  
                                   ___ftpack 0B21                                 ??_errorsMain 0022  
                           __size_of__doprnt 00E6                           _sendAcknowledgment 0852  
                          ??_TMR3_Initialize 0020                           ?_allPeripheralInit 0075  
                           __size_of_isdigit 000F                              ___lwdiv@divisor 0020  
                        ?_sendAcknowledgment 0075                              ___lwdiv@counter 0025  
                                   __ptext10 0816                                     __ptext11 0852  
                                   __ptext20 17E4                                     __ptext12 0800  
                                   __ptext21 0C08                                     __ptext13 05F9  
                                   __ptext30 1707                                     __ptext22 06DF  
                                   __ptext14 07FE                                     __ptext31 1712  
                                   __ptext23 0C8F                                     __ptext15 0A67  
                                   __ptext40 174C                                     __ptext32 16E8  
                                   __ptext24 0872                                     __ptext16 0B86  
                                   __ptext41 0A34                                     __ptext33 16FC  
                                   __ptext25 0B21                                     __ptext17 0833  
                                   __ptext42 0A01                                     __ptext34 169C  
                                   __ptext26 0894                                     __ptext18 0793  
                                   __ptext43 173B                                     __ptext35 179B  
                                   __ptext27 16AE                                     __ptext19 172C  
                                   __ptext44 08E5                                     __ptext36 16DE  
                                   __ptext28 16A5                                     __ptext45 1786  
                                   __ptext37 16D4                                     __ptext29 16F2  
                                   __ptext46 175D                                     __ptext38 16CA  
                                   __ptext39 16C0                     __size_of_TMR8_Initialize 0009  
                                   __ptext48 1771                          ??_allPeripheralInit 0020  
            applianceControl@charSwitchSTATE 004D                             __size_of_sprintf 001D  
                           __size_of_strcspn 0030                             __size_of_strncpy 002F  
                      main@dataBufferCounter 01E5                                  _partCounter 0136  
                          ??_TMR4_Initialize 0020                                __size_of_atoi 006B  
                              __size_of_main 04F0                           __end_of_errorsMain 17CA  
                          ??_CCP7_Initialize 0020                           _currentStateBuffer 02A0  
                                 _RC1STAbits 019D                         ??_sendAcknowledgment 0020  
                 hexadecimalToDecimal@hexVal 0030                    _IntegerBlueColorIntensity 0060  
                  __end_of_allPeripheralInit 08BB                                     int$flags 007E  
                                   atoi@sign 002A                     _IntegerAllColorIntensity 01D4  
                     _copyReceivedDataBuffer 09CF                            ??_TMR5_Initialize 0020  
                     _tempReceivedDataBuffer 01AE                 __size_of_GPIO_pin_Initialize 002C  
                          ??_CCP8_Initialize 0020                           _levelofBlueLed_LSB 00EC  
                         _levelofBlueLed_MSB 00ED                          applianceControl@end 00A6  
                         _switchNumberBuffer 01E2                               __pstringtext10 0000  
                                   isdigit@c 0021                         _hexadecimalToDecimal 0B86  
                                ??_errorsISR 0077                         _mainDatacopyPosition 0156  
                                   intlevel1 0000                                    sprintf@ap 003E  
                                  sprintf@pb 003F                                    sprintf@wh 003D  
                                  strchr@chr 0022                                    strchr@ptr 0020  
                          ??_TMR6_Initialize 0020                            __CFG_CLKOUTEN$OFF 0000  
        applianceControl@integerSwitchNumber 00CF                                    strcspn@s1 002D  
                                  strcspn@s2 0027                            ??_CCP9_Initialize 0020  
                  applianceControl@NeedPulse 00BB                                    strncpy@cp 0025  
                                  strncpy@to 0024                           _parentalLockBuffer 024E  
                                   printf@ap 0039                                     printf@pb 003A  
                         _StopBitStringbufer 0160                                __pstringtext1 1800  
                              __pstringtext2 1819                                __pstringtext3 1820  
                              __pstringtext4 1825                                __pstringtext5 182A  
                              __pstringtext6 182F                                __pstringtext7 1833  
                              __pstringtext8 1836                                __pstringtext9 1838  
                                   sprintf@f 0036                                     strcmp@s1 0024  
                                   strcmp@s2 0020                                     strlen@cp 0024  
                                   strcspn@i 002B                                _StopBitString 00DF  
                      ?_hexadecimalToDecimal 0026                                     strtok@s1 0033  
                                   strtok@s2 002E                                     strspn@s1 002D  
                                   strspn@s2 0027                                     strtok@sp 0062  
                                 _TX1STAbits 019E                            ?_TMR10_Initialize 0075  
                       _BlueLedSwitchCounter 01D6                     ?_SwitchOnStatustToGatway 0020  
           _ConvertmaindataReceiveIntoString 0069                          _levelofGreenLed_LSB 00E8  
                        _levelofGreenLed_MSB 00E9                           ??_TMR10_Initialize 0020  
                          ??_TMR8_Initialize 0020                              _TMR1_Initialize 16FC  
                   _SwitchOffStatustToGatway 0A01  
